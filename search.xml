<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>下载 m3u8 推流</title>
      <link href="posts/m3u8-stream-download/"/>
      <url>posts/m3u8-stream-download/</url>
      
        <content type="html"><![CDATA[<ol><li><p>在浏览器 Network 中查找 m3u8</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/%E4%B8%8B%E8%BD%BD%20m3u8%20%E6%8E%A8%E6%B5%81/image-20210221204910267.png" alt="image-20210221204910267"></p></li><li><p>如果是上图所示嵌套，逐级打开对应 m3u8 文件，直到出现 ts 文件列表和密钥</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/%E4%B8%8B%E8%BD%BD%20m3u8%20%E6%8E%A8%E6%B5%81/image-20210221205009425.png" alt="image-20210221205009425"></p></li><li><p>如果要先下载再合并，则观察 ts 文件 url 规律，使用 curl 批量下载文件</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://what-ever-[<span class="number">1</span>-<span class="number">999</span>].ts</span><br></pre></td></tr></table></figure></li><li><p>将 m3u8 文件下载到同一目录，并替换删除其中 url 前缀</p></li><li><p>按照 URI 参数值下载 m3u8 文件中的密钥 key 文件，应为16字节长度。同时改写 m3u8 文件中 key 路径使其指向此文件</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/%E4%B8%8B%E8%BD%BD%20m3u8%20%E6%8E%A8%E6%B5%81/image-20210221205501863.png" alt="image-20210221205501863"></p></li><li><p>使用 ffmpeg 批量解密合并 ts 文件即可获得 mp4 视频</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -loglevel error -allowed_extensions ALL -i prog-index.m3u8 -c <span class="built_in">copy</span> &quot;output.mkv&quot;</span><br></pre></td></tr></table></figure></li><li><p>如果要直接下载，则不需要下载 ts 文件，直接用 ffmpeg 解密 m3u8 文件</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -loglevel error -protocol_whitelist file,http,https,tcp,tls,crypto -allowed_extensions ALL -i prog-index.m3u8 -c <span class="built_in">copy</span> &quot;output.mkv&quot;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> m3u8 </tag>
            
            <tag> 推流 </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows WebDAV 文件大小限制</title>
      <link href="posts/windows-dav-limit/"/>
      <url>posts/windows-dav-limit/</url>
      
        <content type="html"><![CDATA[<p>This sets the maximum you can download from the WebDAV to 4 GB at one time, where 4 GB is the maximum value supported by Windows OS.</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line"><span class="section">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters]</span></span><br><span class="line"><span class="attr">&quot;FileSizeLimitInBytes&quot;</span>=dword:ffffffff</span><br></pre></td></tr></table></figure><p>参考: <a href="https://docs.druva.com/Knowledge_Base/inSync/Troubleshooting/WebDAV_download_fails_with_file_size_exceeds__the_limit_error">https://docs.druva.com/Knowledge_Base/inSync/Troubleshooting/WebDAV_download_fails_with_file_size_exceeds__the_limit_error</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> WebDAV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Sandbox 桥接网络</title>
      <link href="posts/windows-sandbox-bridged/"/>
      <url>posts/windows-sandbox-bridged/</url>
      
        <content type="html"><![CDATA[<p>使用 Windows 10 的 Sandbox 有时需要桥接主机网络，默认启动时是 NAT 网络，无法访问主机所在网络资源。</p><ol><li><p>启动 Sandbox，主机的网络管理中会出现 <code>vEthernet (Default Switch)</code></p></li><li><p>按住 Ctrl 同时选择上述连接与当前联网的连接，右键选择桥接。</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Sandbox%20%E6%A1%A5%E6%8E%A5%E7%BD%91%E7%BB%9C/image-20201005020749879.png" alt="image-20201005020749879"></p></li><li><p>如果报错提示预想外的错误，直接确定，可以看到两个连接中有一个已经加入桥接，另一个没有。如果是图中这样只有 vEthernet 在桥接中，则删除桥接，重复上一步重新添加，否则会导致主机断网。直到不报错，或者只有当前外部连接加入桥接时为止。</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Sandbox%20%E6%A1%A5%E6%8E%A5%E7%BD%91%E7%BB%9C/image-20201005020903542.png" alt="image-20201005020903542"></p></li><li><p>在没有加入桥接的 vEthernet 连接上右键，选择加入桥接，即可看到两个连接均为桥接。</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Sandbox%20%E6%A1%A5%E6%8E%A5%E7%BD%91%E7%BB%9C/image-20201005021549546.png" alt="image-20201005021549546"></p></li><li><p>此时在沙箱中查看 IP 应该已经处于同一网段。如果不成功则关闭沙箱重开，从上一步继续。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Sandbox </tag>
            
            <tag> 桥接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10 USB 图标改变解决</title>
      <link href="posts/windows-10-usb-icon-fix/"/>
      <url>posts/windows-10-usb-icon-fix/</url>
      
        <content type="html"><![CDATA[<p>Windows 的驱动服务器在 2019 年 11 月左右出现了一次 bug 导致所有的U盘图标均变为机柜，即使使用 <code>autorun.inf</code> 修改磁盘图标也无法生效，且单击弹出磁盘时，所有的设备名均变为 Device。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20USB%20%E5%9B%BE%E6%A0%87%E6%94%B9%E5%8F%98%E8%A7%A3%E5%86%B3/20191110175553.png" alt="20191110175553"></p><p>原因是 Windows 会联网获取设备驱动与图标，因此服务器端问题会影响本机驱动。驱动服务器问题后来已经修复，但本机已经下载的 USB 驱动还在，因此问题会残留。解决方案是删除已缓存的驱动程序。</p><ul><li><p>打开 <code>C:\ProgramData\Microsoft\Windows\DeviceMetadataCache\dmrccache\en-us</code> 如果目录下有文件，寻找在其中 <code>DeviceInformation</code> 目录中含有 <code>ico2001.ico</code> 的机柜图标的目录，并删除该目录。</p></li><li><p>重启</p></li><li><p>如果没有恢复，或者上述目录中没有文件，则打开控制面板，设备和打印机，删除最下面的无法识别的 Device</p><p>  <img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20USB%20%E5%9B%BE%E6%A0%87%E6%94%B9%E5%8F%98%E8%A7%A3%E5%86%B3/image-20200824195700272.png" alt="image-20200824195700272"></p></li><li><p>重新插拔设备，应该可以恢复。此时查看上述目录，应该已经没有文件存在。弹出磁盘的菜单也应恢复显示设备名。</p><p>  <img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20USB%20%E5%9B%BE%E6%A0%87%E6%94%B9%E5%8F%98%E8%A7%A3%E5%86%B3/image-20200824195842372.png" alt="image-20200824195842372">  <img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20USB%20%E5%9B%BE%E6%A0%87%E6%94%B9%E5%8F%98%E8%A7%A3%E5%86%B3/image-20200824200746369.png" alt="image-20200824200746369"></p></li></ul><p>参考/图片：<a href="https://noushibou.hatenadiary.jp/entry/2019/11/10/101358">https://noushibou.hatenadiary.jp/entry/2019/11/10/101358</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图标 </tag>
            
            <tag> Windows 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nextcloud 新建用户报错</title>
      <link href="posts/nextcloud-new-user-error/"/>
      <url>posts/nextcloud-new-user-error/</url>
      
        <content type="html"><![CDATA[<p>Nextcloud 新建用户时，日志提示错误：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Call</span> <span class="keyword">to</span> a member <span class="keyword">function</span> getSize() <span class="keyword">on</span> <span class="type">bool</span></span><br></pre></td></tr></table></figure><p>导致用户列表无法显示，且新用户无法登录。</p><p>原因是用户配额和 <code>quota_include_external_storage</code> 设置之间有冲突。</p><p>绕过方案为：</p><ul><li><p>修改<code>/var/www/html/config/config.php</code>：</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">‘quota_include_external_storage’ =&gt; <span class="literal">false</span>,</span><br></pre></td></tr></table></figure></li><li><p>此时用户列表可以显示，删除新建的出错用户</p></li><li><p>重新添加新用户，配额容量无限制</p></li><li><p>以新用户身份登陆一次，确认文件正常</p></li><li><p>将 <code>quota_include_external_storage</code> 改回去</p></li><li><p>根据需求限制新用户配额</p></li></ul><p>此时新用户可正常使用。</p><p>当共享大量文件给新用户时，由于被共享文件也计入用户配额使用，因此可能提示配额超限。</p><p>此外如果共享文件的 owner 曾出现误报存储已满问题时，即使通过修改 <code>quota_include_external_storage</code> 解决，被共享用户在进入共享文件目录时也仍会提示其他用户存储满。暂时无法解决，无实际影响可忽略。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Nextcloud%20%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E6%8A%A5%E9%94%99/image-20200813023129134.png" alt="image-20200813023129134"></p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nextcloud </tag>
            
            <tag> 报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nextcloud 误报存储已满</title>
      <link href="posts/nextcloud-storage-full/"/>
      <url>posts/nextcloud-storage-full/</url>
      
        <content type="html"><![CDATA[<p>在 Nextcloud 数据目录下 mount 其他位置的存储时，会误报存储已满。</p><p>问题原因在于统计文件大小时会将外部存储和被共享文件全部计入，而统计总容量时不计算外部存储和 mount 的其他位置。</p><p>修改<code>/var/www/html/config/config.php</code>，添加参数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">‘quota_include_external_storage’ =&gt; <span class="literal">true</span>,</span><br></pre></td></tr></table></figure><p>并且在用户配置中，将配额改为“无限”以外的具体数值：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/NextCloud%20%E8%AF%AF%E6%8A%A5%E5%AD%98%E5%82%A8%E5%B7%B2%E6%BB%A1/image-20200806172234483.png" alt="image-20200806172234483"></p><p>设置后当前用户不再提示存储满，但如果此用户分享文件给其他用户，则被分享用户访问时仍会提醒文件 owner 的存储满。</p><p>此外，即使 UI 上不提示，但 Nextcloud 内部的判定依然是存储满，因此 File Versioning 会因为空间不足而不工作，目前没有找到解决方法。因此不推荐层叠 mount 方式存储。</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nextcloud </tag>
            
            <tag> 误报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nextcloud 自动扫描硬盘文件更新</title>
      <link href="posts/nextcloud-auto-scan/"/>
      <url>posts/nextcloud-auto-scan/</url>
      
        <content type="html"><![CDATA[<p>Nextcloud 如果直接在数据目录进行读写文件，Web UI 上不会显示文件的实时更新。解决方案有三种。</p><h2 id="1-手动扫描更新"><a href="#1-手动扫描更新" class="headerlink" title="1. 手动扫描更新"></a>1. 手动扫描更新</h2><p>在命令行使用 <code>php occ files:scan --all</code> 手动扫描。在 docker 中执行需要用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/bash -c <span class="string">&quot;php /var/www/html/occ files:scan --all&quot;</span> -g users www-data</span><br></pre></td></tr></table></figure><p>其中 -g 后的参数依次为分组名和用户名。</p><h2 id="2-修改-config-php-自动扫描"><a href="#2-修改-config-php-自动扫描" class="headerlink" title="2. 修改 config.php 自动扫描"></a>2. 修改 config.php 自动扫描</h2><p>修改<code>/var/www/html/config/config.php</code>，添加参数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;filesystem_check_changes&#x27;</span> =&gt; <span class="literal">true</span>,</span><br></pre></td></tr></table></figure><p>实现自动扫描</p><h2 id="3-使用外部存储"><a href="#3-使用外部存储" class="headerlink" title="3. 使用外部存储"></a>3. 使用外部存储</h2><p>将需要直接读写的目录分离，并使用外部存储功能挂载。缺点是外部存储由插件实现，时常有 bug 出现。</p><p>参考：</p><p><a href="https://help.nextcloud.com/t/folders-and-filesystem-check-changes/8203">https://help.nextcloud.com/t/folders-and-filesystem-check-changes/8203</a></p><p><a href="https://it.ismy.fun/2018/11/12/nextcloud-auto-files-scan/">https://it.ismy.fun/2018/11/12/nextcloud-auto-files-scan/</a></p><p><a href="https://unix.stackexchange.com/questions/372850/how-to-run-command-as-different-user">https://unix.stackexchange.com/questions/372850/how-to-run-command-as-different-user</a></p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nextcloud </tag>
            
            <tag> 扫描硬盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QNAP 普通用户环境变量不生效解决</title>
      <link href="posts/qnap-env-var/"/>
      <url>posts/qnap-env-var/</url>
      
        <content type="html"><![CDATA[<p>内置 admin 用户的 home 位于 <code>/root</code> ，而新建用户的 home 位于 <code>/share/homes/USERNAME</code>。此目录缺乏各种 rc 文件。导致安装 opkg 等第三方工具时无法自动设置 path。</p><p>解决方案为使用普通用户登录 SSH 并定位到 home，然后把 root 目录里的各种配置文件软链接过来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln -s /root/.bash_logout .bash_logout</span><br><span class="line">ln -s /root/.bash_profile .bash_profile</span><br><span class="line">ln -s /root/.bashrc .bashrc</span><br><span class="line">ln -s /root/.profile .profile</span><br></pre></td></tr></table></figure><p>修改后普通用户的 prompt 也会变成 <code>#</code> ，非常迷惑，原因是 PS1 变量在 <code>.profile</code> 中被修改，<code>sudo vim .profile</code> 编辑该文件，注释掉第一行的修改语句即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># export PS1=&#x27;[\w] # &#x27;</span></span><br><span class="line">reset</span><br><span class="line"><span class="built_in">source</span> /opt/etc/profile</span><br></pre></td></tr></table></figure><p>威联通的系统似乎没有考虑过建立普通用户日常使用的问题，默认思维模式都是使用内置 admin 账户完成，软件质量比较一般。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QNAP </tag>
            
            <tag> 环境变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker volume 备份与恢复</title>
      <link href="posts/docker-volume-backup/"/>
      <url>posts/docker-volume-backup/</url>
      
        <content type="html"><![CDATA[<p><a href="https://jiajially.gitbooks.io/dockerguide/content/chapter_fastlearn/docker_run/--volumes-from.html">https://jiajially.gitbooks.io/dockerguide/content/chapter_fastlearn/docker_run/--volumes-from.html</a></p><p>使用 –volumes-from 创建一个加载 dbdata 容器卷的容器，并从本地主机挂载当前到容器的 /backup 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --volumes-from aaa -v $(<span class="built_in">pwd</span>):/backup alpine tar zcvf /backup/aaa.tar.gz /&lt;path&gt;</span><br></pre></td></tr></table></figure><p>volumes-from 创建的容器其挂载的所有数据卷路径均与原容器相同，因此 <code>&lt;path&gt;</code> 改为原容器数据卷的挂载位置即可。</p><p>容器启动后，使用了 tar 命令来将 dbdata 卷备份为本地的 /backup/backup.tar。 如果要恢复数据到一个容器，首先创建一个带有数据卷的目标容器。（或者先创建空数据卷）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -v volume_name:/volume_mount_path --name target alpine /bin/ash</span><br></pre></td></tr></table></figure><p>然后创建另一个容器，挂载 dbdata2 的容器，并使用 untar 解压备份文件到挂载的容器卷中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --volumes-from target -v $(<span class="built_in">pwd</span>):/backup alpine tar zxvf /backup/aaa.tar.gz -C /</span><br></pre></td></tr></table></figure><p>其中 <code>-C /</code> 表示解压路径从根目录开始，从而确保路径和备份时完全对应。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> volume </tag>
            
            <tag> 备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grav 主题 Granty 5 Helium 部分修复与改造[弃坑]</title>
      <link href="posts/grav-helium-mod/"/>
      <url>posts/grav-helium-mod/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Header-Owl-Carousel-副标题-Tablet-宽度下错位溢出问题"><a href="#1-Header-Owl-Carousel-副标题-Tablet-宽度下错位溢出问题" class="headerlink" title="1. Header Owl Carousel 副标题 Tablet 宽度下错位溢出问题"></a>1. Header Owl Carousel 副标题 Tablet 宽度下错位溢出问题</h2><p><code>user\data\gantry5\themes\g5_helium\scss\custom.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fix header subtitle overflow in tablet view</span></span><br><span class="line"><span class="comment">// user\themes\g5_helium\scss\helium\particles\_owlcarousel.scss:378</span></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> all <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">59.99rem</span>) <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">48rem</span>)&#123;</span><br><span class="line">    <span class="selector-class">.g-owlcarousel</span> <span class="selector-class">.g-owlcarousel-item-wrapper</span> <span class="selector-class">.g-owlcarousel-item-content-container</span> <span class="selector-class">.g-owlcarousel-item-content-wrapper</span> <span class="selector-class">.g-owlcarousel-item-content</span> &#123;</span><br><span class="line">        <span class="attribute">padding-top</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Mobile-宽度下菜单栏和-logo-位置错位问题"><a href="#2-Mobile-宽度下菜单栏和-logo-位置错位问题" class="headerlink" title="2. Mobile 宽度下菜单栏和 logo 位置错位问题"></a>2. Mobile 宽度下菜单栏和 logo 位置错位问题</h2><p>导航栏空白太大，将 Navigation 的部分设置 nomarginall 和 nopaddingall 后引起移动端错位，在此修正。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Grav%20%E4%B8%BB%E9%A2%98%20Granty%205%20Helium%20%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%94%B9%E9%80%A0/image-20200517194323886.png" alt="image-20200517194323886"></p><p><code>user\data\gantry5\themes\g5_helium\scss\custom.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fix menu icon position on mobile view</span></span><br><span class="line"><span class="comment">// user\themes\g5_helium\scss\helium\sections\_offcanvas.scss:45</span></span><br><span class="line"><span class="selector-class">.g-offcanvas-toggle</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0.7rem</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// gix logo position on mobile view</span><br><span class="line">// user\themes\g5_helium\scss\helium\particles\_logo.scss:<span class="number">25</span></span><br><span class="line">@media only all and (max-width: <span class="number">47.99rem</span>)&#123;</span><br><span class="line">    .g-logo &#123;</span><br><span class="line">        margin: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-导航栏滚动固定"><a href="#3-导航栏滚动固定" class="headerlink" title="3. 导航栏滚动固定"></a>3. 导航栏滚动固定</h2><p>使用 <a href="https://www.inspiretheme.com/blog/freebies/42-fixed-sticky-header-atoms-for-gantry-5-freebies">Fixed_Sticky Header Atoms for Gantry 5 (FREEBIES)</a> 实现</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grav </tag>
            
            <tag> Helium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华硕路由修改区域</title>
      <link href="posts/asus-region-mod/"/>
      <url>posts/asus-region-mod/</url>
      
        <content type="html"><![CDATA[<p>必须安装 Merlin 固件。</p><p>控制国家码的部分在 CFE 不能修改，且 nvram 修改后重启系统/服务即失效。<br>因此加到系统启动和服务启动的脚本即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch /jffs/scripts/init-start</span><br><span class="line">ln -s /jffs/scripts/init-start /jffs/scripts/service-event</span><br><span class="line">chmod a+rx /jffs/scripts/*</span><br><span class="line">vi /jffs/scripts/init-start</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">nvram <span class="built_in">unset</span> territory_code</span><br><span class="line">nvram <span class="built_in">set</span> location_code=JP</span><br><span class="line">nvram <span class="built_in">set</span> 0:ccode=JP</span><br><span class="line">nvram <span class="built_in">set</span> 1:ccode=JP</span><br><span class="line">nvram <span class="built_in">set</span> wl0_country_code=JP</span><br><span class="line">nvram <span class="built_in">set</span> wl1_country_code=JP</span><br></pre></td></tr></table></figure><p>并在 web 设置中 <code>Administration -&gt; System</code> 启用用户脚本。<br>其中 AA 为亚洲区，信号功率25，频段不全。需要其他频段时可设为 JP 或 TW。</p><p>然后在 Web 界面中重启路由器。</p><p>改好后语言菜单会解锁全部语言：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E4%BF%AE%E6%94%B9%E5%8C%BA%E5%9F%9F/image-20210421222345051.png" alt="image-20210421222345051"></p><p><a href="https://github.com/RMerl/asuswrt-merlin/wiki/User-scripts">User scripts · RMerl/asuswrt-merlin Wiki · GitHub</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华硕 </tag>
            
            <tag> 路由器 </tag>
            
            <tag> Merlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>废物利用为 Galaxy S6 SM-G9200 刷入可用系统</title>
      <link href="posts/galaxy-s6-system/"/>
      <url>posts/galaxy-s6-system/</url>
      
        <content type="html"><![CDATA[<p>Galaxy S6 发布于2015年，中国大陆公开版是双卡单4G，初始系统版本 5.0。我将其作为备用机多年来一直使用当年自行修改的旧版 6.0 系统，时过境迁现在已兼容性较差。三星已经发布了7.0版本的系统更新，因此试图更新到最新版本的 offical 系统。但中国版系统阉割严重，且有大量中国毒瘤App，无法直接使用。</p><p>尝试 Odin 刷入港版系统，不管是四件套还是一体包，单刷还是全部，均会验证失败。查阅得知该型号虽然港版和中国（内地，下略）版均标示型号为<code>SM-G9200</code>，但港版机型代号为<code>zerofltezh</code>，中国版为<code>zerofltezc</code>，基带不同，港版不支持中国电信网络，因此无法混刷。</p><p>故底包只能采用中国版官方固件。在此基础上刷入 GApps 使手机可用。</p><h2 id="1-刷入完整系统"><a href="#1-刷入完整系统" class="headerlink" title="1. 刷入完整系统"></a>1. 刷入完整系统</h2><p>使用 <a href="https://samfirmtool.com/"><code>SamFirm</code></a> 下载最新版<code>CHC</code>区域固件四件套：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%BA%9F%E7%89%A9%E5%88%A9%E7%94%A8%E4%B8%BA%20Galaxy%20S6%20SM-G9200%20%E5%88%B7%E5%85%A5%E5%8F%AF%E7%94%A8%E7%B3%BB%E7%BB%9F/image-20200425054145843.png" alt="image-20200425054145843"></p><p>使用最新版 <code>Odin</code> 刷入手机，重启，确认正常动作。</p><h2 id="2-刷入-CF-Auto-Root"><a href="#2-刷入-CF-Auto-Root" class="headerlink" title="2. 刷入  CF-Auto-Root"></a>2. 刷入  CF-Auto-Root</h2><p>在 <a href="https://desktop.firmware.mobi/">其网站主页</a> 输入型号G9200后，选择 <code>zerofltezc</code> 版本：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%BA%9F%E7%89%A9%E5%88%A9%E7%94%A8%E4%B8%BA%20Galaxy%20S6%20SM-G9200%20%E5%88%B7%E5%85%A5%E5%8F%AF%E7%94%A8%E7%B3%BB%E7%BB%9F/image-20200425054507054.png" alt="image-20200425054507054"></p><p>点击最新固件，在其下载页面单击 Configure：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%BA%9F%E7%89%A9%E5%88%A9%E7%94%A8%E4%B8%BA%20Galaxy%20S6%20SM-G9200%20%E5%88%B7%E5%85%A5%E5%8F%AF%E7%94%A8%E7%B3%BB%E7%BB%9F/image-20200425054555517.png" alt="image-20200425054555517"></p><p>在配置选项中，<code>Installation type</code> 选择 <code>Systemless Image</code>，<code>Advanced Encryption Options</code> 中 <code>dm-verify</code> 选择 <code>Remove</code> ，其他保持默认，点击 <code>Generate</code> 生成刷机镜像，可能需要排队，且下载速度较慢。</p><p>下载后使用 Odin 在 AP 中刷入手机，重启，确认正常动作。</p><h2 id="3-刷入-Magisk"><a href="#3-刷入-Magisk" class="headerlink" title="3. 刷入 Magisk"></a>3. 刷入 Magisk</h2><p>SuperSU 作者已经弃坑不再更新，当前使用 <a href="https://github.com/topjohnwu/Magisk"><code>Magisk</code></a> 管理SU权限。但我们目前没有安装 custom recovery，故不使用 zip 包直接安装，而采用 patch 系统镜像并用 Odin 刷入的方式安装。</p><ol><li>在 GitHub Release 页面获取最新的 <code>Magisk Manager</code> 并安装。</li><li>使用 <code>7-zip</code> 打开 rom 四件套中的 AP 文件，解压其中 <code>boot.img</code> 并复制到手机中。</li><li>运行 <code>Magisk Manager</code> ，点击安装 Magisk，选择 Patch 镜像，并继续在文件浏览中选择刚才提取的 <code>boot.img</code>。（注：根据官方文档，可以选择 Patch boot 或者 recovery，但测试 recovery 不成功，故此处采用 boot）</li><li>将 patch 过后的 IMG 文件复制回电脑，更名为 <code>boot.img</code>，并使用 <code>7-zip</code> 等压缩软件打包为 tar 格式。</li><li>在 Odin 的 AP 中选中刚才打包的 tar 包，刷入手机。</li><li>重启，进入 <code>Magisk Manager</code> ，选择同意下载安装，再次重启后确认正常动作。</li></ol><h2 id="4-刷入修改版-TWRP-recovery"><a href="#4-刷入修改版-TWRP-recovery" class="headerlink" title="4. 刷入修改版 TWRP recovery"></a>4. 刷入修改版 TWRP recovery</h2><p>TWRP 没有正式提供 G9200 版本的支持。多年前 <a href="https://www.weibo.com/1649111590">Xiao1u</a> 曾提供过修改过的兼容版本 <code>G9200-PC1-TWRP-3.0-PC1-0324.tar</code> ，搜索即可获得，此版本对 7.0 系统的兼容不完美，有可能会导致 bootloop。参考 <a href="https://jtechboard.blogspot.com/2017/09/galaxy-s6-sm-g9200-china-model.html">J Tech board 的解决方案</a>，在确认 <code>dm-verify</code> 已关闭后，使用 Odin 刷入该文件。刷入时取消 Odin 中 Auto Reboot 的勾选。刷完后使用 Vol+ Home Pow 三键进入 recovery，什么都不做直接选择重启到系统，询问是否阻止系统还原 Recovery 时选择忽略。确认依然能正常进入系统。</p><h2 id="5-删除自带的中国-App-和字体等"><a href="#5-删除自带的中国-App-和字体等" class="headerlink" title="5. 删除自带的中国 App 和字体等"></a>5. 删除自带的中国 App 和字体等</h2><p>如果不删除，后面刷入 GApps 可能导致系统空间不足。即使删除后仍要使用，可以事后重新安装到用户空间。</p><p>安装 <a href="https://apkpure.com/jp/system-app-remover-root-needed/com.jumobile.manager.systemapp">System App Remover</a> 查看想要移除的内置应用，长按可以获得该应用的路径。使用 <a href="https://apkpure.com/solid-explorer-file-manager/pl.solidexplorer2">Solid Explorer</a> 定位并删除文件。</p><h2 id="6-刷入-Gapps"><a href="#6-刷入-Gapps" class="headerlink" title="6. 刷入 Gapps"></a>6. 刷入 Gapps</h2><p>在 <a href="https://opengapps.org/">OpenGapps</a> 的主页获得 zip 刷机包，传输至手机，重启至 TWRP 后选择刷入。注意此处如果直接刷入 7.0 系统对应的 nano 或者 pico 包，<a href="https://github.com/opengapps/opengapps/issues/724#issuecomment-497997441">会导致系统 WebView 被删除</a>，从而导致 Google 账户无法登录等问题，无法使用。</p><p>解决方案有两个思路，一是安装新的 Chrome WebView 替代被删除的原生 WebView，二是避免原生 WebView 被删除。经测试，即使安装Chrome 也仍然不能恢复该组件正常使用，可能三星对允许使用的 WebView 做了限制，或有其他兼容性问题。避免 WebView 被删除则可以通过<a href="https://github.com/opengapps/opengapps/wiki/Advanced-Features-and-Options">添加配置文件</a> ，或者<a href="https://github.com/opengapps/opengapps/issues/724#issuecomment-498086440">添加 package-overlay 重新编译</a> 等方法。这里使用相对比较简单的<a href="https://github.com/opengapps/opengapps/issues/724#issuecomment-612578593">修改安装脚本</a>方式完成。</p><p>下载 pico 版本 OpenGApps zip 包后，解压提取 <code>install.sh</code> 文件，搜索：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> List of GApps files that should NOT be automatically removed as they are also included <span class="keyword">in</span> (many) ROMs removal_bypass_list</span></span><br></pre></td></tr></table></figure><p>并在其后的空引号内加入 <code>WebViewGoogle</code>，保存退出，将修改后的文件压入 zip 包，重启手机进入 TWRP 刷入即可。</p><p>刷好后清空缓存，进入系统开发者模式，查看 “实装的 WebView” 选项不为空，即可。推荐重启手机，双清后从向导开始重新初始化系统，避免谷歌系列服务出现授权问题。</p><h2 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h2><p>避免购买在中国大陆境内售卖的任何具有中国定制 Rom 的电子产品（包括无线耳机等具有中国区定制 Firmware 的产品），并 7x24 连接<strong>全球互联网</strong>，和全球大多数国家和地区的用户保持类似的软件使用习惯，可以避免绝大多数的烦恼。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Galaxy S6 </tag>
            
            <tag> SM-G9200 </tag>
            
            <tag> 刷机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VHDX 空间释放</title>
      <link href="posts/vhdx-release/"/>
      <url>posts/vhdx-release/</url>
      
        <content type="html"><![CDATA[<p>动态磁盘不会自动释放，因此如果有需要可以手动释放。似乎 exFat 分区效果不佳。</p><p>如果虚拟磁盘已经挂载，需要先卸载。然后运行 <code>diskpart</code>，执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select vdisk file&#x3D;&quot;&lt;Path to VHDX&gt;&quot;</span><br><span class="line">attach vdisk readonly</span><br><span class="line">compact vdisk</span><br><span class="line">detach vdisk</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://blog.littlelanmoe.com/%E6%9D%82%E8%B0%88/364">https://blog.littlelanmoe.com/杂谈/364</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VHDX </tag>
            
            <tag> 空间释放 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux MAC 地址伪装</title>
      <link href="posts/linux-mac-faking/"/>
      <url>posts/linux-mac-faking/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wiki.archlinux.jp/index.php/MAC_%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E5%81%BD%E8%A3%85#.E6.96.B9.E6.B3.95_1:_systemd-networkd">https://wiki.archlinux.jp/index.php/MAC_アドレス偽装#.E6.96.B9.E6.B3.95_1:_systemd-networkd</a></p><p>Tested on Ubuntu 18.04 LTS</p><p>创建系统服务，每次开机时使用 ip link set 修改 mac 地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/macspoof@.service</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=MAC Address Change %I</span><br><span class="line"><span class="attr">Wants</span>=network-pre.target</span><br><span class="line"><span class="attr">Before</span>=network-pre.target</span><br><span class="line"><span class="attr">BindsTo</span>=sys-subsystem-net-devices-%i.device</span><br><span class="line"><span class="attr">After</span>=sys-subsystem-net-devices-%i.device</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=<span class="literal">on</span>eshot</span><br><span class="line"><span class="attr">ExecStart</span>=/sbin/ip link set dev %i address <span class="number">90</span>:<span class="number">2</span>b:<span class="number">34</span>:d2:<span class="number">15</span>:<span class="number">25</span></span><br><span class="line"><span class="attr">ExecStart</span>=/sbin/ip link set dev %i up</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> macspoof@eth0.service</span><br></pre></td></tr></table></figure><p>已知问题：有时涉及网络的重启（推测如 docker）会导致失效。此时需要重启服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service macspoof@eno2 restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MAC 地址伪装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QNAP 硬盘不休眠解决</title>
      <link href="posts/qnap-hdd-wont-sleep/"/>
      <url>posts/qnap-hdd-wont-sleep/</url>
      
        <content type="html"><![CDATA[<h2 id="0-系统-raid-结构"><a href="#0-系统-raid-结构" class="headerlink" title="0. 系统 raid 结构"></a>0. 系统 raid 结构</h2><p>使用 <code>cat /proc/mdstat</code> 可以查看所有 raid 卷。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Personalities</span> :<span class="meta"> [linear] [raid0] [raid1] [raid10] [raid6] [raid5] [raid4] [multipath]</span></span><br><span class="line"><span class="attribute">md3</span> : active raid<span class="number">1</span> sdc<span class="number">3</span>[<span class="number">0</span>]</span><br><span class="line">      <span class="attribute">3897063616</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [1/1] [U]</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">md2</span> : active raid<span class="number">1</span> sda<span class="number">3</span>[<span class="number">0</span>]</span><br><span class="line">      <span class="attribute">7804071616</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [1/1] [U]</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">md1</span> : active raid<span class="number">1</span> sdb<span class="number">3</span>[<span class="number">0</span>]</span><br><span class="line">      <span class="attribute">392120832</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [1/1] [U]</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">md322</span> : active raid<span class="number">1</span> sda<span class="number">5</span>[<span class="number">1</span>] sdc<span class="number">5</span>[<span class="number">0</span>]</span><br><span class="line">      <span class="attribute">7235136</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [2/2] [UU]</span></span><br><span class="line">      <span class="attribute">bitmap</span>: <span class="number">0</span>/<span class="number">1</span> pages<span class="meta"> [0KB], 65536KB chunk</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">md256 : active raid1 sda2[1] sdc2[0]</span></span><br><span class="line">      <span class="attribute">530112</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [2/2] [UU]</span></span><br><span class="line">      <span class="attribute">bitmap</span>: <span class="number">0</span>/<span class="number">1</span> pages<span class="meta"> [0KB], 65536KB chunk</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">md321 : active raid1 sdb5[0]</span></span><br><span class="line">      <span class="attribute">8283712</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [2/1] [U_]</span></span><br><span class="line">      <span class="attribute">bitmap</span>: <span class="number">0</span>/<span class="number">1</span> pages<span class="meta"> [0KB], 65536KB chunk</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">md13 : active raid1 sda4[0] sdc4[33] sdb4[32]</span></span><br><span class="line">      <span class="attribute">458880</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [32/3] [UUU_____________________________]</span></span><br><span class="line">      <span class="attribute">bitmap</span>: <span class="number">1</span>/<span class="number">1</span> pages<span class="meta"> [4KB], 65536KB chunk</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">md9 : active raid1 sda1[0] sdc1[33] sdb1[32]</span></span><br><span class="line">      <span class="attribute">530048</span> blocks super <span class="number">1</span>.<span class="number">0</span><span class="meta"> [32/3] [UUU_____________________________]</span></span><br><span class="line">      <span class="attribute">bitmap</span>: <span class="number">1</span>/<span class="number">1</span> pages<span class="meta"> [4KB], 65536KB chunk</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">unused devices: &lt;none&gt;</span></span><br></pre></td></tr></table></figure><p>注意到 md9 md13 md322 md256 均是横跨了机械硬盘的 raid 卷。搜索后得知 md9 和 md13 是系统自动创建的跨所有硬盘的 raid1 数据卷，存储系统配置和目录等。md322 和 md256 是系统 swap 分区。</p><h2 id="1-系统分区-raid-反复读取"><a href="#1-系统分区-raid-反复读取" class="headerlink" title="1. 系统分区 raid 反复读取"></a>1. 系统分区 raid 反复读取</h2><p>使用 <a href="https://drive.google.com/file/d/0B8u8qWRYVhv0S1ozWFRjazFEX1E/view">blkdevMonitor.sh</a> 脚本查看硬盘读写，可以看到大量 md9 相关读取。因此首先处理 md9 和 md13。</p><p>使用 <code>parted /dev/sdb print</code> 命令查看各硬盘，通过容量判断 sdb 是 SSD，sda 和 sdc 是两块机械硬盘。因此将 SSD 以外的硬盘从阵列中踢出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Disconnecting md9&quot;</span></span><br><span class="line">mdadm /dev/md9 --fail /dev/sda1</span><br><span class="line">mdadm /dev/md9 --fail /dev/sdc1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Disconnecting md13&quot;</span></span><br><span class="line">mdadm /dev/md13 --fail /dev/sda4</span><br><span class="line">mdadm /dev/md13 --fail /dev/sdc4</span><br></pre></td></tr></table></figure><p>使用 <code>mdadm -D /dev/md9</code> 验证移除是否成功</p><p>然后使用 <code>hdparm -y /dev/sda</code> 立即休眠硬盘，并使用 <code>hdparm -C /dev/sda</code>查看硬盘状态，<code>active/idle</code> 或者 <code>standby</code></p><p>但断开连接时万一系统盘损坏，则系统数据会丢失，因此每天同步一次。使用下列脚本恢复连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Re-adding md9&quot;</span></span><br><span class="line">mdadm /dev/md9 --re-add /dev/sda1</span><br><span class="line">mdadm /dev/md9 --re-add /dev/sdc1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Re-adding md13&quot;</span></span><br><span class="line">mdadm /dev/md13 --re-add /dev/sda4</span><br><span class="line">mdadm /dev/md13 --re-add /dev/sdc4</span><br></pre></td></tr></table></figure><p>保存上述两个脚本后（记得添加 x 权限），使用 crontab 每天运行一次，加回去15分钟后断开连接，应足够其完成同步。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span> 15 0 \* \* \* /share/homes/Tojo/rebuild_internal_raid.sh &gt;&gt; /etc/config/crontab</span><br><span class="line">sudo <span class="built_in">echo</span> 30 0 \* \* \* /share/homes/Tojo/disconnect_internal_raid.sh &gt;&gt; /etc/config/crontab</span><br><span class="line">sudo crontab /etc/config/crontab &amp;&amp; sudo /etc/init.d/crond.sh restart</span><br></pre></td></tr></table></figure><p>并修改启动脚本使其自动生效。</p><h2 id="2-swap-分区"><a href="#2-swap-分区" class="headerlink" title="2. swap 分区"></a>2. swap 分区</h2><p>使用 <code>cat /proc/swaps</code> 查看系统 swap 分区，发现很诡异地两个 swap 都建立在机械硬盘上。</p><p>但目前看起来不是很影响休眠，就先不管他了。</p><p>参考：</p><p><a href="https://forum.qnap.com/viewtopic.php?f=55&t=130788">Advanced guide to how I completely silenced my TS-453A - QNAP NAS Community Forum</a></p><p><a href="https://forum.qnap.com/viewtopic.php?t=114286">md clarification please_ - QNAP NAS Community Forum</a></p><p><a href="https://wiki.qnap.com/wiki/Find_out_which_process_prevents_the_hard_drives_from_spindown">Find out which process prevents the hard drives from spindown - QNAPedia</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QNAP </tag>
            
            <tag> 硬盘 </tag>
            
            <tag> 休眠 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QNAP 添加定时任务</title>
      <link href="posts/qnap-crontab/"/>
      <url>posts/qnap-crontab/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/config/crontab</span><br><span class="line">sudo crontab -l</span><br><span class="line">crontab /etc/config/crontab &amp;&amp; /etc/init.d/crond.sh restart</span><br></pre></td></tr></table></figure><p>记得把要运行的命令属性 +x</p><p>参考：</p><p><a href="https://wiki.qnap.com/wiki/Add_items_to_crontab">Add items to crontab</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QNAP </tag>
            
            <tag> crontab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QNAP 修改 sudoers</title>
      <link href="posts/qnap-mod-sudoers/"/>
      <url>posts/qnap-mod-sudoers/</url>
      
        <content type="html"><![CDATA[<p>威联通 NAS 默认 sudoers 仅包括内置 admin 账户，修改时需要编辑 <code>/usr/etc/sudoers</code> 文件。</p><p>但 <code>/usr/etc</code> 目录中的编辑在重启后均会复原。因此需要在<code>系统设置-&gt;硬件</code>中打开允许 <code>autorun.sh</code> 运行选项，并且编辑该文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount $(/sbin/hal_app --get_boot_pd port_id=0)6 /tmp/config</span><br><span class="line">vim /tmp/config/autorun.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">mkdir -p /usr/etc/sudoers.d</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Tojo ALL=(ALL) ALL&quot;</span> &gt; /usr/etc/sudoers.d/Tojo</span><br></pre></td></tr></table></figure><p>如此即可在重启后自动修改 sudoers。如果直接向 <code>/usr/etc/sudoers</code> 末尾写入配置的话，由于该配置文件最后一行为 include 命令，因此会导致在此之后写入的配置无法生效。因此选择向其加载的配置目录中写入新文件。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QNAP </tag>
            
            <tag> sudoers </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QNAP 添加启动项</title>
      <link href="posts/qnap-startup/"/>
      <url>posts/qnap-startup/</url>
      
        <content type="html"><![CDATA[<p>在<code>系统设置-&gt;硬件</code>中打开允许 <code>autorun.sh</code> 运行选项，并且编辑该文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount $(/sbin/hal_app --get_boot_pd port_id=0)6 /tmp/config</span><br><span class="line">or sudo mount $(sudo /sbin/hal_app --get_boot_pd port_id=0)6 /tmp/config</span><br><span class="line">vim /tmp/config/autorun.sh</span><br></pre></td></tr></table></figure><p>必须添加 shebang，否则会报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://wiki.qnap.com/wiki/Running_Your_Own_Application_at_Startup">Running Your Own Application at Startup</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QNAP </tag>
            
            <tag> 启动项 </tag>
            
            <tag> autorun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华硕路由添加 DDNS 服务</title>
      <link href="posts/asus-ddns/"/>
      <url>posts/asus-ddns/</url>
      
        <content type="html"><![CDATA[<p>以 dockdns 为例，必须安装 Merlin 固件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /jffs/scripts/ddns-start</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># register a subdomain at https://www.duckdns.org/ to get your token</span></span><br><span class="line">SUBDOMAIN=<span class="string">&quot;your_subdomain&quot;</span></span><br><span class="line">TOKEN=<span class="string">&quot;your-token&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># no modification below needed</span></span><br><span class="line">curl --silent <span class="string">&quot;https://www.duckdns.org/update?domains=<span class="variable">$SUBDOMAIN</span>&amp;token=<span class="variable">$TOKEN</span>&amp;ip=<span class="variable">$1</span>&quot;</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    /sbin/ddns_custom_updated 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    /sbin/ddns_custom_updated 0</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+rx /jffs/scripts/*</span><br></pre></td></tr></table></figure><p>并在 web 设置中 <code>Administration -&gt; System</code> 启用用户脚本，在 <code>WAN -&gt; DDNS -&gt; DDNS Service</code> 中设置为<code>custom</code> 即可。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华硕 </tag>
            
            <tag> 路由器 </tag>
            
            <tag> Merlin </tag>
            
            <tag> DDNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 禁止未授权 URL 访问（HTTP 444）</title>
      <link href="posts/nginx-ban-url/"/>
      <url>posts/nginx-ban-url/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line">    listen 443 default_server ssl;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;coder17.com-0001&#x2F;fullchain.pem;</span><br><span class="line">    ssl_certificate_key &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;coder17.com-0001&#x2F;privkey.pem;</span><br><span class="line">    server_name _;</span><br><span class="line">    return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中证书可以随便指定</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 过滤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装 mosh 与 byobu</title>
      <link href="posts/install-mosh-byobu/"/>
      <url>posts/install-mosh-byobu/</url>
      
        <content type="html"><![CDATA[<h2 id="1-mosh"><a href="#1-mosh" class="headerlink" title="1 mosh"></a>1 mosh</h2><p>在延迟过高的服务器上操作时，使用 mosh 来通过 UDP 连接加强体验。甚至网络中断后重连或系统休眠后仍能维持连接。<br>默认使用 60000 以上端口，一个 UDP 只能有一个连接。<br>此处配置成和 ssh 使用相同端口来方便连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mosh</span><br></pre></td></tr></table></figure><p>连接时： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosh -p &lt;mosh port&gt; --ssh=<span class="string">&#x27;ssh -p &lt;ssh port&gt;&#x27;</span> &lt;user&gt;@&lt;server address&gt;</span><br></pre></td></tr></table></figure><h3 id="1-1-WinSCP-中使用-mosh"><a href="#1-1-WinSCP-中使用-mosh" class="headerlink" title="1.1 WinSCP 中使用 mosh"></a>1.1 WinSCP 中使用 mosh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosh -p !<span class="comment"># --ssh=&#x27;ssh -p !#&#x27; !U@!@</span></span><br></pre></td></tr></table></figure><h3 id="1-2-端口转发注意点"><a href="#1-2-端口转发注意点" class="headerlink" title="1.2 端口转发注意点"></a>1.2 端口转发注意点</h3><p>因为 mosh 所使用的端口是客户端连接时指定的，所以不能转发到不同的端口。<br>比如通过把服务器的 60001 UDP 转发到 50001，再使用 mosh -p 50001，是无法连接的。<br>需要转发到相同端口连接。<br>为避免麻烦，使用与转发的 ssh TCP 端口相同的端口即可。</p><h2 id="2-byobu"><a href="#2-byobu" class="headerlink" title="2 byobu"></a>2 byobu</h2><p>mosh 单一端口只支持一个连接，所以要多线操作时不方便使用多连接的方式，因此需要分屏操作。<br>tmux 快捷键十分反人类，难以记忆，得不偿失。虽然可以修改，但往往使用 docker 或公用服务器时一一修改非常麻烦。<br>因此选择默认快捷键适合人类使用的 byobu。byobu 是日语びょうぶ屏風。<br>byobu 可以选择基于 tmux 后端还是 screen 后端。使用 <code>byobu-select-backend</code> 进行切换。<br>一般 ubuntu 会内置 byobu，非常方便。</p><h3 id="2-1-快捷键"><a href="#2-1-快捷键" class="headerlink" title="2.1 快捷键"></a>2.1 快捷键</h3><p>F2 新建 Window， F3 F4 移动到 Window<br>Shift F2 上下分割，Ctrl F2 左右分割<br>Shift F3 F4 移动到分屏，Ctrl F6 关闭当前分屏<br>Shift + 方向键 移动到分屏<br>F5 重载配置文件，Shift F5 似乎是切换状态栏<br>F6 Detach session<br>F7 滚动模式，按 pgup pgdn 滚屏，回车退出<br>Alt + pgup/pgdn 直接滚屏<br>F8 修改 Window 名<br>F9 配置，Shift + F12 切换F键有效性<br>Shift + F11 最大化当前窗口</p><h3 id="2-2-时间换行问题"><a href="#2-2-时间换行问题" class="headerlink" title="2.2 时间换行问题"></a>2.2 时间换行问题</h3><p>有时状态栏最后一位时间会换行，导致状态栏错位。这是因为当前终端字体不支持系统 logo 的特殊字符显示。按 F9 进配置，选择 <code>Toggle status notifications</code>，去掉 logo，Apply 即可。</p><h3 id="2-3-提示符风格"><a href="#2-3-提示符风格" class="headerlink" title="2.3 提示符风格"></a>2.3 提示符风格</h3><p>默认配色不是默认配色，使用 <code>byobu-disable-prompt</code> 恢复默认。</p><h3 id="2-4-256色不支持"><a href="#2-4-256色不支持" class="headerlink" title="2.4 256色不支持"></a>2.4 256色不支持</h3><p>部分版本切换到默认配色时会不支持 256 色，<code>echo $TERM</code> 返回 <code>screen</code>。<br>这是默认 tmux 配置的问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim <span class="variable">$BYOBU_PREFIX</span>/share/byobu/profiles/tmux</span><br></pre></td></tr></table></figure><p>查找 <code>set -g default-terminal &quot;screenr&quot;</code> 修改为 <code>set -g default-terminal &quot;screen-256color&quot;</code></p><h3 id="2-5-支持滚轮和鼠标"><a href="#2-5-支持滚轮和鼠标" class="headerlink" title="2.5 支持滚轮和鼠标"></a>2.5 支持滚轮和鼠标</h3><p>Alt + F12 切换鼠标支持</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%AE%89%E8%A3%85%20mosh%20%E4%B8%8E%20byobu/image-20210421235258827.png" alt="image-20210421235258827"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mosh </tag>
            
            <tag> byobu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置 Ubuntu 18.04 自动更新</title>
      <link href="posts/ubuntu-1804-autoupdate/"/>
      <url>posts/ubuntu-1804-autoupdate/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install unattended-upgrades</span><br><span class="line">sudo vim /etc/apt/apt.conf.d/50unattended-upgrades</span><br></pre></td></tr></table></figure><p>去掉 update 一行前的注释，并修改自动清除未用包的设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;$&#123;distro_id&#125;:$&#123;distro_codename&#125;-updates&quot;;</span><br><span class="line">...</span><br><span class="line">Unattended-Upgrade::Remove-Unused-Kernel-Packages &quot;true&quot;;</span><br><span class="line">Unattended-Upgrade::Remove-Unused-Dependencies &quot;true&quot;;</span><br></pre></td></tr></table></figure><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%20Ubuntu%2018.04%20%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/image-20191117001230583.png" alt="image-20191117001230583"></p><p>然后修改重启配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/apt.conf.d/20auto-upgrades</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">APT::Periodic::Update-Package-Lists &quot;1&quot;;</span><br><span class="line">APT::Periodic::Unattended-Upgrade &quot;1&quot;;</span><br></pre></td></tr></table></figure><p>最后测试运行，确认生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo unattended-upgrades –dry-run –debug</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 自动更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 远程投屏方案</title>
      <link href="posts/remote-control/"/>
      <url>posts/remote-control/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Windows-gt-Android"><a href="#1-Windows-gt-Android" class="headerlink" title="1 Windows-&gt;Android"></a>1 Windows-&gt;Android</h2><h3 id="1-1-VNC-协议"><a href="#1-1-VNC-协议" class="headerlink" title="1.1 VNC 协议"></a>1.1 VNC 协议</h3><p>使用 <a href="https://play.google.com/store/apps/details?id=com.realvnc.viewer.android">VNC Viewer</a></p><p>优点：</p><ul><li>   屏幕没有工具栏</li></ul><p>缺点：</p><ul><li>   需要鼠标操作，不能用键盘/遥控器定位</li><li>   间歇性断线</li><li>   没有声音</li></ul><h3 id="1-2-RDP-协议"><a href="#1-2-RDP-协议" class="headerlink" title="1.2 RDP 协议"></a>1.2 RDP 协议</h3><p>使用 <a href="https://play.google.com/store/apps/details?id=com.devolutions.remotedesktopmanager">Remote Desktop Manager</a></p><p>优点：</p><ul><li>   键盘可以操作</li><li>   稳定</li><li>   有声音</li></ul><p>缺点：</p><ul><li>第一次创建连接需要用鼠标点</li><li>工具栏需要操作才能消去</li></ul><h3 id="1-3-向日葵软件"><a href="#1-3-向日葵软件" class="headerlink" title="1.3 向日葵软件"></a>1.3 向日葵软件</h3><p>使用 <a href="https://sunlogin.oray.com/zh_CN/remote/screen">远程投屏-向日葵</a></p><p>优点：</p><ul><li>暂缺</li></ul><p>缺点：</p><ul><li>依赖公网</li><li>依赖第三方服务</li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 投屏 </tag>
            
            <tag> 远程控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Ubuntu VPS 上引导 iso 安装纯净系统</title>
      <link href="posts/vps-boot-from-iso/"/>
      <url>posts/vps-boot-from-iso/</url>
      
        <content type="html"><![CDATA[<p>租用 VPS 厂商的机器时，一般只能预装厂商原有的镜像。有时镜像并不纯净，厂商会在里面加料。因此需要安装原版系统。下面以腾讯云重新安装 Ubuntu 18.04 LTS 为例。</p><h2 id="1-检测系统环境"><a href="#1-检测系统环境" class="headerlink" title="1. 检测系统环境"></a>1. 检测系统环境</h2><h3 id="1-1-确定系统有-grub"><a href="#1-1-确定系统有-grub" class="headerlink" title="1.1 确定系统有 grub"></a>1.1 确定系统有 grub</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="1-2-确认分区布局"><a href="#1-2-确认分区布局" class="headerlink" title="1.2 确认分区布局"></a>1.2 确认分区布局</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p>查看 <code>/</code>  和 <code>/boot</code> 目录是否在不同分区。如果仅有根目录，处理较为容易，否则在后续步骤中需要注意。</p><h2 id="2-下载系统镜像"><a href="#2-下载系统镜像" class="headerlink" title="2. 下载系统镜像"></a>2. 下载系统镜像</h2><p>注意：Ubuntu 如果使用常规 iso，安装会报错，因此使用网络安装版（Network installer）的iso。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget -O /boot/isoboot.iso http://archive.ubuntu.com/ubuntu/dists/bionic-updates/main/installer-amd64/current/images/netboot/mini.iso</span><br></pre></td></tr></table></figure><h2 id="3-准备-Memdisk"><a href="#3-准备-Memdisk" class="headerlink" title="3. 准备 Memdisk"></a>3. 准备 Memdisk</h2><p>原理是将 iso 镜像读入内存。使用 apt 安装 Syslinux：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install syslinux -y</span><br></pre></td></tr></table></figure><p>复制 memdisk 文件到引导目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -f /usr/lib/syslinux/memdisk /boot/memdisk</span><br></pre></td></tr></table></figure><h2 id="4-修改-Grub-引导"><a href="#4-修改-Grub-引导" class="headerlink" title="4. 修改 Grub 引导"></a>4. 修改 Grub 引导</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/grub.d/41_custom</span><br></pre></td></tr></table></figure><p>插入以下内容到 EOF 之前：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">menuentry &#x27;OS Web Install&#x27; &#123;</span><br><span class="line">    insmod part_msdos</span><br><span class="line">        insmod part_gpt</span><br><span class="line">        insmod ext2</span><br><span class="line">    set root=(hd0,msdos1)</span><br><span class="line">    echo &#x27;Loading memdisk ...&#x27;</span><br><span class="line">    linux16 /boot/memdisk raw iso</span><br><span class="line">    echo &#x27;Loading ISO ...&#x27;</span><br><span class="line">    initrd16 /boot/isoboot.iso</span><br><span class="line">    echo &#x27;Booting ISO ...&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，此处根据刚才分析分区布局时候的结果而有所不同：</p><blockquote><ul><li>如果你的服务器是单块硬盘，而且只有一个分区，那么root的值为 <strong>(hd0,msdos1)</strong></li><li>如果你的服务器的单块硬盘，存在不止一个分区，看 /boot 分区在哪个盘上，比如在 /dev/vda5 上，那就是 <strong>(hd0,msdos5)</strong></li><li>其他更复杂的情况，重启服务器，到达 Grub 界面时按下 <strong>C</strong> 键，进入 Grub 命令行，并按照以下步骤操作：</li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">grub&gt;</span><span class="bash"> ls</span></span><br><span class="line">(hd0) (hd0,msdos1) (hd0,msdos5)</span><br><span class="line"><span class="meta">grub&gt;</span><span class="bash"> ls (hd0,msdos1)/</span></span><br><span class="line">error: unknown filesystem. # 说明这个分区不是正确的启动分区，继续尝试</span><br><span class="line"><span class="meta">grub&gt;</span><span class="bash"> ls (hd0,msdos5)/</span></span><br><span class="line">lost+found/ etc/ (各种文件夹) # 说明这个分区是正确的启动分区</span><br><span class="line"></span><br><span class="line">reboot #回到系统</span><br></pre></td></tr></table></figure><p>修改 <code>/etc/default/grub</code> 配置文件增大 <code>GRUB_TIMEOUT</code> 超时时间，然后更新 Grub 配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-grub</span><br></pre></td></tr></table></figure><p>之后确认是否正确写入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="5-备份配置"><a href="#5-备份配置" class="headerlink" title="5. 备份配置"></a>5. 备份配置</h2><p>备份网络配置等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/netplan/50-cloud-init.yaml</span><br></pre></td></tr></table></figure><h2 id="6-重装"><a href="#6-重装" class="headerlink" title="6. 重装"></a>6. 重装</h2><p>重启，使用 VNC 连接，启动时选择 <strong>OS Web Install</strong> 并操作重装。</p><p>因为使用的是最小镜像，需要联网下载大量安装包，过程可能比较漫长，耐心等待即可。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%9C%A8%20Ubuntu%20%E4%B8%8A%E5%BC%95%E5%AF%BC%20iso/image-20210421212105375.png" alt="image-20210421212105375"></p><hr><p>参考：</p><p><a href="https://blog.ilemonrain.com/linux/grub-memdisk-boot-iso.html">https://blog.ilemonrain.com/linux/grub-memdisk-boot-iso.html</a></p><p><a href="https://www.imbeee.com/2017/12/10/install-pure-system-on-vps-and-encrypt-it/">https://www.imbeee.com/2017/12/10/install-pure-system-on-vps-and-encrypt-it/</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 腾讯云 </tag>
            
            <tag> 引导 iso </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不装 VS Windows Terminal 编译 msxi 自签名安装</title>
      <link href="posts/msxi-sign-install/"/>
      <url>posts/msxi-sign-install/</url>
      
        <content type="html"><![CDATA[<p>Windows Terminal 一直没有发布可以直接安装的二进制文件，想自行编译的时候，看到系统需求中包含体积巨大的 Visual Studio 和 Windows SDK，脑袋都大了。直接下载其他人编译好的安装包又不放心，那么就想个办法避免在本地环境编译吧。</p><h2 id="1-编译结果获取"><a href="#1-编译结果获取" class="headerlink" title="1. 编译结果获取"></a>1. 编译结果获取</h2><p>首先想到 Azure DevOps，这个可以简单理解成微软提供的在线 CI 平台，写好编译文件就可以调用微软的自带所有编译环境的镜像直接在线编译，并生成二进制下载。这个服务可以使用 edu 教育账号免费使用，有 edu 邮箱的都可以用。我曾经使用这个编译过其他人久不更新的 MFC 项目。自己写一个 ，或者修改微软生成的 <code>azure-pipelines.yml</code> 即可。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560678181063.png" alt="1560678181063"></p><p>那么就从 GitHub 上把微软的代码拿过来，再写个 pipeline 直接编译吧。这时注意到，GitHub 上的项目中，居然已经包含了写好的 pipeline。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560678325392.png" alt="1560678325392"></p><p>想了想也是自然，微软写的东西当然自己也会用 Azure DevOps 啊。</p><p>接下来注意到，在 GitHub 仓库的 Readme 中，已经有 Azure Pipelines 的编译结果图标了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560678474529.png" alt="1560678474529"></p><p>单击图标，打开软的 DevOps 仓库，可见每次 push 代码都是会自动编译的。进一步分析发现，只有合并到 master 分支时会编译出二进制文件。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560678578167.png" alt="1560678578167"></p><p>那么我们选择其中一个 master 分支的 CI job：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560678636549.png" alt="1560678636549"></p><p>可以看到，右上角有 Artifacts 按钮，说明这个 CI 是会上传编译出来的二进制文件到服务器的。不清楚这三个有什么区别，我起初以为分别对应 x64、x86 和 arm64 的编译结果，但我下载第一个压缩包中，是包含了三个平台的编译结果的。压缩包很大，150多M，内容如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560678772276.png" alt="1560678772276"></p><p>其中的 <code>CascadiaPackage_0.0.1.0_x64.msix</code> 就是我们要的二进制安装包。</p><h2 id="2-安装尝试"><a href="#2-安装尝试" class="headerlink" title="2. 安装尝试"></a>2. 安装尝试</h2><p>首先把系统调成开发者模式。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560678844942.png" alt="1560678844942"></p><p>然后双击 msix 文件直接安装，发现安装失败，提示安装包没有签名。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560679034249.png" alt="1560679034249"></p><p>一番搜索之后，发现如果使用 VS 在本机直接部署，VS 会自动帮你签名。如果使用 VS 命令行工具直接编译出来的结果，是没有签名的。</p><p>在 GitHub 仓库的一个 <a href="https://github.com/microsoft/Terminal/issues/489#issuecomment-496170540">issue</a> 中有人提到，需要用 <code>SignTool.exe</code> 来为这个安装包签名。</p><h2 id="3-证书生成"><a href="#3-证书生成" class="headerlink" title="3. 证书生成"></a>3. 证书生成</h2><p>签名首先需要一个证书。在这里我们直接自签发一个证书并添加信任就行了。参考刚才的 issue 中提到的脚本，打开管理员权限的 Power Shell ，并 cd 到 msix 安装包所在目录中，执行如下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-SelfSignedCertificate</span> <span class="literal">-Type</span> Custom <span class="literal">-Subject</span> <span class="string">&quot;CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US&quot;</span> <span class="literal">-KeyUsage</span> DigitalSignature <span class="literal">-FriendlyName</span> <span class="string">&quot;WindowsTerminal&quot;</span> <span class="literal">-CertStoreLocation</span> <span class="string">&quot;Cert:\LocalMachine\My&quot;</span> <span class="literal">-TextExtension</span> <span class="selector-tag">@</span>(<span class="string">&quot;2.5.29.37=&#123;text&#125;1.3.6.1.5.5.7.3.3&quot;</span>, <span class="string">&quot;2.5.29.19=&#123;text&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>此时会显示一个证书指纹，复制其中指纹并替换掉下面命令中的 <code>C5C9D98CE9A23FB72C20B4D039876F3D93C3E1FF</code>，同时修改命令中的密码。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$password</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="literal">-String</span> <span class="string">&quot;随便设置一个密码&quot;</span> <span class="literal">-Force</span> <span class="literal">-AsPlainText</span></span><br><span class="line"><span class="built_in">Export-PfxCertificate</span> <span class="literal">-cert</span> <span class="string">&quot;Cert:\LocalMachine\My\C5C9D98CE9A23FB72C20B4D039876F3D93C3E1FF&quot;</span> <span class="literal">-FilePath</span> WindowsTerminal.pfx <span class="literal">-Password</span> <span class="variable">$password</span></span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="literal">-Path</span> <span class="string">&quot;Cert:\LocalMachine\My\C5C9D98CE9A23FB72C20B4D039876F3D93C3E1FF&quot;</span></span><br></pre></td></tr></table></figure><p>此时当前目录会生成一个 <code>WindowsTerminal.pfx</code> 证书。双击之，安装到计算机存储的受信任人（Trusted People）目录中，中间会要你输入刚才脚本里设置的密码。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560679602449.png" alt="1560679602449"></p><p>好了，证书搞定了。</p><h2 id="4-提取安装签名工具"><a href="#4-提取安装签名工具" class="headerlink" title="4. 提取安装签名工具"></a>4. 提取安装签名工具</h2><p>下面使用  <code>SignTool.exe</code> 工具进行签名。这个工具是 <a href="https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk">Windows 10 SDK</a> 中的一个工具。去微软网站查看发现，这货体积巨大，包含了许多开发 Windows 所需的工具包。但我们并不需要其他的部分，所以这里投机取巧一下，只安装所需的部分。</p><p>首先要下载 ISO 格式的安装镜像，不要直接下 Installer。大概 800M 左右，半夜直连下载速度飞快，白天就不行了，视情况使用更加科学的上网方式。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560679726239.png" alt="1560679726239"></p><p>下好之后，使用 Windows 自带的 Mount 功能映射为虚拟光驱。打开 <code>Installers</code> 目录，找到 <code>Windows App Certification Kit x64-x86_en-us.msi</code> 这个包，双击安装。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560679991475.png" alt="1560679991475"></p><p>这个工具包就包含了我们需要的 <code>SignTools.exe</code> ，其他的部分不需要，可以删掉这个镜像了。在 <code>C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe</code> 路径可以找到我们需要的工具。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560680492261.png" alt="1560680492261"></p><h2 id="5-签名安装"><a href="#5-签名安装" class="headerlink" title="5. 签名安装"></a>5. 签名安装</h2><p>在 msix 和证书文件所在目录打开 cmd，执行以下命令完成签名：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Program Files (x86)\Windows Kits\<span class="number">10</span>\App Certification Kit\signtool.exe&quot; sign /fd SHA256 /a  /f WindowsTerminal.pfx /p 你的密码 CascadiaPackage_0.<span class="number">0</span>.<span class="number">1</span>.<span class="number">0</span>_x64.msix</span><br></pre></td></tr></table></figure><p>签好后再双击 msix 包，就可以顺利安装了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560680665789.png" alt="1560680665789"></p><p>Enjoy！</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20Terminal%20msxi%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E8%A3%85/1560681595443.png" alt="1560681595443"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Terminal </tag>
            
            <tag> DevOps </tag>
            
            <tag> msxi </tag>
            
            <tag> 自签名 </tag>
            
            <tag> 编译 </tag>
            
            <tag> SignTools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows RDP 添加证书</title>
      <link href="posts/windows-rdp-cert/"/>
      <url>posts/windows-rdp-cert/</url>
      
        <content type="html"><![CDATA[<p>使用远程桌面时，默认使用自签发的证书，会导致连接时弹出 SSL 证书警告。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/1558647325871.png" alt="1558647325871"></p><p>勾上不提醒可以消除警告，但会导致 SSL 连接不安全。因此导入第三方签发的证书解决问题。</p><p>下面以 Let’s Encrypt 的证书为例：</p><h2 id="1-证书格式"><a href="#1-证书格式" class="headerlink" title="1. 证书格式"></a>1. 证书格式</h2><p>证书必须为 pfx 格式，转换 pem 时使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> -out certificate.pfx -inkey privkey.pem -<span class="keyword">in</span> cert.pem -certfile chain.pem -passout pass:</span><br></pre></td></tr></table></figure><h2 id="2-手动添加并关联证书"><a href="#2-手动添加并关联证书" class="headerlink" title="2 手动添加并关联证书"></a>2 手动添加并关联证书</h2><p><a href="https://superuser.com/questions/1093159/how-to-provide-a-verified-server-certificate-for-remote-desktop-rdp-connection">英文参考</a>  <a href="https://blog.csdn.net/a549569635/article/details/48831105">CSDN 参考</a></p><h3 id="2-1-运行-mmc，添加证书管理单元"><a href="#2-1-运行-mmc，添加证书管理单元" class="headerlink" title="2.1 运行 mmc，添加证书管理单元"></a>2.1 运行 mmc，添加证书管理单元</h3><blockquote><p>在 <strong>文件</strong> 中选择 <strong>添加/删除管理单元</strong> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/20150930203909755" alt="管理控制台"></p><p>在左侧选中 <strong>证书</strong> 后点击 <strong>添加</strong> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/20150930204204227" alt="添加或删除单元"></p><p>在弹出的对话框中选择 <strong>计算机账户</strong>，点击 <strong>下一步</strong> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/1558648079123.png" alt="1558648079123"></p><p>之后选择 <strong>本地计算机</strong>（保持默认） 然后点击 <strong>完成</strong> ，再然后点击 <strong>确定</strong> 。</p></blockquote><h3 id="2-2-把证书添加到-Local-Computer-下的-Personal-中"><a href="#2-2-把证书添加到-Local-Computer-下的-Personal-中" class="headerlink" title="2.2 把证书添加到 Local Computer 下的 Personal 中"></a>2.2 把证书添加到 Local Computer 下的 Personal 中</h3><blockquote><p>在 <strong>证书-个人</strong> 上点击 <strong>右键</strong> ，选择 <strong>所有任务-导入</strong> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/20150930205922703" alt="右键"></p><p>按照向导点击 <strong>下一步</strong> ,之后选择你的 <strong>证书文件</strong> （<strong>p12</strong>格式的证书文件选择时需要更改文件类型才可以找到），之后需要输入之前设置的密码，<strong>证书存储</strong> 选择 <strong>根据证书类型，自动选择证书存储</strong> ，然后点击下一步即可。</p></blockquote><h3 id="2-3-添加权限"><a href="#2-3-添加权限" class="headerlink" title="2.3 添加权限"></a>2.3 添加权限</h3><blockquote><p>首先在已经导入的证书上点击 <strong>右键</strong> ，选择 <strong>所有任务-管理私钥</strong> 。</p><p>之后添加 <strong>NETWORK SERVICE</strong> 用户。</p><p>至少要将 <strong>读取</strong> 权限分配给 <strong>NETWORK SERVICE</strong> ，然后确定。</p></blockquote><h3 id="2-4-分配给远程桌面"><a href="#2-4-分配给远程桌面" class="headerlink" title="2.4 分配给远程桌面"></a>2.4 分配给远程桌面</h3><blockquote><p>展开路径 <strong>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</strong> ，然后添加如下项：</p><p>名称: SSLCertificateSHA1Hash<br>类型: REG_BINARY</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/20150930220406678" alt="新建项"></p><p>之后回到之前的证书管理，双击打开已经导入的证书，在 <strong>详细信息</strong> 中选择 <strong>指纹</strong> ，并记录下方的值。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/20150930221224563" alt="证书指纹"></p><p>最后将记录的值填入之前新建注册表项的 <strong>数据</strong> 位置。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/20150930221424388" alt="填入指纹"></p></blockquote><h2 id="3-使用-Powershell-自动添加-替换证书"><a href="#3-使用-Powershell-自动添加-替换证书" class="headerlink" title="3. 使用 Powershell 自动添加/替换证书"></a>3. 使用 Powershell 自动添加/替换证书</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$certPath</span> = <span class="string">&quot;C:\certs\live\certificate.pfx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get TSGeneralSetting</span></span><br><span class="line"><span class="variable">$TSGeneralSetting</span> = <span class="built_in">gwmi</span> <span class="literal">-class</span> <span class="string">&quot;Win32_TSGeneralSetting&quot;</span> <span class="literal">-Namespace</span> root\cimv2\terminalservices <span class="literal">-Filter</span> <span class="string">&quot;TerminalName=&#x27;RDP-tcp&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># remove old cert</span></span><br><span class="line"><span class="variable">$oldThumbprint</span> = <span class="variable">$TSGeneralSetting</span>.SSLCertificateSHA1Hash</span><br><span class="line"><span class="built_in">Get-ChildItem</span> Cert:\LocalMachine\My | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Thumbprint <span class="operator">-like</span> <span class="variable">$oldThumbprint</span>&#125; | <span class="built_in">Remove-Item</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import new cert</span></span><br><span class="line"><span class="string">&quot;&quot;</span> | certutil <span class="operator">-f</span> <span class="literal">-importPFX</span> <span class="variable">$certPath</span></span><br><span class="line"><span class="variable">$cert</span> = <span class="built_in">New-Object</span> System.Security.Cryptography.X509Certificates.X509Certificate2</span><br><span class="line"><span class="variable">$cert</span>.Import(<span class="variable">$certPath</span>, <span class="string">&quot;&quot;</span>, [<span class="type">System.Security.Cryptography.X509Certificates.X509KeyStorageFlags</span>]<span class="string">&quot;PersistKeySet&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set permission</span></span><br><span class="line"><span class="variable">$WinhttpPath</span> = <span class="string">&quot;C:\Program Files (x86)\Windows Resource Kits\Tools&quot;</span></span><br><span class="line">&amp;<span class="string">&quot;<span class="variable">$WinhttpPath</span>\winhttpcertcfg.exe&quot;</span> <span class="literal">-g</span> <span class="literal">-c</span> LOCAL_MACHINE\MY <span class="literal">-s</span> <span class="variable">$cert</span>.Subject.split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>] <span class="literal">-a</span> <span class="string">&quot;NETWORK SERVICE&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set to rdp</span></span><br><span class="line"><span class="built_in">swmi</span> <span class="literal">-path</span> <span class="variable">$TSGeneralSetting</span>.__path <span class="literal">-argument</span> <span class="selector-tag">@</span>&#123;SSLCertificateSHA1Hash=<span class="variable">$cert</span>.Thumbprint&#125;</span><br></pre></td></tr></table></figure><p>使用计划任务运行上述脚本即可定期自动更新证书，注意需要管理员权限。</p><h3 id="3-1-坑：添加证书使用-Import-PfxCertificate"><a href="#3-1-坑：添加证书使用-Import-PfxCertificate" class="headerlink" title="3.1 坑：添加证书使用 Import-PfxCertificate"></a>3.1 坑：添加证书使用 Import-PfxCertificate</h3><p>注意，添加证书时，不能使用<a href="https://docs.microsoft.com/en-us/powershell/module/pkiclient/import-pfxcertificate?view=win10-ps#feedback"><code>Import-PfxCertificate</code></a>，此函数有 <a href="https://github.com/MicrosoftDocs/windows-powershell-docs/issues/295">bug</a>，添加的证书无法查看私钥，非常坑。</p><p>以下代码返回空值，因此不能修改权限：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$item</span> = (<span class="built_in">Get-ChildItem</span> Cert:\LocalMachine\My | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Thumbprint <span class="operator">-like</span> <span class="variable">$Thumbprint</span>&#125;)</span><br><span class="line"><span class="variable">$item</span>.PrivateKey.CspKeyContainerInfo.UniqueKeyContainerName</span><br></pre></td></tr></table></figure><h3 id="3-2-坑：添加证书使用"><a href="#3-2-坑：添加证书使用" class="headerlink" title="3.2 坑：添加证书使用"></a>3.2 坑：添加证书使用</h3><p><code>System.Security.Cryptography.X509Certificates.X509Store</code></p><p>添加代码如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import new cert</span></span><br><span class="line"><span class="variable">$cert</span> = <span class="built_in">New-Object</span> System.Security.Cryptography.X509Certificates.X509Certificate2</span><br><span class="line"><span class="variable">$cert</span>.Import(<span class="string">&quot;C:\certs\certificate.pfx&quot;</span>, <span class="string">&quot;password&quot;</span>, [<span class="type">System.Security.Cryptography.X509Certificates.X509KeyStorageFlags</span>]<span class="string">&quot;PersistKeySet&quot;</span>)</span><br><span class="line"><span class="variable">$store</span> = <span class="built_in">New-object</span> System.Security.Cryptography.X509Certificates.X509Store <span class="literal">-argumentlist</span> <span class="string">&quot;MY&quot;</span>, LocalMachine</span><br><span class="line"><span class="comment"># $store = Get-Item cert:\LocalMachine\My</span></span><br><span class="line"><span class="variable">$store</span>.Open([<span class="type">System.Security.Cryptography.X509Certificates.OpenFlags</span>]<span class="string">&quot;ReadWrite&quot;</span>)</span><br><span class="line"><span class="variable">$store</span>.Add(<span class="variable">$cert</span>)</span><br><span class="line"><span class="variable">$store</span>.Close()</span><br></pre></td></tr></table></figure><p>使用上面代码中方法安装的证书，虽然可以获取到私钥，但提示文件不存在。会出现无法使用以下代码操作修改权限的情况：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set permission</span></span><br><span class="line"><span class="variable">$item</span> = (<span class="built_in">Get-ChildItem</span> Cert:\LocalMachine\My | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Thumbprint <span class="operator">-like</span> <span class="variable">$Thumbprint</span>&#125;)</span><br><span class="line"><span class="variable">$fullPath</span> = <span class="built_in">Join-Path</span> <span class="variable">$env:ProgramData</span>\Microsoft\Crypto\RSA\MachineKeys <span class="variable">$item</span>.PrivateKey.CspKeyContainerInfo.UniqueKeyContainerName</span><br><span class="line"><span class="variable">$acl</span> = <span class="built_in">Get-Acl</span> <span class="literal">-Path</span> <span class="variable">$fullPath</span></span><br><span class="line"><span class="variable">$permission</span> = <span class="string">&quot;NT AUTHORITY\NETWORK SERVICE&quot;</span>,<span class="string">&quot;Read&quot;</span>,<span class="string">&quot;Allow&quot;</span></span><br><span class="line"><span class="variable">$accessRule</span> = <span class="built_in">New-object</span> System.Security.AccessControl.FileSystemAccessRule <span class="variable">$permission</span></span><br><span class="line"><span class="variable">$acl</span>.AddAccessRule(<span class="variable">$accessRule</span>)</span><br><span class="line"><span class="built_in">Set-Acl</span> <span class="variable">$fullPath</span> <span class="variable">$acl</span></span><br></pre></td></tr></table></figure><p>错误信息如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/1558717520224.png" alt="1558717520224"></p><p>原因不明，只有通过 mmc 图形界面导入的证书无此问题。</p><p>因此尝试使用 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=19801"><code>WinHttpCertCFG</code></a> 进行权限修改。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set permission</span></span><br><span class="line"><span class="variable">$WinhttpPath</span> = <span class="string">&quot;C:\Program Files (x86)\Windows Resource Kits\Tools&quot;</span></span><br><span class="line">&amp;<span class="string">&quot;<span class="variable">$WinhttpPath</span>\winhttpcertcfg.exe&quot;</span> <span class="literal">-g</span> <span class="literal">-c</span> LOCAL_MACHINE\MY <span class="literal">-s</span> <span class="variable">$cert</span>.Subject.split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>] <span class="literal">-a</span> <span class="string">&quot;NETWORK SERVICE&quot;</span></span><br></pre></td></tr></table></figure><p>但即使权限修改成功，此时导入的证书仍无法设置为 <code>SSLCertificateSHA1Hash</code>，报错如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">swmi</span> : Invalid <span class="keyword">parameter</span></span><br><span class="line">At line:<span class="number">1</span> char:<span class="number">1</span></span><br><span class="line">+ <span class="built_in">swmi</span> <span class="literal">-path</span> <span class="variable">$TSGeneralSetting</span>.__path <span class="literal">-argument</span> <span class="selector-tag">@</span>&#123;SSLCertificateSHA1Has ...</span><br><span class="line">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : InvalidOperation: (:) [<span class="built_in">Set-WmiInstance</span>], ManagementException</span><br><span class="line">    + FullyQualifiedErrorId : SetWMIManagementException,Microsoft.PowerShell.Commands.SetWmiInstance</span><br></pre></td></tr></table></figure><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20RDP%20%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6/1558720712709.png" alt="1558720712709"></p><p>mmc 导入的证书同样无问题。因此尝试 <a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil"><code>certutil</code></a> 导入证书。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span> | certutil <span class="operator">-f</span> <span class="literal">-importPFX</span> <span class="variable">$certPath</span></span><br></pre></td></tr></table></figure><p>前方空引号用于传递空密码。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> RDP </tag>
            
            <tag> 证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Ubuntu 中 mount VMware 共享文件夹</title>
      <link href="posts/mount-vmware-shared-folder/"/>
      <url>posts/mount-vmware-shared-folder/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装-VMware-Tools"><a href="#1-安装-VMware-Tools" class="headerlink" title="1. 安装 VMware Tools"></a>1. 安装 VMware Tools</h2><ul><li><p>给虚拟机增加一个光驱</p></li><li><p><code>VM&gt; Install VMware Tools</code></p></li><li><p>手动安装</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /mnt/cdrom</span><br><span class="line">sudo mount /dev/cdrom /mnt/cdrom</span><br><span class="line">tar xzvf /mnt/cdrom/VMwareTools-x.x.x-xxxx.tar.gz -C /tmp/</span><br><span class="line"><span class="built_in">cd</span> /tmp/vmware-tools-distrib/</span><br><span class="line">sudo ./vmware-install.pl -d</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></li><li><p>可以删掉光驱</p></li></ul><h2 id="2-映射共享文件夹"><a href="#2-映射共享文件夹" class="headerlink" title="2. 映射共享文件夹"></a>2. 映射共享文件夹</h2><ul><li>查看 <code>/mnt/hgfs</code> 目录下是否已有映射的目录</li><li>如果没有，<code>/usr/bin/vmware-config-tools.pl</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> VMware </tag>
            
            <tag> 共享文件夹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ConEmu 里 tqdm 等进度条吃屎解决</title>
      <link href="posts/tqdm-sucks-in-conemu/"/>
      <url>posts/tqdm-sucks-in-conemu/</url>
      
        <content type="html"><![CDATA[<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/ConEmu%20%E9%87%8C%20tqdm%20%E7%AD%89%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%90%83%E5%B1%8E%E8%A7%A3%E5%86%B3/c937aa35.png" alt="c937aa35.png"></p><p>运行全横行进度条时，莫名换行，更改字体也无效。</p><h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><p>是 ConEmu 的 RealConsole 的字体问题，不管 ConEmu 显示什么字体，都是在一对一映射一个隐藏的 RealConsole 的字体。</p><p>按 Ctrl+Alt+Win+Space 弹出 RealConsole，右键属性发现字体是新宋体：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/ConEmu%20%E9%87%8C%20tqdm%20%E7%AD%89%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%90%83%E5%B1%8E%E8%A7%A3%E5%86%B3/a2ac7518.png" alt="a2ac7518.png"></p><p>新宋体无法正确显示进度条使用的方块字符。</p><p>首先在注册表 <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Console\TrueTypeFont</code> 中把新宋体改成一个正常的带中文的等宽字体，比如 <code>Sarasa Term</code> 系列</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/ConEmu%20%E9%87%8C%20tqdm%20%E7%AD%89%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%90%83%E5%B1%8E%E8%A7%A3%E5%86%B3/856ef4f9.png" alt="856ef4f9.png"></p><p>然后在 ConEmu 设置中，Feature 选项里点右侧 Show real console 旁边的省略号按钮，修改字体为正常字体。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/ConEmu%20%E9%87%8C%20tqdm%20%E7%AD%89%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%90%83%E5%B1%8E%E8%A7%A3%E5%86%B3/46a8b97f.png" alt="46a8b97f.png"></p><p>好了，美滋滋。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/ConEmu%20%E9%87%8C%20tqdm%20%E7%AD%89%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%90%83%E5%B1%8E%E8%A7%A3%E5%86%B3/b45a736d.png" alt="b45a736d.png"></p><p>参考官方帮助：<br><a href="https://conemu.github.io/en/UnicodeSupport.html">ConEmu | Unicode Support</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ConEmu </tag>
            
            <tag> tqdm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装 zsh</title>
      <link href="posts/install-zsh/"/>
      <url>posts/install-zsh/</url>
      
        <content type="html"><![CDATA[<h2 id="1-zsh"><a href="#1-zsh" class="headerlink" title="1. zsh"></a>1. zsh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh</span><br></pre></td></tr></table></figure><h2 id="2-oh-my-zsh-and-theme"><a href="#2-oh-my-zsh-and-theme" class="headerlink" title="2. oh my zsh and theme"></a>2. <a href="https://github.com/robbyrussell/oh-my-zsh">oh my zsh</a> and theme</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class="line">sudo apt install fonts-powerline</span><br><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=&quot;agnoster&quot; # (this is one of the fancy ones)</span><br><span class="line"><span class="meta">#</span><span class="bash"> see https://github.com/robbyrussell/oh-my-zsh/wiki/Themes<span class="comment">#agnoster</span></span></span><br></pre></td></tr></table></figure><h2 id="3-WSL-ColorTool"><a href="#3-WSL-ColorTool" class="headerlink" title="3. WSL: ColorTool"></a>3. WSL: <a href="https://github.com/Microsoft/Terminal/tree/master/src/tools/ColorTool">ColorTool</a></h2><h2 id="4-Ctrl-Backspace-and-Ctrl-Delete"><a href="#4-Ctrl-Backspace-and-Ctrl-Delete" class="headerlink" title="4. Ctrl + Backspace and Ctrl + Delete"></a>4. <code>Ctrl + Backspace</code> and <code>Ctrl + Delete</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;bindkey &#x27;^H&#x27; backward-kill-word&quot; &gt;&gt; ~/.zshrc</span><br><span class="line">echo &quot;bindkey &#x27;^[[3;5~&#x27; kill-word&quot; &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><p><a href="https://github.com/robbyrussell/oh-my-zsh/issues/7609">Why don’t Ctrl+Backspace and Ctrl+Delete work? · Issue #7609 · robbyrussell/oh-my-zsh · GitHub</a></p><h2 id="6-ll"><a href="#6-ll" class="headerlink" title="6. ll"></a>6. ll</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;alias ll=&#x27;ls -alhF&#x27;&quot; &gt;&gt; ~/.bash_aliases</span><br><span class="line">echo &quot;source \$HOME/.bash_aliases&quot; &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="5-Plugins"><a href="#5-Plugins" class="headerlink" title="5. Plugins"></a>5. Plugins</h2><h2 id="5-1-zsh-syntax-highlighting"><a href="#5-1-zsh-syntax-highlighting" class="headerlink" title="5.1 zsh-syntax-highlighting"></a>5.1 <a href="https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md">zsh-syntax-highlighting</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br><span class="line">chmod -R 755 $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><h2 id="5-2-zsh-autosuggestions"><a href="#5-2-zsh-autosuggestions" class="headerlink" title="5.2 zsh-autosuggestions"></a>5.2 <a href="https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md">zsh-autosuggestions</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</span><br><span class="line">chmod -R 755 $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><h2 id="5-3-zsh-z"><a href="#5-3-zsh-z" class="headerlink" title="5.3 zsh-z"></a>5.3 <a href="https://github.com/agkozak/zsh-z#installation">zsh-z</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/agkozak/zsh-z $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-z</span><br><span class="line">chmod -R 755 $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-z</span><br></pre></td></tr></table></figure><h2 id="5-x-Enable"><a href="#5-x-Enable" class="headerlink" title="5.x Enable"></a>5.x Enable</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">plugins</span>=(</span><br><span class="line">    git</span><br><span class="line">    extract</span><br><span class="line">    z</span><br><span class="line">    zsh-syntax-highlighting</span><br><span class="line">    zsh-autosuggestions</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="6-WSL-fix-z-precmd-1-nice-5-failed-operation-not-permitted"><a href="#6-WSL-fix-z-precmd-1-nice-5-failed-operation-not-permitted" class="headerlink" title="6. WSL: fix \_z\_precmd:1: nice(5) failed: operation not permitted"></a>6. WSL: fix <code>\_z\_precmd:1: nice(5) failed: operation not permitted</code></h2><blockquote><p>By default, <code>zsh</code> tries to run background jobs at a lower priority, which Windows won’t let it do. A good workaround is to put</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> $(uname -a) <span class="keyword">in</span></span><br><span class="line">*Microsoft*) <span class="built_in">unsetopt</span> BG_NICE ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>in your <code>.zshrc</code> file. That alters <code>zsh</code>‘s default behavior and fixes the problem entirely, in my experience.</p></blockquote><p><a href="https://github.com/rupa/z/issues/230">_z_precmd:1: nice(5) failed: operation not permitted · Issue #230 · rupa/z · GitHub</a></p><h2 id="7-Hide-local-username-and-host-name"><a href="#7-Hide-local-username-and-host-name" class="headerlink" title="7. Hide local username and host name"></a>7. Hide local username and host name</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;DEFAULT_USER=\&quot;\$USER\&quot;&quot; &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="8-Change-host-name-text-color"><a href="#8-Change-host-name-text-color" class="headerlink" title="8. Change  host name text color"></a>8. Change  host name text color</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.oh-my-zsh/themes/agnoster.zsh-theme</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@@ -89,7 +89,7 @@ <span class="function"><span class="title">prompt_end</span></span>() &#123;</span><br><span class="line"> <span class="comment"># Context: user@hostname (who am I and where am I)</span></span><br><span class="line"> <span class="function"><span class="title">prompt_context</span></span>() &#123;</span><br><span class="line">   <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$USER</span>&quot;</span> != <span class="string">&quot;<span class="variable">$DEFAULT_USER</span>&quot;</span> || -n <span class="string">&quot;<span class="variable">$SSH_CLIENT</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">-    prompt_segment black default <span class="string">&quot;%(!.%&#123;%F&#123;yellow&#125;%&#125;.)%n@%m&quot;</span></span><br><span class="line">+    prompt_segment cyan white <span class="string">&quot;%(!.%&#123;%F&#123;yellow&#125;%&#125;.)%n@%m&quot;</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> zsh </tag>
            
            <tag> oh my zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10 商店应用无法启动解决</title>
      <link href="posts/uwp-crash/"/>
      <url>posts/uwp-crash/</url>
      
        <content type="html"><![CDATA[<p>Bug 10 的桌面版商店应用全崩了，提示没有权限啥啥啥，脑壳疼。<br>今天发现截图软件崩了，试图重启的时候弹出一个框告诉我访问啥啥没权限。  </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20%E5%95%86%E5%BA%97%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3/a15862ae.png" alt="Windows 10 商店应用无法启动解决_2018-12-11-18-40-49.png"></p><p>哦擦这是什么鬼呢。</p><p>顺着提示找到路径 <code>C:\Users\&lt;username&gt;\AppData\Local\Microsoft\WindowsApps</code>，发现是放置所有从 Windows Store 安装的桌面应用的地方。注意是桌面应用而不是 UWP 应用。<br>进到目录里看到所有的 exe 都是 0KB 没有图标的，双击后弹出一样的错误框。查看整个 WindowsApps 目录发现是没有大小的。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20%E5%95%86%E5%BA%97%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3/a0ce7d67.png" alt="Windows 10 商店应用无法启动解决_2018-12-11-18-43-09.png"></p><p>起初以为是目录文件损坏，找出了一周前的系统备份镜像发现备份中的这个目录也是一样的 0KB。这就比较棘手了。 </p><p>尝试启动了一下 WSL 的那个 Ubuntu 图标，发现也报一样的错误。搜索后发现 Github 上<a href="https://github.com/Microsoft/WSL/issues/2323">有一个 issue</a> 在研究这个问题。<br>看了看其中的解决方式，重置 Windows Store 什么的都不好使。<br>尝试右键管理员运行，依然报错。但注意到选择管理员运行后先弹出了 UAC 提权框，其中的程序图标是正常显示的。于是怀疑并不是这个 exe 本身有权限问题，而是 exe 运行后访问的某个资源有权限问题。<br>在 Github 的那个 issue 中看到<a href="https://github.com/Microsoft/WSL/issues/2323#issuecomment-412823470">有人建议</a>使用 <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procmon">Process Monitor</a> 检测一下到底是什么权限问题。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20%E5%95%86%E5%BA%97%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3/754e95d7.png" alt="Windows 10 商店应用无法启动解决_2018-12-11-18-53-13.png"></p><p>于是使用 Procmon 抓取启动后的 <code>ACCESS DENIED</code> 记录：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20%E5%95%86%E5%BA%97%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3/f958d8d3.png" alt="Windows 10 商店应用无法启动解决_2018-12-11-18-53-29.png"></p><p>看到三条注册表访问和一条文件访问，从路径看那条文件访问的嫌疑很大。于是查看该路径 <code>C:\Users\&lt;username&gt;\AppData\Local\Packages</code> 的权限：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20%E5%95%86%E5%BA%97%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3/db6e5d86.png" alt="Windows 10 商店应用无法启动解决_2018-12-11-18-54-45.png"></p><p>发现只有自己，感觉不太对，又在任务管理器中查看了 PID 10148 的那个 svchost 进程，发现用户名是 SYSTEM。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20%E5%95%86%E5%BA%97%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3/4190a952.png" alt="Windows 10 商店应用无法启动解决_2018-12-11-18-55-52.png"></p><p>那么问题应该很明显了，这个宿主进程没有权限访问存储了 Windows 商店应用数据的目录。</p><p>为了确认问题，找了另一个机器查看对应目录的权限，发现应该除了当前用户之外，还有 SYSTEM 用户和 Administrators 用户组的完全访问权限。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%2010%20%E5%95%86%E5%BA%97%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3/be890d1d.png" alt="Windows 10 商店应用无法启动解决_2018-12-11-18-57-14.png"></p><p>于是给对应目录添加了这两组权限，再试，还报错。重新抓取动作后发现这次是 <code>C:\Users\&lt;username&gt;\AppData\Local\Microsoft</code> 目录又没权限访问。重复上述步骤添加权限后，顺利启动。问题解决。</p><p>虽然不知道是什么原因导致权限丢失，不过十有八九是 Bug 10 的某个补丁包干的好事。吔屎啦微软。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows 10 </tag>
            
            <tag> Windows </tag>
            
            <tag> UWP </tag>
            
            <tag> Store </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinSCP 使用外部工具连接 ssh</title>
      <link href="posts/winscp-ssh-tool/"/>
      <url>posts/winscp-ssh-tool/</url>
      
        <content type="html"><![CDATA[<h2 id="WSL-bash-ConEmu"><a href="#WSL-bash-ConEmu" class="headerlink" title="WSL bash + ConEmu"></a>WSL bash + ConEmu</h2><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/WinSCP%20%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E5%B7%A5%E5%85%B7%E8%BF%9E%E6%8E%A5%20ssh/71f2b46d.png" alt="71f2b46d.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;C:\Program Files\ConEmu\ConEmu64.exe&quot;</span> -run bash.exe -cur_console:c -c <span class="string">&quot;ssh !U@!@ -p !#&quot;</span> -new_console:p5</span><br></pre></td></tr></table></figure><h2 id="WSL-bash-cmd"><a href="#WSL-bash-cmd" class="headerlink" title="WSL bash + cmd"></a>WSL bash + cmd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;C:\Windows\System32\cmd.exe&quot;</span> /k <span class="string">&quot;C:\Windows\Sysnative\bash.exe -c ^&quot;</span>mosh -p !<span class="comment"># --ssh=^&#x27;ssh -p !#^&#x27; !U@!@^&quot;&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> WinSCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 远程桌面连接到自己</title>
      <link href="posts/windows-rdp-self/"/>
      <url>posts/windows-rdp-self/</url>
      
        <content type="html"><![CDATA[<p>连接到 localhost 或者 127.0.0.1 会报错。<br>连接到 127.0.0.2 即可。</p><p><a href="https://techjourney.net/workaround-for-remote-desktop-client-to-connect-to-localhost-local-terminal-server-service/">Workaround for Remote Desktop Client to Connect to Localhost (Local Terminal Server Service) - Tech Journey</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> RDP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重命名 Nextcloud 分享链接</title>
      <link href="posts/nextcloud-share-rename/"/>
      <url>posts/nextcloud-share-rename/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/LazyShpee/sharerenamer">https://github.com/LazyShpee/sharerenamer</a></p><blockquote><p>  Choose ‘download’ and put the files in the apps subfolder of nextcloud, make sure they are in a folder called ‘sharerenamer’ and all in there, not in another subfolder in there (like ‘master’). Then make sure the files are owned by the webserver user (like, www-run or something) and you can enable the app in the app interface.</p></blockquote><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%87%8D%E5%91%BD%E5%90%8D%20Nextcloud%20%E5%88%86%E4%BA%AB%E9%93%BE%E6%8E%A5/e5bbec35.png" alt="重命名 Nextcloud 分享链接_2018-11-26-15-20-09.png"></p><p><a href="https://github.com/nextcloud/server/issues/4536">https://github.com/nextcloud/server/issues/4536</a></p><hr><p>项目已经更新至:</p><p><a href="https://github.com/DecaTec/sharerenamer/">https://github.com/DecaTec/sharerenamer/</a></p><p><a href="https://apps.nextcloud.com/apps/sharerenamer">https://apps.nextcloud.com/apps/sharerenamer</a></p><p>然而不支持最新版 nextcloud</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nextcloud </tag>
            
            <tag> 重命名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 远程桌面同时查看内容（shadow）</title>
      <link href="posts/windows-rdp-shadow/"/>
      <url>posts/windows-rdp-shadow/</url>
      
        <content type="html"><![CDATA[<p>远程桌面连接中重复使用同一用户登录时，默认情况下新连接会顶掉旧连接。如果允许同一用户多重登陆，则会建立多个 session，并存。但多个 session 之间内容并不共享。<br>所以需要同时查看同一 session 的桌面时，就需要使用 shadow 方式查看已经连接的桌面。</p><p>以下操作均在 rdp 服务端进行</p><h2 id="1-允许静默连接"><a href="#1-允许静默连接" class="headerlink" title="1 允许静默连接"></a>1 允许静默连接</h2><p>组策略<br><code>Computer Configuration\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Connections\</code><br>修改 <code>Set rules for remote control of Remote Desktop Services user sessions</code> 为 <code>Full control without user&#39;s permission</code></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%90%8C%E6%97%B6%E6%9F%A5%E7%9C%8B%E5%86%85%E5%AE%B9%EF%BC%88shadow%EF%BC%89/ab0de617.png" alt="ab0de617.png"></p><h2 id="2-查看已经登陆的用户与-session"><a href="#2-查看已经登陆的用户与-session" class="headerlink" title="2 查看已经登陆的用户与 session"></a>2 查看已经登陆的用户与 session</h2><p><code>qwinsta</code> 或者 <code>query session</code></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%90%8C%E6%97%B6%E6%9F%A5%E7%9C%8B%E5%86%85%E5%AE%B9%EF%BC%88shadow%EF%BC%89/e5c1fa31.png" alt="e5c1fa31.png"></p><h2 id="3-连接到对应-session"><a href="#3-连接到对应-session" class="headerlink" title="3 连接到对应 session"></a>3 连接到对应 session</h2><p>管理员权限</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mstsc /shadow:&lt;id&gt; /control /noconsentprompt</span><br></pre></td></tr></table></figure><h2 id="4-建立一个-bat-脚本"><a href="#4-建立一个-bat-脚本" class="headerlink" title="4 建立一个 bat 脚本"></a>4 建立一个 bat 脚本</h2><p>当一个 user 只能建立一个 session 时，使用用户名区分更方便。<br>使用管理员权限运行</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">3</span>&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;qwinsta ^| <span class="built_in">find</span> &quot;%<span class="number">1</span>&quot;&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> id=<span class="variable">%%a</span></span><br><span class="line">mstsc /shadow:<span class="variable">%id%</span> /control /noconsentprompt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> RDP </tag>
            
            <tag> shadow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新建 Windows 服务</title>
      <link href="posts/create-windows-service/"/>
      <url>posts/create-windows-service/</url>
      
        <content type="html"><![CDATA[<ol><li><p>下载 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=17657">Windows NT Resource Kit</a></p></li><li><p>添加指向 <code>srvany.exe</code> 的服务</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc create &lt;name&gt; binpath= &quot;C:\Program Files (x86)\Windows Resource Kits\Tools\srvany.exe&quot; <span class="built_in">start</span>= auto displayname= &quot;&lt;Display Name&gt;&quot;</span><br></pre></td></tr></table></figure></li><li><p>修改注册表</p><p> 定位到</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\&lt;name&gt;</span><br></pre></td></tr></table></figure><p> 添加子键</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Key Name: Parameters</span><br><span class="line">Class : &lt;leave blank&gt;</span><br></pre></td></tr></table></figure><p> 在子键下新建字符串值，指向真正要启动的程序</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Value Name: Application</span><br><span class="line">Data Type : REG_SZ</span><br><span class="line">String : &lt;path&gt;\&lt;application.ext&gt;</span><br></pre></td></tr></table></figure></li><li><p>进 services.msc 看看，启动</p></li></ol><p>参考：<a href="https://support.microsoft.com/en-us/help/137890/how-to-create-a-user-defined-service">https://support.microsoft.com/en-us/help/137890/how-to-create-a-user-defined-service</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 服务 </tag>
            
            <tag> srvany </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 显示 git 分支名</title>
      <link href="posts/linux-git-branch-name/"/>
      <url>posts/linux-git-branch-name/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Download <a href="https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh">this</a></p></li><li><p>Copy to <code>~/.git-prompt.sh</code>, or wget it.</p></li><li><p><code>.bashrc</code></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.git-prompt.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">&#x27;\[\e]0;\u@\h: \w\a\]$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;33m\]$(__git_ps1)\[\033[00m\]\$ &#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Certbot cloudflare 泛域名证书配置</title>
      <link href="posts/certbot-cloudflare-wildcard/"/>
      <url>posts/certbot-cloudflare-wildcard/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install software-properties-common</span><br><span class="line">sudo add-apt-repository universe</span><br><span class="line">sudo add-apt-repository ppa:certbot/certbot</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y certbot python3-certbot-dns-cloudflare</span><br></pre></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2.  配置"></a>2.  配置</h2><blockquote><p>  Use of this plugin requires a configuration file containing Cloudflare API credentials, obtained from your Cloudflare account page.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/letsencrypt/cloudflare.ini</span><br></pre></td></tr></table></figure><p>  Example credentials file:</p>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Cloudflare API credentials used by Certbot</span></span><br><span class="line"><span class="attr">dns_cloudflare_email</span> = cloudflare@example.com</span><br><span class="line"><span class="attr">dns_cloudflare_api_key</span> = <span class="number">0123456789</span>abcdef0123456789abcdef01234567</span><br></pre></td></tr></table></figure><p>  The path to this file can be provided interactively or using the –dns-cloudflare-credentials command-line argument. Certbot records the path to this file for use during renewal, but does not store the file’s contents.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 600 /etc/letsencrypt/cloudflare.ini</span><br></pre></td></tr></table></figure></blockquote><h2 id="3-获取"><a href="#3-获取" class="headerlink" title="3. 获取"></a>3. 获取</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot -a dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini -i nginx -d <span class="string">&quot;*.coder17.com&quot;</span> -d coder17.com</span><br></pre></td></tr></table></figure><p>注意不能完全信任其对 nginx 的修改</p><p>如果不需要自动修改 nginx 则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot certonly -a dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini -d <span class="string">&quot;home.coder17.com&quot;</span> -d <span class="string">&quot;frph.coder17.com&quot;</span> -d <span class="string">&quot;*.frph.coder17.com&quot;</span> -d <span class="string">&quot;*.home.coder17.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="4-更新测试"><a href="#4-更新测试" class="headerlink" title="4. 更新测试"></a>4. 更新测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot renew --dry-run</span><br></pre></td></tr></table></figure><h2 id="5-部署自动更新"><a href="#5-部署自动更新" class="headerlink" title="5. 部署自动更新"></a>5. 部署自动更新</h2><p>默认情况下会自动添加自动更新，每天两次。<br>使用 <code>sudo systemctl list-timers</code> 查看，配置文件位于 <code>/etc/systemctl/system/timers.target.wants/certbot.timer</code></p><p>如果运行有问题，使用下面命令创建 crontab 任务，每两个月一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo crontab -e</span><br><span class="line"></span><br><span class="line">0 0 1 */2 * /usr/bin/certbot renew &gt;&gt; <span class="string">&quot;/var/log/certbot_<span class="subst">$(date +<span class="string">&quot;\%Y-\%m-\%d&quot;</span>)</span>.log&quot;</span> 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">sudo service cron restart</span><br></pre></td></tr></table></figure><h2 id="6-转换证书格式"><a href="#6-转换证书格式" class="headerlink" title="6. 转换证书格式"></a>6. 转换证书格式</h2><p>默认申请的是 pem 格式证书，位于 <code>/etc/letsencrypt/live</code> 中，需要转换为 Windows 使用的 pfx 格式时，使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> -out certificate.pfx -inkey privkey.pem -<span class="keyword">in</span> cert.pem -certfile chain.pem -passout pass:</span><br></pre></td></tr></table></figure><h2 id="7-复制"><a href="#7-复制" class="headerlink" title="7. 复制"></a>7. 复制</h2><p>因为 live 目录中为软连接，复制时需要使用 <code>-L</code> 参数，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -Lr /etc/letsencrypt/live /mnt/hgfs/certs</span><br></pre></td></tr></table></figure><p>Refer: <a href="https://certbot-dns-cloudflare.readthedocs.io/en/stable/">https://certbot-dns-cloudflare.readthedocs.io/en/stable/</a></p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Certbot </tag>
            
            <tag> cloudflare </tag>
            
            <tag> 泛域名证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络打印机提示需要用户干预</title>
      <link href="posts/windows-printer-error/"/>
      <url>posts/windows-printer-error/</url>
      
        <content type="html"><![CDATA[<ol><li><p>控制面板查看打印机属性，复制 IP 地址</p></li><li><p>删除网络打印机</p></li><li><p>添加打印机，选择未列出打印机</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E6%8F%90%E7%A4%BA%E9%9C%80%E8%A6%81%E7%94%A8%E6%88%B7%E5%B9%B2%E9%A2%84/c5eb0867.png" alt="网络打印机提示需要用户干预_2018-11-22-04-07-19.png"></p></li><li><p>使用 TCP/IP 添加打印机</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E6%8F%90%E7%A4%BA%E9%9C%80%E8%A6%81%E7%94%A8%E6%88%B7%E5%B9%B2%E9%A2%84/3088c452.png" alt="网络打印机提示需要用户干预_2018-11-22-04-07-37.png"></p></li><li><p>选 TCP/IP 设备，填入 IP 地址，端口名是虚拟硬件端口名，不是 TCP 端口，随便起名。</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E6%8F%90%E7%A4%BA%E9%9C%80%E8%A6%81%E7%94%A8%E6%88%B7%E5%B9%B2%E9%A2%84/d7f81ad9.png" alt="网络打印机提示需要用户干预_2018-11-22-04-07-43.png"></p></li><li><p>浏览设备驱动中定位到驱动目录，选择正确型号。</p></li></ol><p><a href="http://h30318.www3.hp.com/pub/softlib/software13/COL32431/bi-80329-11/hp_LJP1100_P1560_P1600_Full_Solution-v20120831-50157036_SMO.exe">创宇打印机驱动</a><br>型号: <code>HP LaserJet Professional P1606dn</code><br>IP: <code>10.11.255.47</code></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错 </tag>
            
            <tag> Windows </tag>
            
            <tag> 网络打印机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL 开启 SSH</title>
      <link href="posts/wsl-turn-on-ssh/"/>
      <url>posts/wsl-turn-on-ssh/</url>
      
        <content type="html"><![CDATA[<h2 id="WSL1"><a href="#WSL1" class="headerlink" title="WSL1"></a>WSL1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure openssh-server</span><br><span class="line">sudo service ssh start</span><br></pre></td></tr></table></figure><p>注意编辑密钥<br><code>~/.ssh/authorized_keys</code><br>文件权限 600，ssh 目录权限 755</p><h2 id="WSL2"><a href="#WSL2" class="headerlink" title="WSL2"></a>WSL2</h2><h3 id="1-修改端口到高位"><a href="#1-修改端口到高位" class="headerlink" title="1. 修改端口到高位"></a>1. 修改端口到高位</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><h3 id="2-生成主机密钥"><a href="#2-生成主机密钥" class="headerlink" title="2. 生成主机密钥"></a>2. 生成主机密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/ssh</span><br><span class="line">ssh-keygen -A</span><br></pre></td></tr></table></figure><h3 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh start</span><br></pre></td></tr></table></figure><h3 id="4-设置端口转发"><a href="#4-设置端口转发" class="headerlink" title="4. 设置端口转发"></a>4. 设置端口转发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/port-forward.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">IP=$(ifconfig eth0 | grep <span class="string">&#x27;inet &#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">netsh.exe interface portproxy delete v4tov4 listenport=23333</span><br><span class="line">netsh.exe interface portproxy add    v4tov4 listenport=23333 connectaddress=<span class="variable">$IP</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 700 ~/port-forward.sh</span><br></pre></td></tr></table></figure><p>使用管理员权限 cmd 执行：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -u root --exec /bin/bash /home/tojo/port-forward.sh</span><br></pre></td></tr></table></figure><h3 id="5-设置开机自启"><a href="#5-设置开机自启" class="headerlink" title="5. 设置开机自启"></a>5. 设置开机自启</h3><p>在 Windows 中打开计划任务 Task Scheduler，添加新任务，勾选使用最高权限执行。条件为系统启动和用户登录时。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/WSL%20%E5%BC%80%E5%90%AF%20SSH/image-20201008122247581.png" alt="image-20201008122247581"></p><p>添加两个操作，分别完成 ssh 启动和端口转发。</p><ol><li>执行 <code>cmd.exe</code>，参数为 <code>/c wsl -u root -- service ssh start</code></li><li>执行 <code>cmd.exe</code>，参数为 <code>/c wsl -u root --exec /bin/bash /home/tojo/port-forward.sh</code></li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/WSL%20%E5%BC%80%E5%90%AF%20SSH/image-20201008131114568.png" alt="image-20201008131114568"></p><p>为了避免服务意外终止，可以增加第三个触发条件，每隔固定时间（图中为一小时）重复触发。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/WSL%20%E5%BC%80%E5%90%AF%20SSH/image-20210422100712502.png" alt="image-20210422100712502"></p><h3 id="6-设置防火墙"><a href="#6-设置防火墙" class="headerlink" title="6. 设置防火墙"></a>6. 设置防火墙</h3><p>Windows 安全中心防火墙页面点击左下详细设置，在左侧入站规则中添加新的端口规则，允许外部访问 SSH 端口</p><p>参考：</p><p><a href="https://qiita.com/gengen16k/items/18262af0781fd32fc9cd">https://qiita.com/gengen16k/items/18262af0781fd32fc9cd</a></p><p><a href="https://tombomemo.com/wsl2-install-settings">https://tombomemo.com/wsl2-install-settings</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置远程管理 Hyper-V Server</title>
      <link href="posts/hyper-v-server-management/"/>
      <url>posts/hyper-v-server-management/</url>
      
        <content type="html"><![CDATA[<p>太恶心了，我建议尽量不要使用 Hyper-V Server，珍爱生命，节约时间。</p><h2 id="1-安装-Hyper-V-Server-系统"><a href="#1-安装-Hyper-V-Server-系统" class="headerlink" title="1. 安装 Hyper-V Server 系统"></a>1. 安装 Hyper-V Server 系统</h2><p><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-hyper-v-server-2016">https://www.microsoft.com/en-us/evalcenter/evaluate-hyper-v-server-2016</a></p><h2 id="2-在客户端（管理端）把目标机（服务器）添加为信任主机"><a href="#2-在客户端（管理端）把目标机（服务器）添加为信任主机" class="headerlink" title="2. 在客户端（管理端）把目标机（服务器）添加为信任主机"></a>2. 在客户端（管理端）把目标机（服务器）添加为信任主机</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-Item</span> WSMan:\localhost\Client\TrustedHosts <span class="literal">-Value</span> <span class="string">&#x27;c17-hyperv-serv&#x27;</span></span><br><span class="line"><span class="built_in">Get-Item</span> WSMan:\localhost\Client\TrustedHosts</span><br></pre></td></tr></table></figure><p>可以是计算机名（NetBIOS名），公网域名或者IP，但如果用后两者会导致 Hyper-V Manager 无法管理，非常坑爹。<br>而只添加计算机名又会导致后边 Server Manager 中无法管理服务器磁盘，原因不明，非常恶心。<br>所以最省事的做法是直接信任全部。 </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-Item</span> WSMan:\localhost\Client\TrustedHosts <span class="literal">-Value</span> <span class="string">&quot;*&quot;</span> <span class="literal">-Force</span></span><br></pre></td></tr></table></figure><p>去他妈的安全性，不在一个域里也没什么安全可言。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/1eee4b39.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-00-13.png"></p><h2 id="3-安装-RSAT"><a href="#3-安装-RSAT" class="headerlink" title="3. 安装 RSAT"></a>3. 安装 RSAT</h2><p><a href="https://www.microsoft.com/en-us/download/details.aspx?id=45520">https://www.microsoft.com/en-us/download/details.aspx?id=45520</a></p><h2 id="4-启动-Server-Manager"><a href="#4-启动-Server-Manager" class="headerlink" title="4. 启动 Server Manager"></a>4. 启动 Server Manager</h2><p>添加主机，输入上面信任过的名字，提示 kerberos authentication error。<br>如果没信任会提示 WinRX 啥啥的错误。<br>右键 Manage as，修改用户名密码。<br>用户名格式：<code>c17-hyperv-serv\Administrator</code><br>密码为管理员密码<br>然后就能连上了</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/48afe458.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-01-10.png"></p><h2 id="5-修改本机-hosts-文件"><a href="#5-修改本机-hosts-文件" class="headerlink" title="5. 修改本机 hosts 文件"></a>5. 修改本机 hosts 文件</h2><p>我觉得这步非常不优雅。<br>之前为了不改 hosts，绑了个公网域名，但添加到 Hyper-V Manager 的时候总报错，花式报错，提示操作了一个什么不存在的对象，好像是因为它把我的公网域名认作是 Windows 域的名字了。<br>添加计算机名绑定到 IP 即可。<br>大概其实不添加也行，但毕竟 Netbios 广播不稳定，而且不在同一个子网下也不能用，还是绑了吧。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/587f9a6f.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-01-28.png"></p><h2 id="6-设置组策略允许-NTLM-认证"><a href="#6-设置组策略允许-NTLM-认证" class="headerlink" title="6. 设置组策略允许 NTLM 认证"></a>6. 设置组策略允许 NTLM 认证</h2><p>现在添加主机会报这个错</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/473f9357.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-03-29.png"></p><p>总之是很烦人的信任问题。因为主机和客户机不在一个域里面就会老出类似的问题。<br>按照里面的提示去组策略搞事情，按照格式在计算机名前面加 WSMAN/</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/096ccb07.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-03-44.png"></p><p>乖乖添加计算机名</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/eeb9fda2.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-04-00.png"></p><h2 id="7-添加凭据"><a href="#7-添加凭据" class="headerlink" title="7. 添加凭据"></a>7. 添加凭据</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmdkey /add:c17<span class="literal">-hv1</span> /user:administrator /pass:<span class="number">1</span>qaz@WSX</span><br></pre></td></tr></table></figure><h2 id="8-滚到-Hyper-V-Manager-中添加主机"><a href="#8-滚到-Hyper-V-Manager-中添加主机" class="headerlink" title="8. 滚到 Hyper-V Manager 中添加主机"></a>8. 滚到 Hyper-V Manager 中添加主机</h2><p>在 Hyper-V Manager 中添加主机，注意图里的域名要替换成 NetBIOS 名。网上说用 IP 也行但我没成功。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/d6178f9b.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-04-12.png"></p><h2 id="9-修复远程计算机管理"><a href="#9-修复远程计算机管理" class="headerlink" title="9. 修复远程计算机管理"></a>9. 修复远程计算机管理</h2><h3 id="9-1-远程主机"><a href="#9-1-远程主机" class="headerlink" title="9.1 远程主机"></a>9.1 远程主机</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;Remote Event Log Management&quot;</span> new enable=yes</span><br><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;Remote Service Management&quot;</span> new enable=yes</span><br><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;File and Printer Sharing&quot;</span> new enable=yes</span><br><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;Remote Scheduled Tasks Management&quot;</span> new enable=yes</span><br><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;Performance Logs and Alerts&quot;</span> new enable=yes</span><br><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;File and Printer Sharing&quot;</span> new enable=yes</span><br><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;Remote Volume Management&quot;</span> new enable=yes</span><br><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;Windows Remote Management&quot;</span> new enable=yes</span><br><span class="line"></span><br><span class="line"><span class="built_in">Set-Service</span> VDS <span class="literal">-StartupType</span> Automatic</span><br><span class="line">Cscript \windows\system32\scregedit.wsf /im <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-2-本地主机"><a href="#9-2-本地主机" class="headerlink" title="9.2 本地主机"></a>9.2 本地主机</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Netsh advfirewall firewall <span class="built_in">set</span> rule <span class="built_in">group</span>=<span class="string">&quot;Remote Volume Management&quot;</span> new enable=yes</span><br></pre></td></tr></table></figure><h2 id="10-启动远程设备管理器"><a href="#10-启动远程设备管理器" class="headerlink" title="10. 启动远程设备管理器"></a>10. 启动远程设备管理器</h2><p>打开远程组策略</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpedit.msc /gpcomputer: c17<span class="literal">-hv1</span></span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Computer Configuration\Administrative Templates\System\Device Installation</span><br></pre></td></tr></table></figure><p>Enable <code>Allow remote access to the PnP interface</code><br>如果还不行就用这个<a href="http://www.device-tool.com/">小工具</a></p><h2 id="11-装驱动"><a href="#11-装驱动" class="headerlink" title="11. 装驱动"></a>11. 装驱动</h2><p>正常运行 exe，实在安不上的比如显卡驱动，使用 inf 安装器：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnputil -i -a *.inf</span><br></pre></td></tr></table></figure><h2 id="12-其他大概没有用的步骤"><a href="#12-其他大概没有用的步骤" class="headerlink" title="12. 其他大概没有用的步骤"></a>12. 其他大概没有用的步骤</h2><p>这些步骤在其他教程提到，但我没有操作也能使用。</p><h3 id="12-1-打开-WSManCredSSP服务"><a href="#12-1-打开-WSManCredSSP服务" class="headerlink" title="12.1 打开 WSManCredSSP服务"></a>12.1 打开 WSManCredSSP服务</h3><p>连接服务器 PowerShell</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%20Hyper-V%20Server/6d02347a.png" alt="配置远程管理 Hyper-V Server_2018-11-22-04-05-23.png"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Enable-WSManCredSSP</span> <span class="literal">-Role</span> server</span><br></pre></td></tr></table></figure><h3 id="12-2-客户端启用身份认证转发"><a href="#12-2-客户端启用身份认证转发" class="headerlink" title="12.2 客户端启用身份认证转发"></a>12.2 客户端启用身份认证转发</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Enable-WSManCredSSP</span> <span class="literal">-Role</span> client <span class="literal">-DelegateComputer</span> <span class="string">&quot;radar.coder17.com&quot;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/manage/remotely-manage-hyper-v-hosts">https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/manage/remotely-manage-hyper-v-hosts</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Hyper-V Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 远程桌面固定 DPI</title>
      <link href="posts/windows-rdp-fix-dpi/"/>
      <url>posts/windows-rdp-fix-dpi/</url>
      
        <content type="html"><![CDATA[<p>智障远程桌面会自适应客户机的 DPI，很烦人，每次布局都会变。<br>而且家里电脑的 VirtualBox 会出 bug，客户机非 100% 缩放连上去时，窗口标题会消失，在窗口上点右键直接蓝屏，提示 win32kfull.sys 崩溃，查了查大概是虚拟机驱动的问题。Chrome 在此模式下下载文件也会崩溃。<br>公司电脑没毛病，大概率是系统问题。但懒得重装，本着最懒原则直接禁用自适应 DPI 比较方便。<br>在服务端修改注册表：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations</span><br></pre></td></tr></table></figure><p>新建32位DWORD <code>IgnoreClientDesktopScaleFactor</code><br>设为1  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations&quot; /v IgnoreClientDesktopScaleFactor /t REG_DWORD /d <span class="number">1</span></span><br></pre></td></tr></table></figure><p>重启。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Windows%20%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%BA%E5%AE%9A%20DPI/f70e5359.png" alt="Windows 远程桌面固定 DPI_2018-11-22-03-58-21.png"></p><p><a href="https://social.technet.microsoft.com/Forums/en-US/7260267b-686d-4271-9dc2-5ae76e733e3f/disable-dpi-scaling-sync-for-remote-desktop-protocol-81">https://social.technet.microsoft.com/Forums/en-US/7260267b-686d-4271-9dc2-5ae76e733e3f/disable-dpi-scaling-sync-for-remote-desktop-protocol-81</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> RDP </tag>
            
            <tag> DPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置 ssh key 登录和改 sshd 端口</title>
      <link href="posts/config-sshd/"/>
      <url>posts/config-sshd/</url>
      
        <content type="html"><![CDATA[<h2 id="保存-ssh-key"><a href="#保存-ssh-key" class="headerlink" title="保存 ssh-key"></a>保存 ssh-key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">chmod 500 .ssh/authorized_keys</span><br></pre></td></tr></table></figure><h2 id="禁用密码登录与改端口"><a href="#禁用密码登录与改端口" class="headerlink" title="禁用密码登录与改端口"></a>禁用密码登录与改端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Port 22</span><br><span class="line"></span><br><span class="line"># 启用密钥验证</span><br><span class="line">RSAAuthentication yes # below 16.0</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 指定公钥数据库文件</span><br><span class="line">AuthorizedKeysFile %h&#x2F;.ssh&#x2F;authorized_keys # below 16.0</span><br><span class="line">AuthorizedKeysFile .ssh&#x2F;authorized_keys # 18.0</span><br><span class="line"></span><br><span class="line">PasswordAuthentication no</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ssh </tag>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp 转发安装为服务</title>
      <link href="posts/frp-install-service/"/>
      <url>posts/frp-install-service/</url>
      
        <content type="html"><![CDATA[<p>下载 frp 到 <code>/opt/frp</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R tojo /opt/frp</span><br><span class="line">sudo chmod -R 755 /opt/frp</span><br></pre></td></tr></table></figure><h2 id="1-配置"><a href="#1-配置" class="headerlink" title="1 配置"></a>1 配置</h2><h3 id="1-1-客户端"><a href="#1-1-客户端" class="headerlink" title="1.1 客户端"></a>1.1 客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/frp/frpc.ini</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = frp.coder17.com</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">3389</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">60022</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ss-tcp]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8848</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">60088</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ss-udp]</span></span><br><span class="line"><span class="attr">type</span> = udp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8848</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">60088</span></span><br></pre></td></tr></table></figure><h3 id="1-2-服务端"><a href="#1-2-服务端" class="headerlink" title="1.2 服务端"></a>1.2 服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/frp/frps.ini</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 3389</span><br><span class="line">vhost_http_port &#x3D; 60080</span><br><span class="line">vhost_https_port &#x3D; 60443</span><br><span class="line">subdomain_host &#x3D; frp.coder17.com</span><br><span class="line">dashboard_port &#x3D; 60000</span><br><span class="line">dashboard_user &#x3D; tojo</span><br><span class="line">dashboard_pwd &#x3D; 1qaz@WSX3edc</span><br></pre></td></tr></table></figure><h2 id="2-安装为服务"><a href="#2-安装为服务" class="headerlink" title="2 安装为服务"></a>2 安装为服务</h2><h3 id="2-1-客户端"><a href="#2-1-客户端" class="headerlink" title="2.1 客户端"></a>2.1 客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/frpc.service</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=frp Client Service</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">User</span>=tojo</span><br><span class="line"><span class="attr">ExecStart</span>=/opt/frp/frpc -c /opt/frp/frpc.ini</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> /etc/systemd/system/frpc.service</span><br><span class="line">sudo systemctl start frpc.service</span><br><span class="line">service frpc status</span><br></pre></td></tr></table></figure><h3 id="2-2-服务端"><a href="#2-2-服务端" class="headerlink" title="2.2 服务端"></a>2.2 服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/frps.service</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=frp Server Service</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">User</span>=tojo</span><br><span class="line"><span class="attr">ExecStart</span>=/opt/frp/frps -c /opt/frp/frps.ini</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> /etc/systemd/system/frps.service</span><br><span class="line">sudo systemctl start frps.service</span><br><span class="line">service frps status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> 安装服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决（小米）笔记本插电时升频太快导致过热</title>
      <link href="posts/cpu-overheat/"/>
      <url>posts/cpu-overheat/</url>
      
        <content type="html"><![CDATA[<p>买了这个带指纹的小米十三寸之后，别的什么都好，就是一插交流电，CPU 温度就噌噌噌上来了，风扇也跟着起飞。不插电源用电池的时候就很安静。<br>查了好多资料，包括一些买了小米的忧伤老外写的东西，建议无非是四个：</p><ol><li>装 XTU 调核心电压；</li><li>装 <a href="https://github.com/hirschmann/nbfc">Notebook Fan Control</a> 调风扇转速；</li><li>刷 BIOS 玄学降温；</li><li>在电源策略里限制 CPU 最大频率为 99%。</li></ol><p>首先 Inten XTU 是不好使的，新版 BIOS 早就封死调电压的入口了。而且其实也不是 CPU 电压的问题，而是 Windows 的电源策略太激进。我曾经刷回旧版 BIOS 调低了 CPU 核心电压，几乎没有效果。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%A7%A3%E5%86%B3%EF%BC%88%E5%B0%8F%E7%B1%B3%EF%BC%89%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8F%92%E7%94%B5%E6%97%B6%E5%8D%87%E9%A2%91%E5%A4%AA%E5%BF%AB%E5%AF%BC%E8%87%B4%E8%BF%87%E7%83%AD/113ba839.png" alt="解决（小米）笔记本插电时升频太快导致过热_2018-11-22-03-52-29.png"></p><p>然后装风扇转速控制我也试过，治标不治本，小米这个风扇是有点过于主动，但如果调低转速机器就会非常烫，不是问题的根源。</p><p>刷 BIOS 我试过网上传出的两个版本，又去小米售后专门刷了最新版：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%A7%A3%E5%86%B3%EF%BC%88%E5%B0%8F%E7%B1%B3%EF%BC%89%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8F%92%E7%94%B5%E6%97%B6%E5%8D%87%E9%A2%91%E5%A4%AA%E5%BF%AB%E5%AF%BC%E8%87%B4%E8%BF%87%E7%83%AD/2e16dc31.png" alt="解决（小米）笔记本插电时升频太快导致过热_2018-11-22-03-52-56.png"></p><p>不负责任地讲一句，没卵用。  </p><p>限制 CPU 频率的办法确实好用，但这是以牺牲性能为代价的，调到99%之后禁用了睿频，那我花那么多钱买这 i7 有何用？  </p><p>研究好久终于发现问题的根源是 Windows 的电源策略。<br>相关控制参数在电源方案里设置，但默认隐藏。<br>通过修改注册表可以显示，但相当麻烦。<br>参考：<br><a href="http://forum.notebookreview.com/threads/guide-power-options-power-plans-show-all-hidden-settings.767612/">http://forum.notebookreview.com/threads/guide-power-options-power-plans-show-all-hidden-settings.767612/</a><br><a href="https://docs.google.com/spreadsheets/d/17XBNNdMdX-Bkt1kb8dJW3FP4br0VL7G94tdFBo8SW48/edit?pli=1#gid=870536397">https://docs.google.com/spreadsheets/d/17XBNNdMdX-Bkt1kb8dJW3FP4br0VL7G94tdFBo8SW48/edit?pli=1#gid=870536397</a></p><p>因此使用小软件 <a href="https://bitsum.com/parkcontrol/">ParkControl</a> 解决：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%A7%A3%E5%86%B3%EF%BC%88%E5%B0%8F%E7%B1%B3%EF%BC%89%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8F%92%E7%94%B5%E6%97%B6%E5%8D%87%E9%A2%91%E5%A4%AA%E5%BF%AB%E5%AF%BC%E8%87%B4%E8%BF%87%E7%83%AD/5e693df5.png" alt="解决（小米）笔记本插电时升频太快导致过热_2018-11-22-03-54-41.png"></p><p>安装后勾上这个就可以卸载了。（其实这个小软件本来的功能是解锁 CPU 停车设置，让 CPU 工作得更猛烈一些的）<br>然后在电源计划里修改相关的值：  </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%A7%A3%E5%86%B3%EF%BC%88%E5%B0%8F%E7%B1%B3%EF%BC%89%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8F%92%E7%94%B5%E6%97%B6%E5%8D%87%E9%A2%91%E5%A4%AA%E5%BF%AB%E5%AF%BC%E8%87%B4%E8%BF%87%E7%83%AD/9da959ad.png" alt="解决（小米）笔记本插电时升频太快导致过热_2018-11-22-03-54-58.png"></p><p>搞成和电池状态差不多就行了，尤其是第一个升频阈值，默认是60%，一不小心就升频了。<br>保存之后重启（可能不重启也行），妈妈再也不担心我插电的时候风扇上天了。</p><p>神他妈爱抖露，偶像CPU。  </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%A7%A3%E5%86%B3%EF%BC%88%E5%B0%8F%E7%B1%B3%EF%BC%89%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8F%92%E7%94%B5%E6%97%B6%E5%8D%87%E9%A2%91%E5%A4%AA%E5%BF%AB%E5%AF%BC%E8%87%B4%E8%BF%87%E7%83%AD/90487196.png" alt="解决（小米）笔记本插电时升频太快导致过热_2018-11-22-03-55-28.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%A7%A3%E5%86%B3%EF%BC%88%E5%B0%8F%E7%B1%B3%EF%BC%89%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8F%92%E7%94%B5%E6%97%B6%E5%8D%87%E9%A2%91%E5%A4%AA%E5%BF%AB%E5%AF%BC%E8%87%B4%E8%BF%87%E7%83%AD/85fcc598.png" alt="解决（小米）笔记本插电时升频太快导致过热_2018-11-22-03-55-37.png"></p><p><a href="https://weibo.com/6174652641/GzCzRpTkM">https://weibo.com/6174652641/GzCzRpTkM</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> BIOS </tag>
            
            <tag> 笔记本 </tag>
            
            <tag> 散热 </tag>
            
            <tag> 小米 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>禁止 Windows 10 更新后自动重启</title>
      <link href="posts/windows-update-restart/"/>
      <url>posts/windows-update-restart/</url>
      
        <content type="html"><![CDATA[<p>昨晚上微软又分发更新并且强制重启了，我四台电脑只幸存了一台，其他上面开的虚拟机和工作环境啥的都没了。</p><p>很生气，研究了一下为啥幸存了一台，发现一年前我就给它动过手脚，当时我打着游戏呢就重启了。查阅了一下自己当时的记录，复现了一下，分享给大家。</p><p>设置组策略什么的都不好用，早晚还是要被微软强奸。<br>排查后发现重启是由任务计划中：</p><p><code>\Microsoft\Windows\UpdateOrchestrator</code></p><p>这个任务触发的，查看其上次启动时间就可以看到 Windows 的重启时间：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/5e4ff6f6.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-10-44.png"></p><p>但这个任务是系统用户创建的，我们自己没有权限搞死它。<br>研究一下任务干了什么：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/71dd76f9.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-11-33.png"></p><p>看到是执行了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%systemroot%\system32\MusNotification.exe</span><br></pre></td></tr></table></figure><p>这个程序来重启。进到系统目录下看看这个文件：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/e985485d.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-11-46.png"></p><p>发现其实是一个硬链接。而且这个程序即使删除或修改，在下次更新后也会自动恢复。我们只想禁止自动更新后的重启，并不是不更新。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/e4e15ead.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-44-14.png"></p><p>所以只能用 IFEO 映像劫持了：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/6adb1ad4.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-44-46.png"></p><p>路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options</span><br></pre></td></tr></table></figure><p>新建一个 Key，改名 <code>MusNotification.exe</code>：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/8d4ed555.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-45-24.png"></p><p>在右边新建字符串值，命名 <code>debugger</code>，值 <code>cscript.exe</code>（图中错误）。这个程序不带参数是啥也不会做的。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/37d84338.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-45-53.png"></p><p>重启一下，然后就再也不会重启了。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 自动更新 </tag>
            
            <tag> 重启 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinSCP 获取 sudo 权限</title>
      <link href="posts/winscp-sudo/"/>
      <url>posts/winscp-sudo/</url>
      
        <content type="html"><![CDATA[<ol><li><p>查看 sftp 路径</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/ssh/sshd_config|grep sftp</span><br><span class="line">Subsystem sftp /usr/lib/openssh/sftp-server</span><br></pre></td></tr></table></figure></li><li><p>编辑 sudo</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo visudo</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow members of group sudo to execute any command</span></span><br><span class="line">%sudo   ALL=(ALL:ALL) ALL</span><br><span class="line">tojo    ALL=NOPASSWD:  /usr/lib/openssh/sftp-server</span><br></pre></td></tr></table></figure></li><li><p>可选</p><p> <img src= "/images/loading.gif" data-lazy-src="/blogimg/WinSCP%20%E8%8E%B7%E5%8F%96%20sudo%20%E6%9D%83%E9%99%90/8baf2e2e.png" alt="WinSCP 获取 sudo 权限_2018-11-26-03-18-06.png"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WinSCP </tag>
            
            <tag> sudo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL 同步主机 ssh key</title>
      <link href="posts/wsl-sync-ssh-keys/"/>
      <url>posts/wsl-sync-ssh-keys/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line">mv -f ~/.ssh/known_hosts ~/.ssh/known_hosts.bak</span><br><span class="line">chmod -R 0755 ~/.ssh</span><br><span class="line">cp -r /mnt/c/Users/sykie/.ssh/* ~/.ssh</span><br><span class="line">chmod 0600 ~/.ssh/*</span><br><span class="line">chmod 0755 ~/.ssh</span><br><span class="line">mv -f ~/.ssh/known_hosts.bak ~/.ssh/known_hosts</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxychains 配置支持多场景和自定义 DNS</title>
      <link href="posts/proxychains-dns/"/>
      <url>posts/proxychains-dns/</url>
      
        <content type="html"><![CDATA[<p>Proxychains 开启时使用的是写死的公用 DNS 4.2.2.2，并不科学。同时只能支持一个代理或代理链，需要切换使用多个代理时并不方便。</p><p>下面以使用 <code>pc</code> 和 <code>pf</code> 两个命令分别连接两个不同的代理为例:</p><h2 id="链接-ss-的代理"><a href="#链接-ss-的代理" class="headerlink" title="链接 ss 的代理"></a>链接 ss 的代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/proxychains.conf</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">strict_chain</span><br><span class="line">quiet_mode</span><br><span class="line">proxy_dns</span><br><span class="line">tcp_read_time_out 15000</span><br><span class="line">tcp_connect_time_out 8000</span><br><span class="line"><span class="section">[ProxyList]</span></span><br><span class="line">socks5  127.0.0.1 1080</span><br></pre></td></tr></table></figure><h2 id="链接-fiddler-的代理"><a href="#链接-fiddler-的代理" class="headerlink" title="链接 fiddler 的代理"></a>链接 fiddler 的代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/proxyfiddler.conf</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">strict_chain</span><br><span class="line">quiet_mode</span><br><span class="line">proxy_dns</span><br><span class="line">tcp_read_time_out 15000</span><br><span class="line">tcp_connect_time_out 8000</span><br><span class="line"><span class="section">[ProxyList]</span></span><br><span class="line">http  127.0.0.1 8888</span><br></pre></td></tr></table></figure><h2 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h2><ul><li><code>pc xx</code> : use socks5 proxy 127.0.0.1:4411 to connect to xx</li><li><code>pf xx</code> : use http proxy 127.0.0.1:8888 to connect to xx, usually fiddler</li></ul><h2 id="Proxychains-4-NG"><a href="#Proxychains-4-NG" class="headerlink" title="Proxychains 4 NG"></a>Proxychains 4 NG</h2><p>新版没有以前不能解析域名的问题，直接安装即可。<br>但 Proxychains4 不支持 git，原因不明，会报错，因此使用 ProxychainsNG</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rofl0r/proxychains-ng.git</span><br><span class="line"><span class="built_in">cd</span> proxychains-ng</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; sudo make install</span><br><span class="line"><span class="built_in">cd</span> .. &amp;&amp; rm -rf proxychains-ng</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">alias</span> pc=\<span class="string">&#x27;proxychains4\&#x27;</span> &gt;&gt; ~/.bash_aliases</span><br><span class="line">sudo ln -s ~/.bash_aliases /root/.bash_aliases</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">alias</span> pf=\<span class="string">&#x27;proxychains4 -f /etc/proxyfiddler.conf\&#x27;</span> &gt;&gt; ~/.bash_aliases</span><br></pre></td></tr></table></figure><hr><h2 id="以下适用于-Proxychains-3-版本，已过时"><a href="#以下适用于-Proxychains-3-版本，已过时" class="headerlink" title="以下适用于 Proxychains 3 版本，已过时"></a>以下适用于 Proxychains 3 版本，已过时</h2><h3 id="改源码支持指定-dns"><a href="#改源码支持指定-dns" class="headerlink" title="改源码支持指定 dns"></a>改源码支持指定 dns</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="variable">$HOME</span>/.proxychains</span><br><span class="line">sudo vim /usr/lib/proxychains3/proxyresolv</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># This script is called by proxychains to resolve DNS names</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DNS server used to resolve names</span></span><br><span class="line">DNS_SERVER=<span class="variable">$&#123;PROXYRESOLV_DNS:-4.2.2.2&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> = 0 ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; usage:&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  proxyresolv &lt;hostname&gt; &quot;</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LD_PRELOAD=libproxychains.so.3</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$DNS_SERVER</span> = <span class="string">&quot;none&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">    dig <span class="variable">$1</span> +tcp | awk <span class="string">&#x27;/A.+[0-9]+\.[0-9]+\.[0-9]/&#123;print $5;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    dig <span class="variable">$1</span> @<span class="variable">$DNS_SERVER</span> +tcp | awk <span class="string">&#x27;/A.+[0-9]+\.[0-9]+\.[0-9]/&#123;print $5;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">alias</span> pf=<span class="string">&#x27;ln -sf /etc/proxyfiddler.conf $HOME/.proxychains/proxychains.conf; PROXYRESOLV_DNS=none proxychains&#x27;</span> &gt;&gt; ~/.bash_aliases</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">alias</span> pc=<span class="string">&#x27;ln -sf /etc/proxychains.conf $HOME/.proxychains/proxychains.conf; proxychains&#x27;</span> &gt;&gt; ~/.bash_aliases</span><br><span class="line"></span><br><span class="line">sudo ln -s ~/.bash_aliases /root/.bash_aliases</span><br><span class="line">sudo ln -s ~/.proxychains /root/.proxychains</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Proxychains </tag>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 Shadowsocks 客户端服务端并加为服务</title>
      <link href="posts/shadowsocks-server/"/>
      <url>posts/shadowsocks-server/</url>
      
        <content type="html"><![CDATA[<p><a href="https://gist.github.com/SykieChen/0996b1d1644e2a9d2f7b5b78a71caf2e">https://gist.github.com/SykieChen/0996b1d1644e2a9d2f7b5b78a71caf2e</a></p><h2 id="1-install-and-config"><a href="#1-install-and-config" class="headerlink" title="1. install and config"></a>1. install and config</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-pip</span><br><span class="line">sudo apt install shadowsocks</span><br><span class="line">or</span><br><span class="line">sudo pip install git+https://github.com/shadowsocks/shadowsocks.git@master</span><br></pre></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-客户端"><a href="#2-1-客户端" class="headerlink" title="2.1 客户端"></a>2.1 客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;server&quot;</span>: <span class="string">&quot;27.102.111.111&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_address&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span>: <span class="number">1080</span>,</span><br><span class="line">    <span class="attr">&quot;server_port&quot;</span>: <span class="number">12345</span>,</span><br><span class="line">    <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;passsss&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="attr">&quot;method&quot;</span>: <span class="string">&quot;aes-256-cfb&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-服务端"><a href="#2-2-服务端" class="headerlink" title="2.2 服务端"></a>2.2 服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ssserver.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;server&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_address&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span>: <span class="number">1080</span>,</span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="attr">&quot;method&quot;</span>: <span class="string">&quot;aes-256-cfb&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;port_password&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;3389&quot;</span>: <span class="string">&quot;passsss&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;2003&quot;</span>: <span class="string">&quot;passsss&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;server&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;server_port&quot;</span>:<span class="number">3389</span>,</span><br><span class="line">    <span class="attr">&quot;local_address&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">&quot;password&quot;</span>:<span class="string">&quot;passsss&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">&quot;method&quot;</span>:<span class="string">&quot;aes-256-cfb&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;fast_open&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-add-as-service"><a href="#3-add-as-service" class="headerlink" title="3. add as service"></a>3. add as service</h2><h3 id="3-1-客户端"><a href="#3-1-客户端" class="headerlink" title="3.1 客户端"></a>3.1 客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/shadowsocks.service</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Shadowsocks Client Service</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">User</span>=tojo</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/bin/sslocal -c /etc/shadowsocks.json</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> /etc/systemd/system/shadowsocks.service</span><br><span class="line">sudo systemctl start shadowsocks.service</span><br><span class="line">service shadowsocks status</span><br></pre></td></tr></table></figure><h3 id="3-2-服务端"><a href="#3-2-服务端" class="headerlink" title="3.2 服务端"></a>3.2 服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/ssserver.service</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Shadowsocks Server Service</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">User</span>=tojo</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/bin/ssserver -c /etc/ssserver.json</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> /etc/systemd/system/ssserver.service</span><br><span class="line">sudo systemctl start ssserver.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
            <tag> 服务端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ss-tunnel 转发 dns</title>
      <link href="posts/ss-tunnel-dns/"/>
      <url>posts/ss-tunnel-dns/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sudo /usr/<span class="built_in">local</span>/bin/ss-tunnel -c /etc/shadowsocks-libev/config.json -l 53 -v -b 127.0.0.1 -L 8.8.8.8:53 -u &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shadowsocks </tag>
            
            <tag> ss-tunnel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译安装 ss-libev</title>
      <link href="posts/compile-ss-libev/"/>
      <url>posts/compile-ss-libev/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/madeye/shadowsocks-libev">https://github.com/madeye/shadowsocks-libev</a><br><a href="http://shadowsocks.org/en/download/servers.html">http://shadowsocks.org/en/download/servers.html</a></p><p>Ubuntu 16.04 下无法从源安装，dpkg 编译失败，需要从源码编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --no-install-recommends build-essential autoconf libtool libssl-dev gawk debhelper dh-systemd init-system-helpers pkg-config asciidoc xmlto apg libpcre3-dev zlib1g-dev libev-dev libudns-dev libsodium-dev libmbedtls-dev libc-ares-dev automake</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/shadowsocks/shadowsocks-libev.git</span><br><span class="line"><span class="built_in">cd</span> shadowsocks-libev</span><br><span class="line">git submodule update --init</span><br><span class="line">./autogen.sh &amp;&amp; ./configure &amp;&amp; make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>From <a href="http://shadowsocks.org/en/download/servers.html">http://shadowsocks.org/en/download/servers.html</a></p><p>Docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull shadowsocks/shadowsocks-libev</span><br><span class="line">docker run -e PASSWORD=&lt;password&gt; -p&lt;server-port&gt;:8388 -p&lt;server-port&gt;:8388/udp -d shadowsocks/shadowsocks-libev</span><br></pre></td></tr></table></figure><p>From <a href="http://shadowsocks.org/en/download/servers.html">http://shadowsocks.org/en/download/servers.html</a> </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
            <tag> 编译 </tag>
            
            <tag> ss-libev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nextcloud https 协议有混合内容无法显示</title>
      <link href="posts/nextcloud-https-mixed-content/"/>
      <url>posts/nextcloud-https-mixed-content/</url>
      
        <content type="html"><![CDATA[<p>提示 csp 屏蔽，一般由反向代理导致。</p><h3 id="Docker部署时："><a href="#Docker部署时：" class="headerlink" title="Docker部署时："></a>Docker部署时：</h3><p>设置环境变量：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">APACHE_DISABLE_REWRITE_IP:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">TRUSTED_PROXIES:</span> <span class="number">172.16</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span> <span class="comment"># 反向代理地址，一般为 docker 虚拟网关地址</span></span><br></pre></td></tr></table></figure><p>或者设置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">OVERWRITEPROTOCOL:</span> <span class="string">https</span></span><br></pre></td></tr></table></figure><p>From: <a href="https://github.com/nextcloud/docker">https://github.com/nextcloud/docker</a></p><h3 id="独立部署时："><a href="#独立部署时：" class="headerlink" title="独立部署时："></a>独立部署时：</h3><p>修改 config/config.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;overwrite.cli.url&#x27;</span> =&gt; <span class="string">&#x27;https://cloud.myserver.com&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;overwriteprotocol&#x27;</span> =&gt; <span class="string">&#x27;https&#x27;</span>,</span><br></pre></td></tr></table></figure><p>From: <a href="https://help.nextcloud.com/t/nextcloud-wont-load-any-mixed-content/13565">https://help.nextcloud.com/t/nextcloud-wont-load-any-mixed-content/13565</a> </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Nextcloud%20https%20%E5%8D%8F%E8%AE%AE%E6%9C%89%E6%B7%B7%E5%90%88%E5%86%85%E5%AE%B9%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/53dc8f1d.png" alt="Https 协议有混合内容无法显示_2018-11-26-03-09-48.png"></p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nextcloud </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Portainer 启动/升级</title>
      <link href="posts/protainer-launch-update/"/>
      <url>posts/protainer-launch-update/</url>
      
        <content type="html"><![CDATA[<h2 id="Launch"><a href="#Launch" class="headerlink" title="Launch"></a>Launch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker volume create portainer_data</span><br><span class="line">docker run -d -p 127.0.0.1:9000:9000 -p 8000:8000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data --restart unless-stopped --name portainer portainer/portainer</span><br></pre></td></tr></table></figure><p>From <a href="https://portainer.io/install.html">https://portainer.io/install.html</a> </p><h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><ul><li><p>在 Web 界面执行 Duplicate/Edit</p></li><li><p>直接确认后，会自动拉取新镜像并停止旧 Container，但不能自动拉起新 Container</p></li><li><p>SSH 登录，手动删除旧 Container，再使用上述第二条命令重新拉起即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm portainer</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Portainer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Switch 游戏加速透明代理的改进部署</title>
      <link href="posts/trans-proxy-splatton2-mod/"/>
      <url>posts/trans-proxy-splatton2-mod/</url>
      
        <content type="html"><![CDATA[<p>上篇文章（<a href="/posts/trans-proxy-splatoon2/">搭建透明代理加速 Splatoon2 游戏手记</a>）中，关于部署方式我提到，由于无线网卡的不兼容，开虚拟机的宿主机必须以有线方式接入路由设备。</p><p>我当时选择的是把宿主机笔记本直接放在客厅路由器旁边当服务器用。现在看来这种操作太粗鲁了。因此这里介绍一种更优雅的部署方式。</p><h2 id="1-电力猫"><a href="#1-电力猫" class="headerlink" title="1. 电力猫"></a>1. 电力猫</h2><p>首先我把电脑搬回了卧室，然后试图使用电力猫来有线连接到客厅的路由器。<br>我以前使用的是下面这个腾达的千兆电力猫：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/25a45432.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-15-21.png"></p><p>这玩意儿是一对，一个用网线插到路由器上，再插到路由器旁边的插座里。另一个在电脑旁边找个插座，用网线连上电脑就行了。利用电力线传输数据。</p><p>我之前刚安装的时候，它速度很快，测速在 400Mbps 以上，考虑到衰减和干扰这个速度是可以接受的。</p><p>但过了一段时间之后它的速度下降的很厉害，最高只有 50Mbps 上下，还不到我宽带的出口速度，已经开始拖慢我的网速了。原因可能是房间供电线路老化之类的吧。我懒得追究了，当时就购入了外置无线网卡解决速度问题。电力猫闲置下来后就送给家里信号不好的同事了。</p><p>鉴于上次的经历不是很愉快，这次我又换了个牌子，重新买了一对水星的千兆电力猫：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/901ea349.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-15-36.png"></p><p>结果还是一样，刚插上去好好的，速度很快。不一会儿速度就掉了下来，并且大量丢包，玩游戏很难受。</p><p>那没办法了，还是得考虑有线方案。</p><h2 id="2-增加辅助路由"><a href="#2-增加辅助路由" class="headerlink" title="2. 增加辅助路由"></a>2. 增加辅助路由</h2><p>说是有线，其实只要保证 VirtualBox 给虚拟机桥接的那个网卡是有线网卡就行了。上公网不一定非要走有线。</p><p>事到如今，我也没法坚持不加新设备了。最优雅的方式其实还是用 OpenWRT 系统的路由器重新部署一套，一次部署到处使用。但我懒得重新刷 OpenWRT 的系统，想只用一个普通路由解决问题。</p><p>所以我又找了个小路由器，把宿主机有线插入 LAN，并把有线网卡桥接到虚拟机，虚拟机另外添加一张 NAT 网卡用于共享主机的网络连接。其他需要透明代理的设备直接无线接入小路由器。</p><p>拓扑图大概是下面这个样子。宿主机双网卡，无线接主路由，有线接辅助路由。虚拟机双网卡，一张 NAT 上公网，一张桥接辅助路由当透明代理网关。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/c5c0fb24.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-15-57.png"></p><p>此时因为宿主机和虚拟机都双网卡了，需要设置一下路由表。</p><p>Windows 的路由表比较奇怪，我起初是通过增加有线网卡的跃点数 metric ，试图降低有线网卡（接辅助路由，无公网访问）的优先级，但修改后可以连通外网，DNS 却始终优先使用有线网卡获得的 192.168.2.2 的 DNS 地址，无法解析。我试图手动改路由表，折腾半天也没让它优先走无线网卡的 DNS。但直接 ping 公网 IP 地址确实是通的。</p><p>后来换了个思路，降低无线网卡的跃点数。如图，设置成1之后就 OK 了，Windows 的 DNS 策略真的很谜。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/e969ae75.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-13.png"></p><p>设置好之后路由表如下，都是系统自动生成的。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/0e0a74c6.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-22.png"></p><p>实际上宿主机实际上是三网卡的，两个无线一个有线。起初我尝试用另外一张无线网卡作为 AP 模式发射热点，取代辅助路由的功能，后来发现在 Windows 上配置这个太麻烦了就放弃了。</p><p>然后要设置一下虚拟机的 Ubuntu 系统的路由表。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/b1670d1f.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-35.png"></p><p>可以看到虚拟机有两块网卡，enp0s3 是 NAT 连接到主机的网卡，IP 设成自动获取就可以。</p><p>enp0s8 是桥接了有线网卡，接入辅助路由的。手动指定其 IP 地址为 192.168.2.2。</p><p>此时路由表的主出口不一定是 NAT 那个网卡，导致公网不通。我们删掉默认的出口路由，手动指定出口为 enp0s3 即可。命令如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/4ba28f3d.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-48.png"></p><p>需要使用 sudo 执行。执行过后虚拟机的路由表如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/7469a5d0.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-55.png"></p><p>很简洁，此时我们可以正常上公网了。</p><p>之后把 Switch 接入辅助路由的无线网，手动设置网关为 192.168.2.2，MTU 稍微改小到 1390。参照上篇文章的内容，Switch 应该已经通过代理上网了。测速结果非常可观，没有瓶颈。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/f94f5add.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-17-04.png"></p><p>好了，很开心。进行收尾工作，把手动设置路由的两句话加到 linux 的自启动里，尝试重启主机和虚拟机几次，都可以自动初始化完成。</p><p>非常优雅。收工。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 透明代理 </tag>
            
            <tag> Splatoon2 </tag>
            
            <tag> 加速 </tag>
            
            <tag> Shadowsocks </tag>
            
            <tag> 改进 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建透明代理加速 Splatoon2 游戏手记</title>
      <link href="posts/trans-proxy-splatoon2/"/>
      <url>posts/trans-proxy-splatoon2/</url>
      
        <content type="html"><![CDATA[<p>上周末，朋友终于带着 Switch 来我家玩耍了。好，棒，很开心。</p><p>我发的胖友圈是这样的：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/1a110660.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-20-31.png"></p><p>看起来很开心的样子，然而实际上是这样的：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/090745e2.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-20-41.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/2143eb7f.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-20-48.png"></p><p>以前一直还可以的联通宽带突然爆炸，怎么都连不上老任的服务器。挨着的两个机器甚至无法在好友列表里看到彼此的在线状态。</p><p>我天真地以为过几天网就会好起来吧。但周末结束了，我还是连不上 Splatoon。</p><p>我不管，我要玩乌贼暖暖。</p><h2 id="1-原理与方案选择"><a href="#1-原理与方案选择" class="headerlink" title="1. 原理与方案选择"></a>1. 原理与方案选择</h2><p>加速游戏无非是包转发，之前在 windows 电脑部署的普通 ss 客户端只能转发 http 包。设置其为代理后只能进大厅，无法用 udp 协议与其他玩家通信。</p><p>因此需要部署一个能代理 udp 包的东西。</p><p>当然，最简单的办法还是买现成的加速器，比如X易的UU，但是很贵，一个月三十。想了想九月份开始任天堂也要收联网服务费了，还是放弃了购买加速器。</p><p>自食其力的话，首先想到的是全局微屁恩，但是这东西一来部署起来非常麻烦，二来协议特征太明显，用不了两天就会被安排。</p><p>有一个 SS-Tap 号称能把 ss 转成全局的，但我试过之后并不能分享给局域网设备。</p><p>那么还是找我们的老朋友小飞机吧，ss-libev 分支有一个 ss-redir 的工具，是专用来做透明代理的，可以一战。</p><h2 id="2-软硬环境"><a href="#2-软硬环境" class="headerlink" title="2. 软硬环境"></a>2. 软硬环境</h2><p>硬件上我不想使用路由器刷 op 之类的智能系统的方式，一来刷系统很烦，二来需要多加一个设备。</p><p>我当前有一台 7*24 开机的大笔记本（以下称为S），平时做 NAS 服务器使用。那么可以在这个机器上开一个虚拟机装 ubuntu，使用桥接模式接入现有的网络，再作为网关，在 switch 上手动指定即可。</p><p>ubuntu 使用了 16.04，32 位，内存随便划了 512M。</p><h2 id="3-部署"><a href="#3-部署" class="headerlink" title="3. 部署"></a>3. 部署</h2><p>服务端的部署就不废话了，懒得自己搭买一个也可以的，但注意要加 -u 支持 udp 转发。</p><p>客户端在我们刚才的虚拟机里（以下称为A）。装好系统之后，打开 sshd，在本机上使用 ssh 连到虚拟机A。</p><p>首先要打开系统的转发模式开关。sudo vim /etc/sysctl.conf ，去掉 net.ipv4.ip_forward=1 的注释。然后 sudo sysctl -p 立即生效。</p><p>此时设置局域网内随便一个终端的网关为这个虚拟机的 IP，DNS 可以指定为 114.114.114.114，测试一下应该可以联网。出口 IP 依旧是你本地的出口。我这里使用了另外一台虚拟机（以下称为B）。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/fab63459.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-21-15.png"></p><p>参考官方文档，在虚拟机A上编译最新版 ss-libev。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --no-install-recommends build-essential autoconf libtool libssl-dev gawk debhelper dh-systemd init-system-helpers pkg-config asciidoc xmlto apg libpcre3-dev zlib1g-dev libev-dev libudns-dev libsodium-dev libmbedtls-dev libc-ares-dev automake</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/shadowsocks/shadowsocks-libev.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> shadowsocks-libev</span><br><span class="line"></span><br><span class="line">git submodule update --init</span><br><span class="line"></span><br><span class="line">./autogen.sh &amp;&amp; ./configure &amp;&amp; make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>其实如果用 ubuntu 16.10 以上系统的话是不用自己编译的，软件源里有二进制包可以直接下载。但为了确保版本最新，还是推荐编译。</p><p>安装好之后，自己写一个 json 把服务器信息写进去。会用小飞机的都知道我也不废话了。</p><p>然后启动 ss-redir，监听的本地端口以 1080 为例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ss-redir -c /etc/s.json -u -v</span><br></pre></td></tr></table></figure><p><code>-u</code> 是支持 udp 转发的开关，这个前面说过，也需要服务端支持。</p><p><code>-v</code> 是废话模式的开关，可以输出很多 info 级的日志便于调试。</p><p>打开后应该如图所示，开始监听 1080 端口了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/680feb28.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-22-30.png"></p><p>此时还没有设置转发，在网内其他终端测试出口依旧是本地联通的 IP。</p><p>然后编辑 iptables 实现转发。其中 tcp 包通过 redirect 直接重定向到 1080 端口即可。但 udp 包由于是无状态连接，系统无法通过连接跟踪找到它本来的目的地，因此不能直接重定向，需要借助 tproxy 实现。</p><blockquote><p>首先我们来了解一下 iptables 的 REDIRECT 重定向的意义，REDIRECT 其实就是 DNAT 目的地址转换，只不过它的目的地址为 127.0.0.1，因此给它取了个形象的名字 - 重定向；DNAT 其实是很粗暴的，就是修改数据包的目的 IP 和目的 Port；那么在 ss-redir 中，它是怎么获取数据包原来的目的 IP 和目的 Port 的呢（就像发快递，你总得知道这个快件要发往哪吧，不然你收到来有什么用）？答案是，借助 Linux 的连接跟踪机制。</p><p>什么是连接跟踪？顾名思义，就是跟踪并记录网络连接的状态。Linux 会为每个经过网络堆栈的数据包都生成一个新的连接记录项，此后，所有属于此连接的数据包都会被唯一分配给这个连接，并标识连接的状态。因此，做了 NAT（网络地址转换）的数据包在内核中都是有记录的。而 ss-redir 只要使用 netfilter 提供的 API 即可从连接记录项中获取数据包原本的目的地址和目的端口，来进行代理。</p><p>但是，上面这种情况只针对 TCP；对于 UDP，如果你做了 DNAT，就无法再获取数据包的原目的地址和目的端口了，具体的技术细节我不清楚，我们只需要知道 UDP 透明代理没有这么简单。</p><p>那么该怎么透明代理 UDP 呢？利用 TPROXY 技术。TPROXY 是在 Kernel 2.6.28 引进的全新透明代理技术，TPROXY 完全不同于传统的 DNAT 方式。TPROXY 实现的透明代理有以下特点：</p><ul><li><p>不对 IP 报文做改动（不做 DNAT）；</p></li><li><p>应用层可用非本机 IP 与其它主机建立 TCP/UDP 连接；</p></li><li><p>Kernel 通过 iptables-tproxy 和策略路由将非本机流量送到 socket 层；</p></li><li><p>仍需要通过其它技术拦截做代理的流量到代理服务器（WCCP 或 PBR 策略路由）。</p></li></ul></blockquote><p>以上摘自： <a href="https://paper.tuisec.win/detail/da1a980ab61ce92">https://paper.tuisec.win/detail/da1a980ab61ce92</a></p><p>那么对 iptables 执行以下改动（先使用 sudo -i 进入 root 权限 bash）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SS-REDIR TCP</span></span><br><span class="line"></span><br><span class="line">iptables -t nat -N SSREDIR_TCP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bypass ssserver and LAN</span></span><br><span class="line"></span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d ===server ip=== -j RETURN</span><br><span class="line"></span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 0.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 240.0.0.0/4 -j RETURN</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redirect TCP</span></span><br><span class="line"></span><br><span class="line">iptables -t nat -A SSREDIR_TCP -p tcp -j REDIRECT --to-ports 1080</span><br><span class="line"></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp -j SSREDIR_TCP</span><br><span class="line"></span><br><span class="line"><span class="comment"># SS_REDIR UDP</span></span><br><span class="line"></span><br><span class="line">ip rule add fwmark 0x02/0x02 table 100</span><br><span class="line">ip route add <span class="built_in">local</span> 0.0.0.0/0 dev lo table 100</span><br><span class="line">iptables -t mangle -N SSREDIR_UDP</span><br><span class="line"></span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d ===server ip=== -j RETURN</span><br><span class="line"></span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 0.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 240.0.0.0/4 -j RETURN</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redirect UDP</span></span><br><span class="line"></span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -p udp -j TPROXY --on-port 1080 --tproxy-mark 0x02/0x02</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable</span></span><br><span class="line"></span><br><span class="line">iptables -t mangle -A PREROUTING -j SSREDIR_UDP</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中的 <code>===server ip===</code> 是你服务器的 IP。</p><p>简单说就是先新建了一个链，把目的地是你服务器地址和其他一些内网地址的包放过去，剩下的全部 tcp 包都转到本地 1080 端口上。然后把这个链加到 PREROUTING 链上，转掉所有入站的 tcp 包。</p><p>然后又新建了一个表，规定表里所有的数据包打上一个标记（0x02/0x02，我随便写的值，也可以使用其他值），再新建一个链，同样放过一些特殊地址的包之后，把剩下的 udp 包全部搞进这个表带上标记。再把所有带标记的包转到本地 1080 端口。最后把这个链也挂到PREROUTING 链上，使之生效。</p><p>上面两段话用词不太准确，只是说个意思方便理解。</p><p>那么加完转发之后，我们的透明代理理论上已经开始工作了。</p><p>在虚拟机B里测测看，出口已经变成服务器地址了。在浏览器里开几个页面也都正常显示。此时可以更改 DNS 为 8.8.8.8 了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/0688bae0.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-26-09.png"></p><p>好，爽。</p><h2 id="4-坑：桥接无线网卡"><a href="#4-坑：桥接无线网卡" class="headerlink" title="4. 坑：桥接无线网卡"></a>4. 坑：桥接无线网卡</h2><p>高兴的太早了。我上面是在虚拟机里测的。等我把手机和另外一台物理电脑也设置成透明代理做网关之后，却时断时续地打不开网页。甚至我取消 iptables 里面的转发设置时，也不能显示我本地的 IP 出口。</p><p>提示的错误也很奇怪，一会儿是 DNS 无法解析，一会儿是无法连接。做网关的虚拟机A里面的日志也是时断时续。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/42067b08.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-20.png"></p><p>查了半天，毫无头绪，把前面的步骤试了又试也没有变化。</p><p>哎，脑壳疼。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/92d8c4eb.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-32.png"></p><p>但注意到一个问题，那就是我测试的时候，在同一台大电脑上开的另一个虚拟机下测就没问题，用局域网内其他的设备测就时断时续。</p><p>在这卡了三天之后，怀疑的目光落在了网卡上。宿主机S因为自带的网卡过于老迈，不支持 5G WiFi，为了保证连接速度我使用了一块水星的 USB 外置网卡。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/389f4ec1.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-41.png"></p><p>谷歌了一顿之后发现有不少人声称他们的无线网卡无法在 VirtualBox 等虚拟机软件里设置为桥接模式。原因是无线网卡通常不支持混杂模式，无法接收非主机 IP 地址的包。</p><p>但我这个能桥接啊，真的是它的问题么？</p><p>我尝试把虚拟机 A 和 B 桥接的网卡都改回了笔记本自带的 Intel 网卡。这次是真的不能桥接了，完全无法联网，在路由器后台也看不见两个虚拟机。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/3594aac8.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-54.png"></p><p>那看来网卡的嫌疑真的很大，那我们试试有线连接吧。</p><p>我之前的电力猫送人了，但路由器在客厅，想要物理接入的话只能把宿主机笔记本S抱过去。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/9193b80c.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-04.png"></p><p>然后桥接有线网卡，再试，破案了，网内所有终端都能正常联网了。</p><p>这个坑最坑的地方在于，无线网卡对混杂模式支持的不完整，虽然能正常桥接联网，但却无法转发所有的入站包，使问题难以定位。</p><h2 id="5-坑：MTU"><a href="#5-坑：MTU" class="headerlink" title="5. 坑：MTU"></a>5. 坑：MTU</h2><p>终于填好了坑，我们可以愉快地填下一个坑了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/d19c73a7.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-28.png"></p><p>把 switch 也接入到网关下之后，发现能正常登录、进房间，但无法和其他用户连接。</p><p>显然是 udp 的哪里出了问题吧。但看日志也挺正常的啊，所有的请求都有回应。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/28a82285.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-40.png"></p><p>这时我注意到，在使用 curl 请求某个地址的时候，总是先发出两个 udp 包，等待五秒后，又发出两个 udp 包，才解析成功。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/b24336d1.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-51.png"></p><p>但直接 nslookup 的时候又能立即返回结果。</p><p>这个现象十分诡异，我到现在也不能解释。</p><p>客户端没有发现问题，那么看看服务端吧。由于之前测试一直用的是购买的服务，看不到日志。所以我又临时开了一台 vps，搭了个服务端来看日志。</p><p>诡异的是使用自己搭的服务端就没有这个问题了，秒查秒回。</p><p>只能理解成大概购买的服务开了某种多重发包的插件吧。</p><p>但问题依然没有解决。</p><p>尝试开了一局游戏，发现在匹配对手的过程中，客户端快速滚过的日志可以看出游戏在反复试图与其他玩家的 ip 发 udp 包试图连接。但服务端的日志滚动速度明显低于客户端。</p><p>怀疑丢包了。</p><p>丢包最大的可能性是 udp 包在传输路径上被 ISP 给丢弃了。udp 包优先级不高，如果 QoS 策略比较激进那么丢包的概率很高。</p><p>但我用 nc 测了测 udp，发现并没有丢包。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/47be85fe.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-03.png"></p><p>陷入沉思，在网上随便搜索的时候，看到这么一个帖子：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/6a9275db.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-14.png"></p><p>啥玩意儿？MTU 超了居然不拆分而是直接丢包？难怪我用 nc 发小包测的时候不丢。</p><p>联想到之前在 github 上看 madeye 大神回的 issue 里也提到过建议一个 xbox 连不上的哥们试试改 MTU 小一点，我就死马当活马医地在 switch 里把 MTU 从 1400 改成了 1390.。</p><p>然后我特么就进！游！戏！了！</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/dd221766.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-24.png"></p><p>看着屏幕上翻滚的日志我是真的想拥抱大海。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/427aefa6.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-36.png"></p><p>（然后我输了，对面的马桶是真的不知到该怎么打掉</p><h2 id="6-总结优化"><a href="#6-总结优化" class="headerlink" title="6. 总结优化"></a>6. 总结优化</h2><p>这次一共遇到两个迷惑性较大的坑，一个是无线网卡的混杂模式，因为一直以来工作得很好，我并没有第一时间怀疑它。</p><p>另一个是 MTU 的问题，正常讲数据包大于 MTU 时会被拆分，但 ss-libev 作了丢包的操作不知道是出于什么考虑，可能是消除协议特征？</p><p>最后那个 curl 会 DNS 查两次的问题依然没有头绪。不过后来将服务端拆掉换回买的服务之后依然可以正常连接，说明这个问题并没有实际影响，暂且不管吧。</p><p>至于方案的优化，后期把写 iptables 和开 ss-redir 服务的命令写到 rc.local 里开机启动即可。注意 rc.local 加载时系统的环境变量不完整，启动 ss-redir 需要指定其完整路径，可以使用 which ss-dir 或者 whereis ss-dir 命令查看。</p><p>作为网关的虚拟机A也可以调小内存，大概 256M 也可以正常工作的。</p><p>宿主机S决定就让它呆在路由器旁边了，一个服务器是不需要放在卧室里的。回头把外接的硬盘盒和 UPS 也搬过去。</p><p>坑就这么多，谢谢观赏。</p><p>参考资料：</p><p><a href="http://ezlost.tk/2018/02/24/ss-redir/">http://ezlost.tk/2018/02/24/ss-redir/</a></p><p><a href="https://blog.csdn.net/lvshaorong/article/details/52909055">https://blog.csdn.net/lvshaorong/article/details/52909055</a></p><p><a href="https://blog.csdn.net/lvshaorong/article/details/53203674">https://blog.csdn.net/lvshaorong/article/details/53203674</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-libev/issues/1883">https://github.com/shadowsocks/shadowsocks-libev/issues/1883</a></p><p><a href="https://cn.aliyun.com/jiaocheng/148168.html">https://cn.aliyun.com/jiaocheng/148168.html</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-libev/issues/1566">https://github.com/shadowsocks/shadowsocks-libev/issues/1566</a></p><p><a href="https://lixingcong.github.io/2018/06/11/ss-redir-ipset/">https://lixingcong.github.io/2018/06/11/ss-redir-ipset/</a></p><p><a href="https://usodesu.ga/2018-04-26/OpenWrt-Transparent-Proxy-with-ss-redir/">https://usodesu.ga/2018-04-26/OpenWrt-Transparent-Proxy-with-ss-redir/</a></p><p><a href="https://doub.io/ss-jc34/">https://doub.io/ss-jc34/</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 透明代理 </tag>
            
            <tag> Splatoon2 </tag>
            
            <tag> 加速 </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows RDP 启动本地显卡</title>
      <link href="posts/windows-local-gpu/"/>
      <url>posts/windows-local-gpu/</url>
      
        <content type="html"><![CDATA[<p>使用管理员身份运行，可以使用 <a href=":note:3ca143be-6360-4942-beaa-a45b2c6fccc5">Windows 批处理自动提权</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d %~dp0</span><br><span class="line"><span class="keyword">for</span> /f <span class="string">&quot;tokens=3&quot;</span> %%a <span class="keyword">in</span> (<span class="string">&#x27;qwinsta ^| find &quot;&lt; user name &gt;&quot;&#x27;</span>) <span class="keyword">do</span> <span class="built_in">set</span> id=%%a</span><br><span class="line">powershell <span class="built_in">Disconnect-RDUser</span> <span class="literal">-HostServer</span> localhost <span class="literal">-UnifiedSessionID</span> %id% <span class="literal">-Force</span></span><br><span class="line">tscon %id% /DEST:console</span><br><span class="line">wmic <span class="keyword">process</span> call create <span class="string">&quot;&lt; program uses GPU &gt;&quot;</span></span><br></pre></td></tr></table></figure><p>运行后 RDP 会断开，重连即可。注意提前在显卡驱动中将所需程序设为使用 GPU 运行。<br>其中第三行为主动断开 RDP，防止第四行被动断开后弹窗。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> RDP </tag>
            
            <tag> 显卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防止 WSL 下 git 显示所有文件修改过</title>
      <link href="posts/wsl-git-autocrlf/"/>
      <url>posts/wsl-git-autocrlf/</url>
      
        <content type="html"><![CDATA[<p>如果常在 Windows 下使用 git，则修改 WSL 中 git 设置：</p><p><code>git config --global core.autocrlf input</code></p><p>如果常在 WSL 中使用，则修改 Windows 默认设置：</p><p><code>git config --global core.autocrlf false</code></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> WSL </tag>
            
            <tag> autocrlf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统从大硬盘无损迁移到小硬盘的方法备忘</title>
      <link href="posts/hdd-move-system/"/>
      <url>posts/hdd-move-system/</url>
      
        <content type="html"><![CDATA[<p>（好久没写东西，博客也一直没时间迁移，实在是很丢人，谢谢大家还没取关。）</p><p>一般来讲迁移硬盘数据都是小硬盘到大硬盘，很多硬盘对拷软件也只支持源盘小于目标盘的数据迁移。有的支持从大到小迁移的软件也是按文件复制。对于一些隐藏分区或者特殊格式的分区来说，这种复制方式可能丢失数据。我研究了半天摸索了以下方法，作个备忘与参考。</p><p>思路是：<br>新建一个 vhdx 虚拟硬盘→大盘拷进虚拟盘→虚拟盘缩容→虚拟盘拷进小硬盘</p><p>关键节点在于虚拟盘缩容，这样可以保证每一步对拷都是逻辑上的小盘到大盘。注意大盘上的实际数据量不能超过小盘容量。</p><p>这个思路很绕，我暂时没有想出更好的方式。如果有更好的思路或者工具请一定不吝赐教。</p><h2 id="1-新建虚拟盘"><a href="#1-新建虚拟盘" class="headerlink" title="1 新建虚拟盘"></a>1 新建虚拟盘</h2><p>这个很简单，Windows 的磁盘管理就可以。注意新建 vhdx 格式的，否则后面缩容的时候还要花时间转换。虚拟盘最大容量要大于大盘一点，选择动态容量即可。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/0.gif" alt="image-0"></p><h2 id="2-大盘拷进虚拟盘"><a href="#2-大盘拷进虚拟盘" class="headerlink" title="2 大盘拷进虚拟盘"></a>2 大盘拷进虚拟盘</h2><p>在 Windows 的磁盘管理里先把虚拟盘挂载上，一般新建之后会自动挂载。盘符分不分都行。然后随便找个硬盘对拷软件，比如 DiskGenius，把大盘对拷到虚拟盘上。对拷的时候不要选择创建新的硬盘 ID。这一步就不放图了，时间会比较久。</p><h2 id="3-虚拟盘缩容"><a href="#3-虚拟盘缩容" class="headerlink" title="3 虚拟盘缩容"></a>3 虚拟盘缩容</h2><h3 id="3-1-分区调整"><a href="#3-1-分区调整" class="headerlink" title="3.1 分区调整"></a>3.1 分区调整</h3><p>在分区软件里把虚拟盘里的数据分区调整到一起，压缩数据分区到刚好够用，把多出来的空间设置为未分配，使未分配空间全在盘的最后。注意必须保证前面的数据区总容量不超过小盘容量。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181211292.png" alt="image-20210421181211292"></p><h3 id="3-2-虚拟盘容量调整"><a href="#3-2-虚拟盘容量调整" class="headerlink" title="3.2 虚拟盘容量调整"></a>3.2 虚拟盘容量调整</h3><p>首先你要装有 Hyper-V 工具，没有的话到控制面板→添加删除程序→添加删除 Windows 组件里面，把 Hyper-V 相关的都勾上。装好之后要重启。注意，装了 Hyper-V 之后你的 VirtualBox 之类的虚拟机就不能用了，如果要用的话待会儿再卸掉 Hyper-V。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181347514.png" alt="image-20210421181347514"></p><p>装好之后用管理员权限打开 Powershell。在开始菜单输入 Powershell 然后按 Ctrl + Shift + Enter 就是管理员权限。</p><p>执行 ：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Resize-VHD</span> <span class="literal">-Path</span> <span class="string">&quot;E:\sysbk.vhdx&quot;</span> <span class="literal">-ToMinimumSize</span></span><br></pre></td></tr></table></figure><p>注意把 vhdx 的路径换掉。应该很快就完事儿了，然后执行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-VHD</span> <span class="literal">-Path</span> <span class="string">&quot;E:\sysbk.vhdx&quot;</span></span><br></pre></td></tr></table></figure><p>就可以看到虚拟盘容量已经减小到和实际数据量差不多了。这个时候虚拟盘的容量应该是小于目标小盘的容量的，否则后面会失败。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181459770.png" alt="image-20210421181459770"></p><h2 id="4-虚拟盘拷进小硬盘"><a href="#4-虚拟盘拷进小硬盘" class="headerlink" title="4 虚拟盘拷进小硬盘"></a>4 虚拟盘拷进小硬盘</h2><p>很简单的，在磁盘管理里面把缩小之后的 vhdx 挂上，然后在分区软件里对拷到小硬盘上就可以了。</p><p>但是！</p><p>我在这一步遇到了各种疑难杂症。</p><p>首先我的目标盘是一个 nvme 盘，没法通过 USB 挂到其他电脑上对拷，所以只能在本机上从U盘启动 PE 对拷。但这个 PE 是似乎不能挂载 vhd 的，挂载的选项是灰色。</p><p>所幸 DiskGenius 里是可以直接挂虚拟硬盘文件的。然而似乎对 vhdx 兼容性不好，挂载之后始终显示整个盘都是未分配。</p><p>vhd 转 vhdx 是单向的，不能从 vhdx 转为 vhd。我只能新建了一个比缩容后的 vhdx 大一丁点的 vhd，然后在正常的系统内通过磁盘管理挂载了 vhdx，再在  DiskGenius 里从 vhdx 到 vhd 又对拷了一遍。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181543316.png" alt="image-20210421181543316"></p><p>真的需要很长很长的时间，长到等它对拷完成之后我已经快忘了这件事了。<br>然后我就有了一个缩容之后的 vhd 文件。重新启动 PE 之后发现，</p><p>发现这 PE 又能在磁盘管理里挂载 vhd 了！</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181617712.png" alt="image-20210421181617712"></p><p>好气啊。按照常规操作再来一遍，挂载 vhd，对拷。</p><p>拷完之后，由于我们之前把虚拟硬盘的容量设置成小于小硬盘的实际容量了，所以小硬盘尾部会出现未分配空间。根据需要把这部分空间合并到前面的分区中。</p><p>这样就保留了分区结构和分区表等等的同时，从大盘到小盘完成了系统迁移。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬盘 </tag>
            
            <tag> 无损迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>联通宽带更新后登陆指南</title>
      <link href="posts/bjunicom-201/"/>
      <url>posts/bjunicom-201/</url>
      
        <content type="html"><![CDATA[<p>北京联通的校园201宽带一直限制登陆数。以前我们使用用户名添加 @wo201 ，密码添加 /001 字符的方式直接路由器拨号。但七月中旬一次更新之后该方法失效，加密方式改变。</p><p>最近不少人回学校了问我怎么拨号，写个教程比较方便。</p><p><strong>先介绍一下新的 pppoe 加密方式</strong></p><p>参考了 <a href="https://fanzheng.org/archives/17#7">FanZheng’s blog</a> ：</p><p>只是想知道怎么上网的可以跳过这段。</p><blockquote><ul><li>真实账号=账号+<code>@wo201</code>（这个跟原来的没有变化）</li><li>真实密码=动态pin码+密码</li></ul><p>而这个动态pin码，是访问<a href="http://114.247.41.50:9343/aaa/get/pin?user=%E8%B4%A6%E5%8F%B7%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E8%BF%94%E5%9B%9E%E7%9A%84json%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84pin%E5%AD%97%E6%AE%B5%E3%80%82%E5%AE%83%E6%98%AF%E4%B8%AA6%E4%BD%8D%E6%95%B0%E5%AD%97%EF%BC%8C%E5%A4%A7%E7%BA%A610%E7%A7%92%E4%BC%9A%E6%9B%B4%E6%96%B0%E4%B8%80%E6%AC%A1%E3%80%82">http://114.247.41.50:9343/aaa/get/pin?user=账号这个地址返回的json数据中的pin字段。它是个6位数字，大约10秒会更新一次。</a></p><p>也就是说，在这种加密方式下，想要使用PPPoE拨号，就得在10秒内完成获取pin码、填写密码和进行拨号的步骤，对于路由器来说，还是有点麻烦的。最关键的是每次拨号都要改一下密码，因此操作频率就取决于路由器是否断电以及联通设置的一次拨号的最长连接时间了。</p></blockquote><p>那个返回动态验证码的页面，传入的账号即使是随机数字也能返回，说明是服务器端的一个算法动态生成的。</p><p><strong>再介绍一下现在可行的拨号方式</strong></p><ol><li><p>如果想继续使用路由器自动 pppoe 拨号，需要刷了 op 等智能系统的路由器，写脚本获取动态密码。技术上没有难度，过程上比较繁琐。此处略过。</p></li><li><p>如果想使用官方推荐的方式拨号，即拨号后只能本机上网。可以将路由器 DHCP 关掉，LAN 口插猫，当作交换机使用，并在电脑上下载新的官方客户端直接拨号。</p></li><li><p><strong>如果想继续分享使用宽带，但不会方法1</strong>，使用原来的网页入口登录即可。这也是我比较推荐的简易方法。</p></li></ol><p>首先将路由器获取地址方式改为动态 IP，关闭路由器拨号，打开 DHCP，路由器 WAN 口接猫。</p><p>然后使用手机连接路由器，随便打开一个网页，弹出如图界面。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%81%94%E9%80%9A%E5%AE%BD%E5%B8%A6%E6%9B%B4%E6%96%B0%E5%90%8E%E7%99%BB%E9%99%86%E6%8C%87%E5%8D%97/image-20210421180235517.png" alt="image-20210421180235517"></p><p>输入你的宽带用户名密码登录。登录后路由器下其他设备也可上网。断网后需重新登录。</p><p>如果没有手机，使用 Chrome 浏览器，按 F12 打开开发者模式。按图中按钮打开移动端模拟。然后随便打开一个网页，会弹出和上图相同的手机登录页，照前操作即可。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%81%94%E9%80%9A%E5%AE%BD%E5%B8%A6%E6%9B%B4%E6%96%B0%E5%90%8E%E7%99%BB%E9%99%86%E6%8C%87%E5%8D%97/image-20210421180303582.png" alt="image-20210421180303582"></p><p>如果想自动拨号，使用 curl 或者用 python 等语言模拟网页登录发包即可。包的内容很简单，使用 Fiddler 抓包即可查看，也可以用 Chrome 开发者模式直接抓包。会写的都会抓，我就不废话了。</p><p>最后，垄断校园宽带限制终端数的运营商都去吔屎啦。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%81%94%E9%80%9A%E5%AE%BD%E5%B8%A6%E6%9B%B4%E6%96%B0%E5%90%8E%E7%99%BB%E9%99%86%E6%8C%87%E5%8D%97/image-20210421180604118.png" alt="image-20210421180604118"></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 北工大 </tag>
            
            <tag> 联通 </tag>
            
            <tag> 201 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北工大野生助手</title>
      <link href="posts/20170112-bjut-helper/"/>
      <url>posts/20170112-bjut-helper/</url>
      
        <content type="html"><![CDATA[<p>北工大查分野生助手（野生工大助手）。是<a href="http://www.wangyufeng.org/">王雨峰童鞋</a>带头写的一个工大查分小助手。后来申请了星火基金，现在由我和雨峰共同维护。具体说明还在写，先写更新日志。 </p><p>昨晚更新之后很多童鞋说加权和绩点都变了。是这样的，我们更新了绩点的算法，根据教务处的文件，绩点的计算也是要按学分加权的。而加权平均分的部分之前因为学校的数据格式不统一，导致了部分人的新生研讨课也被算进了加权。更新之后能识别出这部分新生研讨课，所以新的加权分就不包含研讨了，导致一部分同学的加权变化。</p><p>昨天访问量达到了 18392，谢谢大家！</p><p>以后也请大家多多支持啦！</p><p>项目地址：<a href="https://github.com/wangyufeng0615/bjuthelper">https://github.com/wangyufeng0615/bjuthelper</a><br>主页：<a href="http://chafen.bjut123.com/">http://chafen.bjut123.com</a><br>内测版：<a href="http://bjut.devchen.cn/">http://bjut.devchen.cn</a>  </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/image-20210421025448423.png" alt="image-20210421025448423"><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/image-20210421025456521.png" alt="image-20210421025456521"></p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><h3 id="2017-1-12"><a href="#2017-1-12" class="headerlink" title="2017.1.12"></a>2017.1.12</h3><ul><li>添加了更新日志。 </li><li>微调了总科目数的提示文字，避免歧义。 </li><li>修正了未通过科目数计算错误。</li><li>修正了中文成绩（等级）导致的科目计算错误。</li><li>增加了可折叠的通过/未通过成绩统计。</li></ul><h3 id="2017-1-11"><a href="#2017-1-11" class="headerlink" title="2017.1.11"></a>2017.1.11</h3><ul><li>修正了由新生研讨课的中文课程成绩和数据格式不统一导致的计算 bug。（可能会导致部分人加权分数变化）</li><li>修正了错误的绩点计算方式，已经更正为平均学分绩点（加权），参考 <a href="http://undergrad.bjut.edu.cn/WebInfo.aspx?Id=752">教务处文件</a>。</li><li>更改了页面编码为 UTF-8。（但教务那边的辣鸡还是 GB2312 我们也没什么办法）</li></ul><h3 id="2017-1-3"><a href="#2017-1-3" class="headerlink" title="2017.1.3"></a>2017.1.3</h3><ul><li>移除了文件式 cookie，加快了响应和服务器负载。</li><li>添加了免验证码。</li></ul><h3 id="2016-12-6"><a href="#2016-12-6" class="headerlink" title="2016.12.6"></a>2016.12.6</h3><ul><li>添加了说明信息和 ICP 备案号</li></ul><h3 id="2016-12-3"><a href="#2016-12-3" class="headerlink" title="2016.12.3"></a>2016.12.3</h3><ul><li>修正了部分验证码错位的问题</li></ul><h3 id="2016-11-28"><a href="#2016-11-28" class="headerlink" title="2016.11.28"></a>2016.11.28</h3><ul><li>微调了代码架构，加强了微信浏览器的兼容性。</li></ul><h3 id="2016-7-23"><a href="#2016-7-23" class="headerlink" title="2016.7.23"></a>2016.7.23</h3><ul><li>增加了代码说明和项目说明，配了图。</li></ul><h3 id="2016-7-16"><a href="#2016-7-16" class="headerlink" title="2016.7.16"></a>2016.7.16</h3><ul><li>首次上传</li></ul><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>来，扫码吧！<br>王雨峰的公众号：七系<br><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/1.png"><br>十七的空指针：<br><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/2.png"></p><p align = right>by Sykie Chen & Alan Wang2017.1.12</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 北工大 </tag>
            
            <tag> 查分 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJUT 抢课器</title>
      <link href="posts/bjut-course-rusher/"/>
      <url>posts/bjut-course-rusher/</url>
      
        <content type="html"><![CDATA[<p>- 为什么别人都能抢到课，我抢不到？<br>- 那别人买彩票还中奖呢。</p><p>更新了一下，现在支持生僻字姓名了。<br>智障 Windows cmd 万年 GBK 编码，我也很为难啊。</p><p>反正我今年不缺课啦</p><hr><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><ol><li>本程序并没有什么卵用，只能捡漏，不要觉得是我把你的课抢走了。 </li><li>本程序随时可能报错卡死退出，可能导致您的电脑起火爆炸，请务必不要在无人看管时使用本程序。 </li><li>本程序导致的一切后果，作者都不承担。 </li></ol><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>修复了姓名中含有 GBK 以外字符时崩溃的问题。<br>重构了所有代码，现在本程序对用户友好了一些。<br>未在高并发期间测试过，不保证服务器不正常时的运行结果。<br>高峰期间如果无法登录，尝试修改重试次数与 base_url ，使用 IP 地址替代域名可以规避 DNS 解析失败风险。 </p><h3 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h3><ol><li>在 userinfo.py 中填入学号密码 </li><li>在 course.py 中填入要选的课全名，和它在搜索结果中的位置序号，用于定位重名课程。 </li></ol><h3 id="风险："><a href="#风险：" class="headerlink" title="风险："></a>风险：</h3><ol><li>概率很低的情况下，如果重名课程的排序发生变化，会选错。 </li><li>存在完全选错课的可能性。请在退课截止前停止程序并检查是否选了不需要的课。 </li></ol><p>适用于正方教务系统<br>暴力抢课，不讲道理。<br>具体修改方式见代码注释。   </p><p><del>本程序对用户不友好，使用前需要先改代码。</del></p><p>吔屎啦正方！ </p><p><a href="https://github.com/toshichi/BJUT-Course-Rusher">https://github.com/toshichi/BJUT-Course-Rusher</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 北工大 </tag>
            
            <tag> 抢课 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置 Shadowsocks 服务时 iptables 中的一处坑</title>
      <link href="posts/ss-iptables/"/>
      <url>posts/ss-iptables/</url>
      
        <content type="html"><![CDATA[<p>前几天把 ss 服务器从 ConoHa 迁移到 Linode 的东京2节点，丢包情况有所改善。</p><p>迁移后为了安全我重新配置了防火墙，只允许需要的端口通过。但在配置 ss 梯子服务时遇到了坑。在放行 ss 端口的情况下，ss 的手机客户端发生无法解析地址的情况，关掉防火墙则服务恢复正常，电脑端也一切正常。</p><p>iptables 配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">-A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -j ACCEPT</span><br><span class="line">-A OUTPUT -p icmp -j ACCEPT</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A OUTPUT -o lo -j ACCEPT</span><br><span class="line"></span><br><span class="line"># DNS</span><br><span class="line">-A OUTPUT -p udp --dport 53 -j ACCEPT</span><br><span class="line">-A INPUT -p udp --sport 53 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># SSH is 23333</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 22,23333 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --sports 22,23333 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># http client</span><br><span class="line">-A INPUT -p tcp -m multiport --sports 80,443 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --dports 80,443 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># http server</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --sports 80,443 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># shadowxxx</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 6666,7777 -j ACCEPT</span><br><span class="line">-A INPUT -p udp -m multiport --dports 6666,7777 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --sports 6666,7777 -j ACCEPT</span><br><span class="line">-A OUTPUT -p udp -m multiport --sports 6666,7777 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># kcptun</span><br><span class="line">-A INPUT -p udp --dport 6677 -j ACCEPT</span><br><span class="line">-A OUTPUT -p udp --sport 6677 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp --dport 6677 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp --sport 6677 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># drop</span><br><span class="line">-P INPUT DROP</span><br><span class="line">-P OUTPUT DROP</span><br><span class="line">-P FORWARD ACCEPT</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><p>我百思不得其解，分析了各种可能性，最后只能开启日志找问题。</p><p>修改 /etc/rsyslog.conf ，添加一行：</p><p><code>kern.*   /var/log/iptables.log</code></p><p>将内核日志重定向到 iptables.log 方便查看。</p><p>在 iptables 文件中最后的 drop 前添加了 -A OUTPUT -j LOG，把所有被 drop 的数据包记录下来。</p><p>然后用 <code>tailf /var/log/iptables.log</code> 滚动输出日志。</p><p>日志输出如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%20Shadowsocks%20%20%E6%9C%8D%E5%8A%A1%E6%97%B6%20iptables%20%E4%B8%AD%E7%9A%84%E4%B8%80%E5%A4%84%E5%9D%91/image-20210421175608972.png" alt="image-20210421175608972"></p><p>可以看到有大量的53端口 DNS 查询被丢弃，但我已经在 iptables 中放行了 dns 查询啊？为什么呢？？？</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%20Shadowsocks%20%20%E6%9C%8D%E5%8A%A1%E6%97%B6%20iptables%20%E4%B8%AD%E7%9A%84%E4%B8%80%E5%A4%84%E5%9D%91/image-20210421175636741.png" alt="image-20210421175636741"></p><p>瞪了屏幕两分钟后发现这些查询都是 tcp 协议的，而我只放行了 udp 的 DNS包。</p><p>普通的 DNS 都是 udp 传输的，而手机端的 ss 似乎默认使用了 tcp 方式的 DNS 查询，导致数据包被丢弃。</p><p>在 iptables 中允许53端口 tcp 包后问题解决。</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> Shadowsocks </tag>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Resilio 私有云的文件同步方案</title>
      <link href="posts/20161217-resilio/"/>
      <url>posts/20161217-resilio/</url>
      
        <content type="html"><![CDATA[<p>国内的云服务该倒的都倒了，剩的也都是一些残废。加上最近买了一个小笔记本随身带着，多设备间工作文件的实时同步变得非常重要。<br>尝试了 Dropbox 、 Google Drive 、 付费坚果云等多种云服务之后，我最终选择了 Resilio （原 BTSync ）来搭私有云。</p><h2 id="1-最初的尝试"><a href="#1-最初的尝试" class="headerlink" title="1. 最初的尝试"></a>1. 最初的尝试</h2><p>Resilio 是基于 P2P 的文件同步服务，它把文件分散存储在参与同步的节点上，在同一子网下甚至可以通过 LAN 高速同步。类似 BT 下载的 DHT 网络保证即使客户机没有公网地址也能打洞。<br>起初我只在我的主电脑（几乎不关机）和随身的小电脑上部署了 Resilio ，但主电脑使用的山寨百兆宽带十分不稳定，小电脑在同样不稳定的网络下（对我说的就是你， BJUT 校园网）几乎无法连接主电脑上的节点，即使侥幸连上，速度也只有幽默的十几K。没办法，只能放弃。</p><h2 id="2-为什么放弃坚果云"><a href="#2-为什么放弃坚果云" class="headerlink" title="2. 为什么放弃坚果云"></a>2. 为什么放弃坚果云</h2><p>然后我开始尝试各种商用云服务。国外的各类云服务虽然成熟，但速度全都非常感人。最后在各方安利之下换了坚果云。但坚果云的收费方案非常有意思，按流量收费。免费用户每月最多上传 1G，下载 3G。我数了数我需要保持同步的文件，大概有 8G 左右，精简过后也有 2.5G ，也就是说初始的同步要两个月之后才能完成。<br>那好吧。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-05-16.jpg"></p><p>付了费之后，空间方案是 30G 初始，每月 +1G， 不限流量。 我开开心心地把 2.5G 传上去了。传完之后我看到了这个：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-10-33.jpg"></p><p><a href="http://help.jianguoyun.com/?p=1582">http://help.jianguoyun.com/?p=1582</a></p><p>还有这个：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-11-43.jpg"></p><p><a href="http://help.jianguoyun.com/?p=1366">http://help.jianguoyun.com/?p=1366</a></p><p>我擦，我真是九脸蒙蔽。下个月我断供就不能用了？想用至少续费三个月？而且假如我过了几个月又有大量数据要传，还得先补上上次付费和这次付费之间断供的时间？</p><p>一个月 30，还是有点贵的，数据还被掐在人家手里，不值得。<br>你可以说我付不起钱穷之类的，我只是觉得不值得。有30块我干嘛不给我的 VPS 升一下级？</p><h2 id="3-重新部署-Resilio"><a href="#3-重新部署-Resilio" class="headerlink" title="3. 重新部署 Resilio"></a>3. 重新部署 Resilio</h2><p>坚果云还剩27天，但我已经不想用了。我又重新研究了一下 Resilio ，觉得我可以在我的 VPS 上部署一个 Resilio 作为同步节点。在外网时，小电脑可以通过稳定的 VPS 保持同步。和大电脑在同一内网下时，又可以通过 LAN 快速完成。我的 VPS 是 ConoHa 东京节点，国内访问除了电信有时候丢包厉害点，速度还 OK。<br>Resilio 支持加密分享，也就是说部署在 VPS 上节点的文件可以是加密过的，在 VPS 端无法读取。<br>而且如果有条件，可以部署多个 VPS 节点，比如在阿里云或者腾讯云上部署一个，加快国内访问速度。节点之间可以保持同步。<br>我的服务器系统是 Cent OS，安装 Resilio 只需要导入 yum 源，再导入公钥即可。参考<a href="https://help.getsync.com/hc/en-us/articles/206178924">官方文档</a>。<br>新建<code>/etc/yum.repos.d/resilio-sync.repo</code><br>内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[resilio-sync]</span><br><span class="line">name=Resilio Sync <span class="variable">$basearch</span></span><br><span class="line">baseurl=http://linux-packages.resilio.com/resilio-sync/rpm/<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><p>然后添加公钥：<br><code>rpm --import https://linux-packages.resilio.com/resilio-sync/key.asc</code><br>再用 yum 安装：<br><code>yum install resilio-sync</code></p><p>安好后准备一下同步目录和配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/sync</span><br><span class="line">chmod -R 755 /home/sync</span><br><span class="line">cd /home/sync</span><br><span class="line">rslsync --dump-sample-config &gt; rslsync.conf</span><br></pre></td></tr></table></figure><p>编辑配置文件，编辑一下你的机器名、端口号、用户名密码之类的。文件里的说明很详细。我就不多说了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-51-10.jpg"></p><p>然后载入配置文件<br><code>rslsync --config /home/sync/rslsync.conf</code><br>并把这条命令加到 rc.local 开机启动，保证每次都能加载这个配置。<br>配置一下防火墙之后，就可以通过 ip:9999 来访问了。<br>登进去之后就跟本地客户端一样啦。在本机的 Resilio 添加同步文件夹，类型选择加密。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-57-41.jpg"></p><p>会出现三种密钥。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-15-00-01.jpg"></p><p>在 VPS 的 resilio 中添加第三个加密密钥，在小电脑的 resilio 中添加读写密钥。<br>这样，大小电脑上的修改都会同步到对方以及 VPS，但 VPS 端文件的变化不会同步到本地机器，保证数据安全。两台电脑上文件同步时，VPS 可以作为加速节点。而且 VPS 端的文件全部是加密过的，如图。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-15-02-16.jpg"></p><p>这样即使放到国内的主机上也可以放心数据安全。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-15-03-34.jpg"></p><p>在节点列表中可以看到另一台电脑和服务器。<br>如果购买 Pro 授权，还可以选择性同步。未同步的文件会显示为 0KB 占位符，当双击调用或者手动同步时才主动下载。Resilio 的同步是差分增量的，文件会被分割，只同步变化的区块。<br>购买了 Pro 授权之后可以把两台电脑关联为同一账户，添加的文件夹会自动同步到两台机器上，不用在小电脑上手动添加读写密钥。但注意不要在云端使用同一账户，否则不会加密。<br>这个 Pro 授权国内99块人民币，终身授权。比坚果云不知高到哪里去了。<br>氪！</p><p>参考了：<br><a href="http://maokwen.tk/2016/10/14/build-a-private-cloud-on-vps.html">http://maokwen.tk/2016/10/14/build-a-private-cloud-on-vps.html</a><br><a href="https://www.freehao123.com/pcloud/">https://www.freehao123.com/pcloud/</a><br><a href="http://www.dongcoder.com/detail-176844.html">http://www.dongcoder.com/detail-176844.html</a></p><p align = right>by Sykie Chen2016.12.17</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Resilio </tag>
            
            <tag> 私有云 </tag>
            
            <tag> 同步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北工大校园网主机保持公网在线</title>
      <link href="posts/bjut-online/"/>
      <url>posts/bjut-online/</url>
      
        <content type="html"><![CDATA[<p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E6%A0%A1%E5%9B%AD%E7%BD%91%E4%B8%BB%E6%9C%BA%E4%BF%9D%E6%8C%81%E5%85%AC%E7%BD%91%E5%9C%A8%E7%BA%BF/image-20210421174248252.png" alt="image-20210421174248252"></p><p>由于各种各样的原因，总有的时候希望自己的主机在校园网里长期在线保持公网连接，以提供一些服务。但一方面校园网的 web 认证对 *nix 命令行很不友好。虽然在之前的文章里我提到过使用 curl 的方式从命令行登录。但如果闲置半小时左右没有数据包发出，连接会被自动踢掉。</p><p>另一方面还有可能发生流量用光了扣钱，钱扣完了被踢掉等情况，导致我们的内网主机不能稳定在线。也无法通过 ngrok 等内网穿透技术实现公网访问。</p><p>因此我搞了一个小程序，它可以每分钟检测一次登陆情况，如果未登陆外网则会从预定的账号列表中挑选可用账号自动登录。如果已经登录则会检测已使用流量是否超限，并自动更换下一个可用的账号。</p><p>如果不幸列表中的账号流量均超限了，还可以设置一个保底账号，无视流量限制而保持在线，虽然代价是可能扣很多钱。</p><p>每个月月初流量重置时，会自动重置账号列表。</p><p>还附带了 linux 和 windows 下的自启动脚本，直接放进 rc.local 或者 Windows StartUp 里就可以了。</p><p>内网挂服务的同学可以放心地挂机了。</p><p>Github 主页： <a href="https://github.com/SykieChen/BJUT_Always_Online">https://github.com/SykieChen/BJUT_Always_Online</a></p><p>很惭愧，就做了一点微小的工作，谢谢大家。</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 北工大 </tag>
            
            <tag> Python </tag>
            
            <tag> 网关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub readme 中许可证图标的添加</title>
      <link href="posts/github-icons/"/>
      <url>posts/github-icons/</url>
      
        <content type="html"><![CDATA[<p>逛 GitHub 的时候经常能看到别人的 readme.md 里有各种许可协议的图标：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/GitHub%20readme%20%E4%B8%AD%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%9B%BE%E6%A0%87%E7%9A%84%E6%B7%BB%E5%8A%A0/image-20210421033206571.png" alt="image-20210421033206571"></p><p>许可协议是什么我就不说了，这里讲一下这种统一格式的图标怎么获取。</p><p>查看相应的代码发现大部分图标都来自</p><p><a href="http://shields.io/">http://shields.io/</a></p><p>这个网站。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/GitHub%20readme%20%E4%B8%AD%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%9B%BE%E6%A0%87%E7%9A%84%E6%B7%BB%E5%8A%A0/image-20210421033240948.png" alt="image-20210421033240948"></p><p>棒棒哒，不过这个主页上的索引是不全的，许可证只能看到 MIT 一种。</p><p>所幸 GitHub 上有一个统计了该站大部分许可证图标链接地址的项目：</p><p><a href="https://gist.github.com/lukas-h/2a5d00690736b4c3a7ba">https://gist.github.com/lukas-h/2a5d00690736b4c3a7ba</a></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/GitHub%20readme%20%E4%B8%AD%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%9B%BE%E6%A0%87%E7%9A%84%E6%B7%BB%E5%8A%A0/image-20210421033308280.png" alt="image-20210421033308280"></p><p>好了，要啥有啥，Markdown 格式都是现成的。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 图标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北工大网关的命令行登录</title>
      <link href="posts/bjut-login/"/>
      <url>posts/bjut-login/</url>
      
        <content type="html"><![CDATA[<p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E7%BD%91%E5%85%B3%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%99%BB%E5%BD%95/image-20210421032909822.png" alt="image-20210421032909822"></p><p>今天在内网装了个 Linux 机器，CentOS 6.8，没装图形界面，也没有命令行浏览器。因为校园网是需要在 web 页面登录网关后才能访问外网，但连不上外网就不能用 yum 装浏览器。</p><p>所以如果不用麻烦的本地安装，这就是一个先有鸡先有蛋的死循环。</p><p>然而。</p><p>我们使用 curl 直接模拟登录的 post 请求就好咯。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">&quot;DDDDD=UserName&amp;upass=Password&amp;v46s=1&amp;0MKKey=&quot;</span> <span class="string">&quot;http://lgn.bjut.edu.cn/&quot;</span></span><br></pre></td></tr></table></figure><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E7%BD%91%E5%85%B3%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%99%BB%E5%BD%95/image-20210421032831766.png" alt="image-20210421032831766"></p><p>返回的页面标题是“登陆成功窗”就 OK 啦。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 北工大 </tag>
            
            <tag> 网关 </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把微博找狗游戏刷到溢出</title>
      <link href="posts/20160416-weibo-doge/"/>
      <url>posts/20160416-weibo-doge/</url>
      
        <content type="html"><![CDATA[<p>今天在微博上看到一个找狗的<a href="http://m.weibo.cn/client/game?sinainternalbrowser=topnav">小游戏</a>： </p><p>简单地说就是在一堆表情里找出 doge 的表情，限时一分钟。<br>作为一个<del>程序猿</del>手贱人，我第一反应就是要去刷掉这个榜单。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/1.png"></p><p>首先想到用按键精灵的自动搜图去自动点击，于是迅速写了个简单的脚本： </p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FindPic <span class="number">0</span>,<span class="number">0</span>,<span class="number">1600</span>,<span class="number">1000</span>,<span class="string">&quot;Attachment:\doge.bmp&quot;</span>,<span class="number">0.5</span>,intX,intY</span><br><span class="line"><span class="keyword">If</span> intX &gt; <span class="number">0</span> <span class="keyword">And</span> intY &gt; <span class="number">0</span> <span class="keyword">Then</span> </span><br><span class="line">    MoveTo intX + <span class="number">15</span>, intY + <span class="number">15</span></span><br><span class="line">    LeftClick <span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/2.png"> </p><p>执行之后刷出了161分： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/3.png"> </p><p>由于按键精灵的解析速度有限，161分基本是一分钟内能刷出的上限了，难以搞一个更大的新闻出来。于是就想到了直接修改代码。<br>这里有两条路可走，一是修改游戏代码本身，以类似于游戏修改器的思路改成绩，或者干脆延长总时间。再一个就是伪造游戏结束时向服务器发的比分数据，直接改成绩。<br>根据经验判断后者应该更方便，于是开 Fiddler 抓包： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/4.png"> </p><p>发现在时间剩余十秒时会向服务器请求当前前20名的用户列表，是一个 json，地址是 <a href="http://m.weibo.cn/client/game/getTopUser">http://m.weibo.cn/client/game/getTopUser</a> ： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/5.png"> </p><p>图里的前两名都是我刷出来的，不要在意。<br>注意当一局游戏结束的时候，如果不点击分享到微博，分数是不会上传到服务器的，榜单里也不会更新你。单击分享后会自动生成一条微博，并随机艾特三个人。微博为了推广真是够恶心的。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/6.png"> </p><p>抓分享的包，发现请求中有两个值，score 和 st： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/7.png"> </p><p>score 无疑是本场分数了，st 根据我的多次抓包判断，是标记当前用户 id 的值。所以我们修改的重点在 score 上。<br>这个 score 加密过，看长度不是 md5，尝试了常见的加密方式均不能解密。重复试验几次也没有发现规律： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/8.png"> </p><p>陷入僵局，决定先分析页面源码。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/10.png"> </p><p>在页面中的 JavaScript 发现了大新闻，加密函数是写在里面的： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/9.png"> </p><p>这就好办了，直接把整个 a 这个类抠出来，新建个 js 放进去在本地执行就好。可以算出想要的任意值。<br>先算个 65535 练练手。65535 的密文是 d0510f276a65373d。在 Fiddler 里直接修改刚才那个请求，发送后返回成功： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/11.png"> </p><p>此时自动发了一条新的微博，说我得了65535分。<br>那试一下自己的手机号吧，貌似不会溢出。也成功了，图在上面就有。<br>唔，那再搞个大新闻，试试 10^101 ? </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/12.png"> </p><p>好好好，榜单首位妥妥的是我的了，我已经吊到溢出边框了： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/13.png"> </p><p>这个时候注意到一个问题，那条微博当时就刷出来了，但榜单隔了差不多两三分钟才刷出来我那个超大的值，怀疑服务器那边卡住了。那就作个死，看看能不能搞死服务器？我们知道 JS 里有个 Infinity 的值表示无穷大，这里把无穷大带进去算，得到 b30f73e94186ee62。发送请求提示成功，但刷不出微博，刷新榜单也出不来，看来是被过滤掉了。<br>好了本次作死成功完成~<br>特别感谢<a href="http://jobslong.com/">小文老板</a>用 node.js 环境跑出了加密部分的 js~ </p><p>榜单地址： <a href="http://m.weibo.cn/client/game/getTopUser">http://m.weibo.cn/client/game/getTopUser</a><br>游戏地址： <a href="http://m.weibo.cn/client/game?sinainternalbrowser=topnav">http://m.weibo.cn/client/game?sinainternalbrowser=topnav</a> </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/14.png"> </p><p>摸摸大 </p><hr><p align = right>by Sykie Chen2016.4.16</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 微博 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EasyX 框架实现透明图片显示的 trick</title>
      <link href="posts/20160217-easyx-trans-trick/"/>
      <url>posts/20160217-easyx-trans-trick/</url>
      
        <content type="html"><![CDATA[<p>很多学校教授 C++ 图形编程时，为了规避 Windows 下 VC++ 较为复杂的绘图 API，都会（强制）要求学生使用 <a href="http://easyx.cn/">EasyX</a> 这一绘图框架。该框架十分简陋地实现了初学者所需的图形功能。同时，此框架也存在大量不足，最为不便的就是不支持 png 格式图片，不支持透明背景绘图。</p><p>鉴于此框架的 putimage 函数支持三元光栅操作码，我们可以利用掩码位图来变相实现透明背景绘图。<br>参考了 <a href="http://code.qtuba.com/article-15636.html">http://code.qtuba.com/article-15636.html</a> </p><h2 id="1-创建一个掩码位图"><a href="#1-创建一个掩码位图" class="headerlink" title="1. 创建一个掩码位图"></a>1. 创建一个掩码位图</h2><p>掩码位图是一个单色位图，它的黑色部分就是位图显示时要保留的部分，白色部分就是要透明的部分。这里使用马里奥举例：<br>原图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/1.png"> </p><p>掩码图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/2.png"> </p><h2 id="2-把掩码位图用SRCINVERT（XOR）方式叠加到原图"><a href="#2-把掩码位图用SRCINVERT（XOR）方式叠加到原图" class="headerlink" title="2.把掩码位图用SRCINVERT（XOR）方式叠加到原图"></a>2.把掩码位图用SRCINVERT（XOR）方式叠加到原图</h2><p>白色XOR白色=黑色（白色的RGB都是255，1^1=0），黑色XOR任何颜色=原颜色（0^0=0，0^1=1）。操作完成后原图的透明区应被黑色填充。<br>也可以直接用黑色填充原图。 </p><h2 id="3-把掩码位图用SRCAND（AND）方式叠加背景中"><a href="#3-把掩码位图用SRCAND（AND）方式叠加背景中" class="headerlink" title="3.把掩码位图用SRCAND（AND）方式叠加背景中"></a>3.把掩码位图用SRCAND（AND）方式叠加背景中</h2><p>白色and任何颜色=原颜色(1&amp;1=1,1&amp;0=0)，黑色and任何颜色=黑色（0&amp;0=0，0&amp;1=0）。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/3.png"> </p><h2 id="4-把叠加过的原图用SRCPAINT-or-方式叠加到背景中"><a href="#4-把叠加过的原图用SRCPAINT-or-方式叠加到背景中" class="headerlink" title="4.把叠加过的原图用SRCPAINT(or)方式叠加到背景中"></a>4.把叠加过的原图用SRCPAINT(or)方式叠加到背景中</h2><p>黑色or任何颜色=原颜色(0|1=1,0|0=0)。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/4.png"> </p><hr><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">initgraph</span>(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line">    <span class="comment">// Load background</span></span><br><span class="line">    <span class="built_in">loadimage</span>(<span class="literal">NULL</span>, _T(<span class="string">&quot;img\\background.jpg&quot;</span>));</span><br><span class="line">    <span class="comment">// Load mario</span></span><br><span class="line">    IMAGE mariox, mario;</span><br><span class="line">    <span class="built_in">loadimage</span>(&amp;mariox, _T(<span class="string">&quot;img\\mariox.bmp&quot;</span>));</span><br><span class="line">    <span class="built_in">loadimage</span>(&amp;mario, _T(<span class="string">&quot;img\\mario.bmp&quot;</span>));</span><br><span class="line">    <span class="comment">// Trick to display transparent image</span></span><br><span class="line">    <span class="built_in">SetWorkingImage</span>(&amp;mario);</span><br><span class="line">    <span class="built_in">putimage</span>(<span class="number">0</span>, <span class="number">0</span>, &amp;mariox, SRCINVERT);</span><br><span class="line">    <span class="built_in">SetWorkingImage</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">putimage</span>(<span class="number">400</span>, <span class="number">465</span>, &amp;mariox, SRCAND);</span><br><span class="line">    <span class="built_in">putimage</span>(<span class="number">400</span>, <span class="number">465</span>, &amp;mario, SRCPAINT);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="built_in">closegraph</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p align = right>by Sykie Chen2016.2.17</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> EasyX </tag>
            
            <tag> trick </tag>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多说 JS CSS 的本地化与站长回复和 UA 信息的添加</title>
      <link href="posts/20160212-duoshuo-ua/"/>
      <url>posts/20160212-duoshuo-ua/</url>
      
        <content type="html"><![CDATA[<p>多说评论系统被很多中文网站使用。网上有很多添加站长回复标记和浏览器操作系统信息的方法。但大部分均已随着多说 JS 的更新而不再有效或存在兼容性问题。我参考了这些教程并重写了相关代码以改进显示效果。 </p><p>先上图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160212-duoshuo-ua/1.png"> </p><p>可以解析 IE/Egde, Chrome, Safari, Firefox, Opera 等浏览器以及常见的几种国内壳浏览器。微博微信内置浏览器也可解析。<br>系统方面除了做了 iPhone/iPad 区分外，还加入了对1%的WP支持=。=<br>已有的教程多修改为带圆角矩形背景的文字， <del>难看的一笔</del> 不是十分的优雅。因此我改为了无背景，彩色加粗文字。<br>以及在无法识别的时候会显示 <del>奇怪♂的浏览器</del> 和 <del>奇怪♂的操作系统</del> 字样 <del>增加情趣</del> 提示用户。 </p><h2 id="1-多说-JS-和-CSS-的本地化"><a href="#1-多说-JS-和-CSS-的本地化" class="headerlink" title="1. 多说 JS 和 CSS 的本地化"></a>1. 多说 JS 和 CSS 的本地化</h2><p>多说引用的 JS 脚本地址为 <code>http://static.duoshuo.com/embed.js</code>，搞下来，改个名字或者不改也行。我这里改为 <code>ds_embed.js</code> 并放置到主题目录 <code>/source/js/</code> 中。 </p><p>多说的 CSS 分为两部分，其一为通用部分，即多说后台设置的“主题”所包含的。这部分无需本地化。其二为多说后台“自定义CSS”的部分。这部分严格来说也无需本地化，但自己写的代码还是存成自己的文件比较稳妥，也便于本地维护，放在后台谁知道它哪天抽了就没了。 </p><p>将多说后台“自定义CSS”中已有的内容剪切，写入到主题目录 <code>/source/css/duoshuo.css</code> 中。 </p><p>然后修改<code>多说公共JS代码</code>，即我在 <a href="http://www.devchen.com/blog/coding/HTML/hexo-theme/">Hexo Landscape 主题修改优化</a> 一文中插入到 <code>layout\_partial\after-footer.ejs</code> 文件中的部分代码。<br>原来的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">&#x27;https:&#x27;</span> ? <span class="string">&#x27;https:&#x27;</span> : <span class="string">&#x27;http:&#x27;</span>) + <span class="string">&#x27;//static.duoshuo.com/embed.js&#x27;</span>;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ds.src = <span class="string">&#x27;/js/ds_embed.js&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后在 <code>layout\_partial\head.ejs</code> 中合适的位置插入 css 引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/css/duoshuo.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>更新网站，若评论框正常显示则本地化成功。 </p><h2 id="2-添加-CSS-样式"><a href="#2-添加-CSS-样式" class="headerlink" title="2. 添加 CSS 样式"></a>2. 添加 CSS 样式</h2><p>在 <code>duoshuo.css</code> 中插入以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* duoshuo UA marks */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.ua</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_other</span>, <span class="selector-class">.os_other</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#000</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_ie</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#428bca</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_firefox</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f0ad4e</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_maxthon</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#7373B9</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_ucweb</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF740F</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_sogou</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#78ACE9</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_mi</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF4A00</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_chrome</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#EE6252</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_qq</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3D88A8</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_apple</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#E95620</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_opera</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9534f</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.os_vista</span>,<span class="selector-class">.os_2000</span>,<span class="selector-class">.os_windows</span>,<span class="selector-class">.os_xp</span>,<span class="selector-class">.os_7</span>,<span class="selector-class">.os_8</span>,<span class="selector-class">.os_8_1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#39b3d7</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.os_android</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#98C13D</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_ubuntu</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#DD4814</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_linux</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3A3A3A</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_mac</span>, <span class="selector-class">.os_ios</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_unix</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#006600</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_nokia</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#014485</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* admin reply mark */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#ds-reset</span> <span class="selector-tag">div</span> <span class="selector-tag">a</span><span class="selector-class">.sskadmin</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3B74AC</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#3B74AC</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* user name color */</span></span><br><span class="line"><span class="selector-id">#ds-reset</span> <span class="selector-tag">span</span><span class="selector-class">.ds-user-name</span>, <span class="selector-id">#ds-reset</span> <span class="selector-tag">a</span><span class="selector-class">.ds-highlight</span>&#123;</span><br><span class="line">    <span class="comment">/*background-color: #777 !important;</span></span><br><span class="line"><span class="comment">border-color: #777 !important;</span></span><br><span class="line"><span class="comment">border-radius: 4px;</span></span><br><span class="line"><span class="comment">padding: 0 5px!important;*/</span></span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#444</span> <span class="meta">!important</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码用途在注释中已有说明，不再赘述。最下面两块 <code>#ds-reset</code> 开头的样式会覆盖默认主题中的同名样式，以修改在主题中定义的用户名颜色，而不必本地化主题 CSS。 </p><h2 id="3-修改-ds-embed-js"><a href="#3-修改-ds-embed-js" class="headerlink" title="3. 修改 ds_embed.js"></a>3. 修改 ds_embed.js</h2><p>这一步非常重要，修改不慎就会导致整个评论框无法显示。而且这部分内容也与当前的多说 js 版本相关联。本文中提到的代码基于 2016-02-12 版本的 embed.js，如果今后多说修改了相关代码可能失效，到时我应该会更新。 </p><h3 id="3-1-添加新函数"><a href="#3-1-添加新函数" class="headerlink" title="3.1 添加新函数"></a>3.1 添加新函数</h3><p>首先在文件开头处添加三个新的函数： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// admin reply</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sskadmin</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ssk = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(e.user_id==<span class="number">11838425</span>)&#123;</span><br><span class="line">        ssk = <span class="string">&#x27; sskadmin&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ssk;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// UA parser</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ua</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">    <span class="keyword">var</span> outputer = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (r = e.match(<span class="regexp">/MSIE\s([^\s|;]+)/gi</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ie&quot;&gt;IE &#x27;</span> + r[<span class="number">0</span>].replace(<span class="string">&#x27;MSIE&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Edge\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ie&quot;&gt;Edge &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/FireFox\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_firefox&quot;&gt;FireFox &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Maxthon([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_maxthon&quot;&gt;Maxthon&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/UBrowser([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ucweb&quot;&gt;UC &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MetaSr/ig</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_sogou&quot;&gt;Sougou&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MicroMessenger\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;WeChat &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/QQBrowser\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;QQ &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/QQ\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;QQ &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MiuiBrowser\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_mi&quot;&gt;MIUI &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Chrome([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_chrome&quot;&gt;Chrome &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/safari\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_apple&quot;&gt;Safari &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Opera[\s|\/]([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_opera&quot;&gt;Opera &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Trident\/7.0/gi</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ie&quot;&gt;IE 11&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/weibo__([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;__&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;Weibo &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_other&quot;&gt;奇怪♂的浏览器&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> outputer+<span class="string">&quot;&lt;/span&gt; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">os</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">    <span class="keyword">var</span> os = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (e.match(<span class="regexp">/Windows/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.match(<span class="regexp">/NT 5.1/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_xp&quot;&gt;Windows XP&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.1/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_7&quot;&gt;Windows 7&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.2/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_8&quot;&gt;Windows 8&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.3/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_8_1&quot;&gt;Windows 8.1&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 10.0/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_8_1&quot;&gt;Windows 10&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.0/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_vista&quot;&gt;Windows Vista&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 5/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_2000&quot;&gt;Windows 2000&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Phone OS ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">            <span class="comment">//WP7-7.5</span></span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_windows&quot;&gt;Windows &#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Phone ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">            <span class="comment">//WP8+</span></span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_windows&quot;&gt;Windows &#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_windows&quot;&gt;Windows&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/android ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_android&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/iPhone OS ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_ios&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].replace(<span class="string">&#x27;iPhone OS&#x27;</span>, <span class="string">&#x27;iPhone&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/CPU OS ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_ios&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].replace(<span class="string">&#x27;CPU OS&#x27;</span>, <span class="string">&#x27;iPad&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/ubuntu/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_ubuntu&quot;&gt;Ubuntu&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/linux/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_linux&quot;&gt;Linux&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Mac OS X ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_mac&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">0</span>].replace(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;.&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/unix/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_unix&quot;&gt;Unix&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/symbian/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_nokia&quot;&gt;Symbian&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/meego/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_nokia&quot;&gt;MeeGo&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_other&quot;&gt;奇怪♂的操作系统&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> os+<span class="string">&quot;&lt;/span&gt;&quot;</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中第一个函数中的 <code>11838425</code> 是我的多说 user ID，在多说后台查看。<br>浏览器解析的部分我没有加入太多的国产壳浏览器解析，我觉得访问这个网站的人应该不会 low 到用大数字之类的奇怪浏览器吧。 </p><h3 id="3-2-修改输出格式"><a href="#3-2-修改输出格式" class="headerlink" title="3.2 修改输出格式"></a>3.2 修改输出格式</h3><p>查找<br><code>r.url?(t+=&#39;&lt;a class=&quot;ds-user-name ds-highlight&quot;</code> …<br>这部分代码<br>在 class 中插入一段，变成： </p><p><code>r.url?(t+=&#39;&lt;a class=&quot;ds-user-name&#39;+sskadmin(s.author)+&#39; ds-highlight&quot; data-qqt-account=&quot;&#39;+(r.</code> … </p><p>这步是添加了站长回复的标记<br>后边不远处有一段 </p><p><code>t+=&#39; data-qqt-account=&quot;&#39;+(r.qqt_account||&quot;&quot;)+&#39;&quot;&gt;&#39;+u(r.name)+&quot;&lt;/span&gt;&quot;),</code> </p><p>在这后面插入以下代码： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UA parse</span></span><br><span class="line">t+=<span class="string">&#x27;&lt;span class=&quot;ua&quot;&gt;&#x27;</span> + ua(s.agent) +<span class="string">&#x27;&lt;/span&gt;&lt;span class=&quot;ua&quot;&gt;&#x27;</span>+ os(s.agent) + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>,</span><br></pre></td></tr></table></figure><p>这一步是添加了 UA 信息显示 </p><p>更新网站，查看评论框效果，如果评论框不显示则说明 JS 写得有问题，可能的原因有： </p><ol><li>多说 JS 版本更新了，部分对象名改变； </li><li>你复制错了。(*/ω＼*) </li></ol><p>修改后的完整代码在 GitHub: <a href="https://github.com/SykieChen/hexo-theme-hic17/blob/81343b17064034d09d1c51d6e44829dcbb57a5eb/source/js/ds_embed.js">https://github.com/SykieChen/hexo-theme-hic17/blob/81343b17064034d09d1c51d6e44829dcbb57a5eb/source/js/ds_embed.js</a> </p><p>本文的所有修改均已合并到 HiC17 Hexo主题中。地址： <a href="https://github.com/SykieChen/hexo-theme-hic17">https://github.com/SykieChen/hexo-theme-hic17</a> </p><hr><p>参考了：<br><a href="http://myhloli.com/duoshuo-ua-and-admin-tab.html">http://myhloli.com/duoshuo-ua-and-admin-tab.html</a><br><a href="http://ssk.91txh.com/209">http://ssk.91txh.com/209</a><br><a href="https://segmentfault.com/a/1190000002707162">https://segmentfault.com/a/1190000002707162</a> </p><hr><p align = right>by Sykie Chen2016.2.12</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> 前端 </tag>
            
            <tag> 多说 </tag>
            
            <tag> JS </tag>
            
            <tag> UA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Favicon 站点图标的各平台适配与移动端优化</title>
      <link href="posts/20160126-favicon/"/>
      <url>posts/20160126-favicon/</url>
      
        <content type="html"><![CDATA[<p>网站的 favicon 图标在各平台上的显示效果很难保证。而这个图标又是网站识别的重要组成部分。这里详细介绍一下在 Android, iOS 以及 Windows 三大平台上网站图标效果的优化。 </p><h2 id="1-favicon-图标的格式"><a href="#1-favicon-图标的格式" class="headerlink" title="1. favicon 图标的格式"></a>1. favicon 图标的格式</h2><p>早期网站多使用 ico 格式，该格式允许一个文件里同时包含多个分辨率版本的图标。缺点是显示时必须拉取整个文件，若嵌入的图标较大则会导致不必要的带宽开销。 </p><p>而如今更流行的是嵌入多个 png 格式图标并作出分别说明，根据需要拉取合适的图标即可。这样的缺点是需要写入很多行的 meta 标签。 </p><h2 id="2-favicon-图标的大小"><a href="#2-favicon-图标的大小" class="headerlink" title="2. favicon 图标的大小"></a>2. favicon 图标的大小</h2><p>这就是一个大坑了。<br>桌面端浏览器中，图标为 16×16；添加到 Windows 任务栏的时候，需要 32×32 以及 48×48 大小。<br>而 Windows 8 以上的磁贴界面中，我们还需要 70×70, 144×144, 150×150, 310×150, 310×310 大小的图标，以及指定的背景颜色。<br>而在移动端就更加令人呵呵呵了。早期非 Retina 屏幕的 iOS 设备中只需要 57×57，而 iPad 和 Retina 屏幕出现后，要想完成强迫症的完美适配，你需要8种尺寸的图标： </p><table><thead><tr><th>Device</th><th>Screen</th><th>iOS ver</th><th>Size</th></tr></thead><tbody><tr><td>iPhone</td><td>Classic</td><td>6-</td><td>57×57</td></tr><tr><td></td><td></td><td>7+</td><td>60×60</td></tr><tr><td></td><td>Retina</td><td>6-</td><td>114×114</td></tr><tr><td></td><td></td><td>7+</td><td>120*120</td></tr><tr><td>iPad</td><td>Classic</td><td>6-</td><td>72×72</td></tr><tr><td></td><td></td><td>7+</td><td>76×76</td></tr><tr><td></td><td>Retina</td><td>6-</td><td>144×144</td></tr><tr><td></td><td></td><td>7+</td><td>152×152</td></tr></tbody></table><p>诶嘿嘿，是不是很酸爽啊胖友？这才哪到哪啊。 </p><p>还有 Android / Chrome 呢=。= </p><p>根据屏幕分辨率不同，要想完美适配 Android 系统的添加到桌面功能，你还需要 36×36, 48×48, 72×72, 96×96, 144×144, 192×192 的图标。以及在移动版 Chrome 中还有一个新加入的标签来指定多任务视图的标题颜色。 </p><p>你可能发现有很多尺寸在不同平台上有重复的嘛，然后开始怀疑我在吓唬人。好吧，虽然尺寸是一样的，然而如果你在 Android 平台上看到一个 iOS 风格的圆角矩形图标下面写着 HKEY_C17，你想不想分分钟砍死我啊诶嘿嘿？ </p><p>所以我们需要为不同的平台准备不同的基础图标。<br>啊还有 Safari 的单色图标我还没说呢。 </p><p>做一个前端是不是棒棒哒？诶嘿嘿嘿嘿爱我你怕了么（逃 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/1.png"> </p><h2 id="3-人民的大救星：RealFaviconGenerator"><a href="#3-人民的大救星：RealFaviconGenerator" class="headerlink" title="3. 人民的大救星：RealFaviconGenerator"></a>3. 人民的大救星：<a href="http://realfavicongenerator.net/">RealFaviconGenerator</a></h2><p>前端的朋友们还是有救的，这个萌萌哒平台可以生成我们需要的所有东西。<br>首先打开 <a href="http://realfavicongenerator.net/">http://realfavicongenerator.net/</a> 会让你上传高清基础图标，最好是270像素以上。<br>上传并生成后，可以单独修改各平台的显示参数或单独上传图标。这里推荐做一个透明背景带阴影的 Android 版、一个自带白色背景和阴影的 iOS 版，和一个无阴影无背景还把文字镂空了的 Safari 版。<br><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/2.png"> </p><p>iOS 效果如图 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/3.png"> </p><p>Android 效果如图 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/4.png"> </p><p>单独设置镂空文字的 Safari 版本后如图，避免色块里的文字无法显示。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/5.png"> </p><p>镂空并单色化的 Windows 磁贴效果<br>然后在最下面填入你的图标需要放置的相对路径，就可以生成图标包和对应的 HTML 代码辣！ </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/6.png"> </p><p>单击下载图标包，来让我们看看都放了啥在里面： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/7.png"> </p><p>29个文件！天了噜！少掉了多少头发啊！<br>然后复制 HTML 代码插到你的 head 里面就行辣！<br>我的代码如下： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;57x57&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-57x57.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;60x60&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-60x60.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;72x72&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-72x72.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;76x76&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-76x76.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;114x114&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-114x114.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;120x120&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-120x120.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;144x144&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-144x144.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;152x152&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-152x152.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;180x180&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-180x180.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon-32x32.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;32x32&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/android-chrome-192x192.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;192x192&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon-96x96.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;96x96&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon-16x16.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;16x16&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;manifest&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/manifest.json&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;mask-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/safari-pinned-tab.svg&quot;</span> <span class="attr">color</span>=<span class="string">&quot;#5bbad5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon.ico&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-TileColor&quot;</span> <span class="attr">content</span>=<span class="string">&quot;#2d89ef&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-TileImage&quot;</span> <span class="attr">content</span>=<span class="string">&quot;/css/images/mstile-144x144.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-config&quot;</span> <span class="attr">content</span>=<span class="string">&quot;/css/images/browserconfig.xml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;theme-color&quot;</span> <span class="attr">content</span>=<span class="string">&quot;#330066&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Android 效果如图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/8.png"> </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/9.png"> </p><p>iOS 因为 Pad 放在客厅我懒得拿了就不截图了</p><p>全部部署完成后，可以单击下面的 check your favicon 测试一下部署是否成功。<br>感谢 Real Favicon Generator，如果可能的话可以点击下面的链接捐助他们！<br><a href="http://realfavicongenerator.net/donate">http://realfavicongenerator.net/donate</a> </p><p align = right>by Sykie Chen2016.1.26</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> favicon </tag>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>格式化 JSON 的 Chrome 插件</title>
      <link href="posts/json-plugin/"/>
      <url>posts/json-plugin/</url>
      
        <content type="html"><![CDATA[<p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%A0%BC%E5%BC%8F%E5%8C%96%20JSON%20%E7%9A%84%20Chrome%20%E6%8F%92%E4%BB%B6/0.png" alt="img"></p><p>安利一个格式化显示 JSON 的 Chrome 插件，JSONView：<a href="http://jsonview.com/">http://jsonview.com/</a></p><p>这货不光有 Chrome 插件，还有 Firefox 的。</p><p>使用前：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%A0%BC%E5%BC%8F%E5%8C%96%20JSON%20%E7%9A%84%20Chrome%20%E6%8F%92%E4%BB%B6/image-20210421032053698.png" alt="image-20210421032053698"></p><p>使用后：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%A0%BC%E5%BC%8F%E5%8C%96%20JSON%20%E7%9A%84%20Chrome%20%E6%8F%92%E4%BB%B6/image-20210421032128503.png" alt="image-20210421032128503"></p><p>是不是一口气上五楼都不费劲了</p><p>Chrome 插件链接：</p><p><a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc">https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc</a></p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSON </tag>
            
            <tag> Chrome 插件 </tag>
            
            <tag> 格式化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在污染指数800+的北京活下去：关于防雾霾半面罩的选择</title>
      <link href="posts/20151213-masks/"/>
      <url>posts/20151213-masks/</url>
      
        <content type="html"><![CDATA[<h2 id="0-1-污染情况"><a href="#0-1-污染情况" class="headerlink" title="0.1 污染情况"></a>0.1 污染情况</h2><p>最近北京的空气又爆炸，污染300多已经算低了。昨天晚上空气指数400多的时候下楼拿外卖，一进走廊就能明显感觉到嗓子火辣辣的，我立刻回头戴上了 9502 口罩，然而电梯到一楼一开门时隔着口罩也能闻到空气中呛人的味道。一出楼门，能见度不足二十米，甚至觉得眼睛都开始不适。隔着口罩也能感觉到空气的味道更加明显。</p><p>前段时间空气污染 800+ 的时候我曾经用两天时间将一个 9501V 口罩戴得漆黑一片。加上最近嗓子不舒服的频率越来越高，我决定好好研究一下呼吸防护的问题。</p><h2 id="0-2-防护手段"><a href="#0-2-防护手段" class="headerlink" title="0.2 防护手段"></a>0.2 防护手段</h2><p>首先要明确一下各种呼吸防护等级标准，如下表：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/1.jpg"></p><p>N只防干性颗粒，P与R可以防油性颗粒。不幸的是，机动车尾气大部分由油性颗粒组成。交通部说空气污染是供暖的锅，住建部说空气污染是汽车尾气的锅。根据我戴 9502 口罩还能闻到雾霾味道这个情况来看，我倾向于相信住建部的说法。即佩戴 N95 等级的口罩（如 3M 9501/9502）并不能完全抵御雾霾。N90 等级（如 3M9001/9002/9003(V)）的就更别提了。</p><p>我又查阅了 P95 等级口罩（如 3M 8577/8576），售价均为 20+ RMB，根据之前重污染时2-3天更换一个的频率我是难以负担的。相比于 N95 口罩2-3 RMB 的售价不知高到哪里去了。</p><p>在查阅的过程中我了解到不光可以戴口罩，还可以直接上可以重复使用的面罩。面罩首次购买成本较高，但使用时更换的耗材成本相较于一次性口罩低了不少。<br>面罩就分为半面罩和全面罩。全面罩如图所示，随便感受一下。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/2.png"></p><p>生化危机既视感。戴出去太夸张了，而且售价也十分可观，图里的 6800 七件套 400+ RMB。<br>半面罩没有护目镜部分，造型更加正常一些，价格也在可以接受的程度内。</p><p>3M 的面罩有一大堆：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/3.png"></p><p>卖的比较好的主要有 6000、7500 和 3000 系列，别的有什么区别我也没太看出来，就不研究了。<br>半面罩的主要组成有本体、滤毒盒、过滤棉和过滤棉盖。不使用滤毒盒时可以将滤毒盒更换为过滤棉底座+过滤棉或直接接过滤棉。具体的图见下。下面分别讲一下各部分。</p><h2 id="1-面罩主体"><a href="#1-面罩主体" class="headerlink" title="1. 面罩主体"></a>1. 面罩主体</h2><p>3000 系列有 3100 小号、3200 中号和 3300 大号，分别给女性、男性和大脸男性使用。<br>说我要用 3300 那些你们过来，我保证不打死你们。<br>###1.1 3000 系列###<br>有一个滤毒盒承接口，应对平时的小流量呼吸无压力，运动时佩戴可能就比较捉急了。<br>3200 面罩搭配滤棉底座如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/4.png"></p><p>3200 搭配滤毒盒如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/5.png"></p><h3 id="1-2-6000-系列"><a href="#1-2-6000-系列" class="headerlink" title="1.2 6000 系列"></a>1.2 6000 系列</h3><p>有两个滤毒盒/过滤棉接口，可以应对大流量的呼吸，阻力较小，缺点是造型太特么夸张了，而且很重，戴久了脖子必然难受。同样分为 6100/6200/6300 对应不同大小的脸。</p><p>6200 的各种搭配如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/6.png"></p><p>配滤毒盒的戴上效果如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/7.png"></p><h3 id="1-3-7500-系列"><a href="#1-3-7500-系列" class="headerlink" title="1.3 7500 系列"></a>1.3 7500 系列</h3><p>跟 6000 系列的区别基本只在于 7500 是硅橡胶的，更舒服一点。同样分为 7501/7502 对应脸部大小。</p><p>7502 如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/8.png"></p><h2 id="2-过滤棉"><a href="#2-过滤棉" class="headerlink" title="2. 过滤棉"></a>2. 过滤棉</h2><p>过滤棉对应不同的面罩有不同的型号，根据国家标准 GB2890-2009，等级分为三种：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/9.png"></p><p>即最基本的 P1 型也有 N95 的过滤效果。<br>在 3M 官网摘抄如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/10.png"></p><p>来源：<a href="http://multimedia.3m.com/mws/media/483537O/7500.pdf">http://multimedia.3m.com/mws/media/483537O/7500.pdf</a></p><p>其中 2000 系列滤棉直接接在面罩上，5N/3N 系列滤棉要配合滤毒盒使用。<br>3N11 滤棉的图参考上面 3200 面具的图。<br>2091 滤棉如图所示：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/11.png"></p><p>迷人的粉色，妹子可以考虑一下=。=</p><h2 id="3-滤毒盒"><a href="#3-滤毒盒" class="headerlink" title="3. 滤毒盒"></a>3. 滤毒盒</h2><p>终于到了重点了，滤毒盒这个东西如果不装的话，面罩的优势就体现不出来了。<br>一个滤毒盒可以使用一个月左右（每天8小时）。主要分类如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/12.png"></p><p>所有的滤毒盒上都有颜色环，颜色遵循国家标准 GB2890-2009：<br>来源：<a href="http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0">http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0</a></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/13.png"></p><p>常用的有 6001/3301 和 6003/3303 滤毒盒，6000 和 3300 系列分别对应相应的半面具。<br>6001/3301 主要防有机气体，褐色环：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/14.png"></p><p>6003/3303 还兼防二氧化硫气体，褐色、黄色双环，但是比 6001/3301 贵二十多块钱，不过我觉得这个钱还是有必要的，毕竟尾气里二氧化硫含量不低。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/15.png"></p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>终于简单地说完了，各种型号真是要人命。总结起来我决定买 3200面具 + 3303滤毒盒 + 3N11滤棉 组合，全套售价 60-70 元左右，每周更换一次 3N11 滤棉，售价 1.6 元，每月更换一次  3303 滤毒盒，售价 34 元。<br>对于爱出汗的人有个神器，3M 389 吸汗垫，售价 2-3 元：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/16.png"></p><p>这个组合基本在保命和看起来正常之间取得了平衡= =<br>其实这个污染情况看起来正不正常已经不那么重要了。我已经好几次在学校里看见戴着巨大的带俩滤毒盒的 6200 面罩的妹子了，在生存面前，好不好看先缓一缓吧。选择了北京为的是更好的发展环境，污染的空气也是选择的一部分。自己选的霾，跪着也要吸完。</p><p>最后不得不说，3M 真是人民的好帮手，生活的好伙伴啊= =</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/17.png"></p><p>祝大家生活健康，不被熏死= =<br>以上涉及产品在 <code>X宝</code> 都能买到</p><p>参考：<br><a href="http://www.zhihu.com/question/38273401">http://www.zhihu.com/question/38273401</a><br><a href="http://www.zhihu.com/question/25953227">http://www.zhihu.com/question/25953227</a><br><a href="http://www.zhihu.com/question/20749979">http://www.zhihu.com/question/20749979</a><br><a href="http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0">http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0</a><br><a href="http://multimedia.3m.com/mws/media/652862O/2091p100.pdf">http://multimedia.3m.com/mws/media/652862O/2091p100.pdf</a><br><a href="http://multimedia.3m.com/mws/media/483537O/7500.pdf">http://multimedia.3m.com/mws/media/483537O/7500.pdf</a><br><a href="http://multimedia.3m.com/mws/media/5184O/particulate-filter-2096-p100.pdf">http://multimedia.3m.com/mws/media/5184O/particulate-filter-2096-p100.pdf</a></p><p align = right>by Sykie Chen2015.12.13</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 雾霾 </tag>
            
            <tag> 口罩 </tag>
            
            <tag> 面罩 </tag>
            
            <tag> 空气质量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mifare 1k S50 卡的简单探讨与破解</title>
      <link href="posts/20151019-nfc-mod/"/>
      <url>posts/20151019-nfc-mod/</url>
      
        <content type="html"><![CDATA[<p><strong>免责声明：本文仅供有能力的读者进行技术研究与探讨，本人在试验成功后已将卡片内数据改回。因阅读此文章而产生的一切后果与本人无关，一切责任由您自己承担。</strong></p><p><strong>警告：私自篡改 IC 卡内信息可能触犯法律，由于您自行改动您的卡片内的数据而引起的一切后果与本文作者无关。勿谓言之不预也。</strong></p><h2 id="0-背景"><a href="#0-背景" class="headerlink" title="0. 背景"></a>0. 背景</h2><p>学校公共洗衣机是用的是海尔的读卡洗衣机，与之配套的洗衣卡收费五十元，其中押金十元，内含十次洗衣次数，每次四元。</p><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h2><p>尝试用带 NFC 的手机（Galaxy S6）搭配 <a href="https://play.google.com/store/apps/details?id=de.syss.MifareClassicTool">Mifare Classic Tool</a> （链接为 Google Play，墙内可以使用 <a href="http://apkleecher.com/">Apk Leecher</a> 下载 Play 上的安装包） 读取洗衣卡发现其为 Mifare 1k 卡片。此卡片的加密早在2008年就被破解，只要有一个扇区未加密就可破解出其它所有扇区的密钥。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/1.png"></p><p>以下节选自 <a href="http://read.pudn.com/downloads102/doc/420451/M1%E5%8D%A1%E6%8A%80%E6%9C%AF%E6%89%8B%E5%86%8C[1].doc.doc">M1 卡技术手册</a> ：</p><ol><li>M1卡分为16个扇区，每个扇区由4块（块0、块1、块2、块3）组成，（我们也将16个扇区的64个块按绝对地址编号为0~63，存贮结构如下图所示：</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/2.png"></p><ol start="2"><li>第0扇区的块0（即绝对地址0块），它用于存放厂商代码，已经固化，不可更改。</li><li>每个扇区的块0、块1、块2为<strong>数据块</strong>，可用于存贮数据。</li></ol><p><strong>数据块</strong>可作两种应用：</p><pre><code>- 用作一般的数据保存，可以进行**读、写**操作。- 用作数据值，可以进行**初始化值、加值、减值、读值**操作。</code></pre><ol start="4"><li>每个扇区的块3为<strong>控制块</strong>，包括了密码A、存取控制、密码B。具体结构如下：</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/3.png"></p><ol start="5"><li>每个扇区的密码和存取控制都是独立的，可以根据实际需要设定各自的密码及存取控制。存取控制为4个字节，共32位，扇区中的每个块（包括数据块和控制块）的存取条件是由密码和存取控制共同决定的。<br>……</li></ol><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2. 操作"></a>2. 操作</h2><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/4.png"></p><p>如图，本卡中，所有区块的存取控制均为 FF 07 80 69 ，此值为 MF1 卡的出厂预设值，不必对照表格一步步解读，直接可以查得最后两位 69 无意义，前三位 FF 07 80 表示 0-2 三个块只要验证密码A或密码B即可读写。块3权限如下图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/5.png"></p><p>即：只有验证密码A正确了，才能做以下操作：<br>· 修改密码A；<br>· 修改控制字；<br>· 修改密码B，读出密码B。</p><p>可以看出，卡中只有第5扇区第1块中有数据，且为循环数据，猜测剩余次数存在此段数据中。除5扇区外其他扇区的密码A密码B均为 <code>FFFFFFFFFFFF</code>，第5扇区密码A未知，密码B为 <code>FFFFFFFFFFFF</code>。猜测为防止直接复制卡而修改了密码A，因此我采用直接复制整张卡的方法并不能读出正确的5扇区密码A。读卡机可能只使用密码A与卡通信，故复制卡试验时读卡机报错。<br>前文提到该卡已被破解，使用电脑连接读卡器可以方便地暴力猜解或通过验证漏洞破解密码A。但读卡器太特么贵了，并不能买得起。所以我们就不复制卡了。<br>然而虽然因密码A未知而不能复制，在密码B为默认密码的条件下可以直接用手机 NFC 修改5扇区1块的数据，无需复制卡片。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/6.png"></p><p>在卡机上正常刷卡一次后再次读取数据并对比，可见每个循环节内只有一个字节被修改，确定这个字节代表的就是剩余次数。<br>经过比对得到如下已知的对应关系。其中有数据字串的行为实际读出，其他的行为推测得出。</p><table><thead><tr><th>剩余次数</th><th>数据字串</th><th>关键字节</th><th>前4位</th><th>后4位</th></tr></thead><tbody><tr><td>10</td><td>F05A11EE00</td><td>5A</td><td>5</td><td>A</td></tr><tr><td>9</td><td>F06911EE00</td><td>69</td><td>6</td><td>9</td></tr><tr><td>8</td><td></td><td>78</td><td>7</td><td>8</td></tr><tr><td>7</td><td></td><td>87</td><td>8</td><td>7</td></tr><tr><td>6</td><td>F09611EE00</td><td>96</td><td>9</td><td>6</td></tr><tr><td>5</td><td></td><td>A5</td><td>A</td><td>5</td></tr><tr><td>4</td><td>F0B411EE00</td><td>B4</td><td>B</td><td>4</td></tr><tr><td>3</td><td>F0C311EE00</td><td>C3</td><td>C</td><td>3</td></tr><tr><td>2</td><td></td><td>D2</td><td>D</td><td>2</td></tr><tr><td>1</td><td></td><td>E1</td><td>E</td><td>1</td></tr></tbody></table><p>规律很简单。直接修改此字节即可完成洗衣卡次数的修改。</p><h2 id="3-验证与收尾"><a href="#3-验证与收尾" class="headerlink" title="3. 验证与收尾"></a>3. 验证与收尾</h2><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/7.png"></p><p>用 Mifare Classic Tool 写入数据，在卡机上测试成功显示十次。成功。<br><del>没有测试10以上的次数，因为新卡买回来就是十次。然而理论上应该最多可以修改为15次。有空再测试。</del><br>因为 <del>闲得蛋疼</del> 追求极致，我斗胆测试了 <code>0F</code> ，居然成功显示了15次。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/8.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/9.png"></p><p>然后就脑洞大开，最前面的 <code>F0</code> 会不会也是数据位呢？<br>于是测试了 <code>E10F</code> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/10.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/11.png"></p><p>哈哈哈哈居然真的显示31次。<br>我有一种要玩坏的预感。理论上限应该是255次吧，然而洗衣机上只有三位数码管，最多只能显示到99.0。好吧那就试试99.0。<br>把99转换成十六进制是63，所以写入 <code>96C3</code> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/12.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/13.png"></p><p>作死成功，这实在是太E可赛艇了。θ..θ</p><p>将数据修改回去，避免产生法律纠纷。</p><p>此次修改严格来说并没有什么技术含量，这个洗衣卡硬件本身已经不安全，又使用弱口令，破解不费吹灰之力。然而洗衣服并不要多贵，破解它所获取的仅仅是 Mifare 卡片相关的知识。</p><p>此外，这种卡片是离线卡片，并没有服务器存储余额，因此可以破解。而公交卡、校园卡等卡片使用时会在线验证，与服务器上的余额数据比对，因此即使数据能读取修改，也无法真正修改余额，除非连人家的服务器一块儿黑了。</p><p>最后再次声明，本文仅用于技术学习与探讨。您阅读本文后进行的一切操作及其引起的后果与本文作者无关，本人不承担任何责任。</p><p align = right>by Sykie Chen2015.10.192015.10.23 mod</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFC </tag>
            
            <tag> Mifare </tag>
            
            <tag> RFID </tag>
            
            <tag> IC卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>联想 Y580 V8.01 BIOS 的更新</title>
      <link href="posts/20151002-Y580-bios/"/>
      <url>posts/20151002-Y580-bios/</url>
      
        <content type="html"><![CDATA[<p><a href="/posts/20150903-win81-usb3/">上篇文章</a>里提到 Windows 8.1 中休眠后 USB 3.0 设备识别为 2.0 的问题。操作后确实可以解决睡眠和休眠后设备识别的问题，但 Win8.1 快速关机（假关机）后再启动又会识别为 2.0 设备。查找资料后确定为 BIOS 版本过老与 USB 3.0 及 Win8 兼容性不佳的问题。故刷新 BIOS。<br>美帝良心企业联想在国内发售的 Y580 行货均为 1366*768 低分屏，且 Win8 推出后并没有相应预装的版本。官网可下载到最新的 BIOS 固件版本为 5DCN40WW V2.07。该版本是针对 Win7 优化的。而 Y580 美版不仅有1080高分屏版本，还有预装了 Win8 的版本。该版本内置的 BIOS 版本为 5DCN90WW V8.01，该版本更好地支持了 Win8 的一些新特性，比如 UEFI 等。这里我只需要对 USB 3.0 更好的兼容性。</p><p>参考贴吧帖子 <a href="http://tieba.baidu.com/p/3959740413">http://tieba.baidu.com/p/3959740413</a> 。此处刷新的是含 EC 的完整版本。</p><ol><li>8.01 的 BIOS 刷新只能在纯 DOS 下进行，在<a href="http://pan.baidu.com/s/1sjl725R">这里</a>（提取码 ica4）下载 DOS 7 的 iso 镜像，用 UltraISO 写入U盘引导。</li><li>下载<a href="http://pan.baidu.com/s/1kTGlVoz">BIOS刷新包</a>（提取码 4b4a）解压后将 DOS 目录中所有文件拷入U盘。</li><li>重启，按 F12 选择U盘启动。键入 haltME.bat 回车，锁定 EC BIOS，完成后会自动重启。</li><li>再按 F12 进 DOS，运行 flash.bat 刷新 BIOS。屏幕会显示警告不要断开交流电，搞得我很紧张，难道电池不能供电么。</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/1.jpg"></p><ol start="5"><li>刷完自动重启，按 F2 进入 BIOS ，Boot -&gt; Boot Mode -&gt; Legacy Support 。起初我没选导致找不到U盘引导，默认的 UEFI 只能识别硬盘上的 Win8。</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/2.jpg"></p><ol start="6"><li>重启进入 DOS，运行 unhaltME.bat，解锁 EC。</li><li>重启进入 BIOS，Load Default，保存重启。</li></ol><p>刷好以后如图，启动时 Windows 的 logo 会变为联想 logo ，且闪屏的分辨率提升了。进入系统后反复测试发现 USB 3.0 的问题已经彻底解决。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/3.jpg"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/4.jpg"></p><h3 id="可能存在的问题"><a href="#可能存在的问题" class="headerlink" title="可能存在的问题"></a>可能存在的问题</h3><p>如果刷完进不去系统了，说明系统分区表不是 GPT ，不支持 UEFI。重复照第五步操作后，使用 DiskGenius 等分区软件将系统分区转为 GPT 分区表。</p><p align = right>by Sykie Chen2015.10.2</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Y580 </tag>
            
            <tag> 联想 </tag>
            
            <tag> BIOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 8.1 USB 3.0 速度异常的处理</title>
      <link href="posts/20150903-win81-usb3/"/>
      <url>posts/20150903-win81-usb3/</url>
      
        <content type="html"><![CDATA[<p>Windows 8.1 已经内建 USB 3.0 控制器驱动，正常情况下无需单独安装 USB 3.0 驱动程序。但有时由于兼容性问题或电源策略问题，系统睡眠并重新唤醒后 USB 3.0 端口无法正常工作，现象为 USB 3.0 设备传输速度限制在 30MB/s 上下，系统识别端口为 USB 2.0 端口。如图，设备和打印机中查看 3.0 设备时提示可在 3.0 端口上获得更快速度。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20150903-win81-usb3/1.png"></p><p>首先强制重新安装驱动。在<a href="https://downloadcenter.intel.com/download/22824/USB-3-0-Driver-Intel-USB-3-0-eXtensible-Host-Controller-Driver-for-Intel-8-9-100-Series-and-C220-C610-Chipset-Family">英特尔官网</a>下载最新版本驱动程序。此时若直接安装会提示系统版本不正确，无法安装。<br>进入 <code>\Drivers\Win7</code> 下与系统版本对应（32/64位）的目录，右键 <code>iusb3hub.inf</code> 和 <code>iusb3xhc.inf</code> 安装。<br>在设备管理器中双击 USB 设备中最下面的 <code>USB Root Hub (xHCI)</code>，在电源管理选项卡中取消选择“允许计算机关闭此设备以节约电力”。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20150903-win81-usb3/3.png"></p><p>重启电脑。<br>在设备和打印机中重新查看设备工作状态，提示已插入 3.0 端口。测速 200+MB/s。 休眠并唤醒后不变。Done.</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20150903-win81-usb3/2.png"></p><p align = right>by Sykie Chen2015.9.6</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows 8.1 </tag>
            
            <tag> USB 3.0 </tag>
            
            <tag> Intel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks + obfsproxy 混淆翻墙的实现</title>
      <link href="posts/20150825-shadowsocks-obfs/"/>
      <url>posts/20150825-shadowsocks-obfs/</url>
      
        <content type="html"><![CDATA[<p>Shadowsocks 的作者 <a href="https://twitter.com/clowwindy">@clowwindy</a> 近期被喝茶了，并被迫删除了 Github 上的源码。这意味着 ss 以后不会得到更新，其流量特征也许会被不断进化的 GFW 识别并封锁。故使用 obfsproxy 进行二次混淆，降低被识别的风险。<br>以下步骤均在 Debian 7 32 位系统上进行。</p><h2 id="1-配置-shadowsocks-libev-服务端"><a href="#1-配置-shadowsocks-libev-服务端" class="headerlink" title="1. 配置 shadowsocks-libev 服务端"></a>1. 配置 shadowsocks-libev 服务端</h2><p>参考<a href="https://github.com/shadowsocks/shadowsocks-libev">官方文档</a>，这里从源直接安装。</p><p>添加 GPG public key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O- http://shadowsocks.org/debian/1D27208A.gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>向 <code>/etc/apt/sources.list</code> 添加以下内容</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//</span>shadowsocks.org/debian wheezy main</span><br></pre></td></tr></table></figure><p>执行以下命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install shadowsocks-libev</span><br></pre></td></tr></table></figure><p>安装完成后编辑<code>/etc/shadowsocks-libev/config.json</code> 文件配置加密方式与端口</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;server&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;server_port&quot;</span>:<span class="number">2333</span>,</span><br><span class="line">    <span class="attr">&quot;local_address&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">&quot;password&quot;</span>:<span class="string">&quot;---&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>:<span class="number">600</span>,</span><br><span class="line">    <span class="attr">&quot;method&quot;</span>:<span class="string">&quot;aes-256-cfb&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>server 填写 0.0.0.0 允许所有设备连接，填写 127.0.0.1 则仅允许本机内环连接。<br>加密方式一般选择 aes-256-cfb。<br>配置完成后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/shadowsocks-libev start</span><br></pre></td></tr></table></figure><p>启动ss服务端。</p><h2 id="2-配置-shadowsocks-客户端（Windows-平台）"><a href="#2-配置-shadowsocks-客户端（Windows-平台）" class="headerlink" title="2. 配置 shadowsocks 客户端（Windows 平台）"></a>2. 配置 shadowsocks 客户端（Windows 平台）</h2><p>在 <a href="http://shadowsocks.org/en/download/clients.html">http://shadowsocks.org/en/download/clients.html</a> 下载 win 客户端<br>启动后在 GUI 中填写服务器信息并保存，本地端口以666举例。<br>右击托盘图标以配置开机启动，将代理方式设置为 PAC。视情况使用 PAC 脚本或搭配 SwitchyOmega + Chrome 使用。<br>若连接正常，则继续进行 obfsproxy 的部署。</p><h2 id="3-配置-obfsproxy-服务端"><a href="#3-配置-obfsproxy-服务端" class="headerlink" title="3. 配置 obfsproxy 服务端"></a>3. 配置 obfsproxy 服务端</h2><p>使用 python-pip 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gcc python-pip python-dev</span><br><span class="line">pip install obfsproxy</span><br></pre></td></tr></table></figure><p>运行服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/obfsproxy --data-dir=/tmp/scramblesuit-server scramblesuit --password=FANGBINXINGFUCKYOURMOTHERSASS444 --dest=127.0.0.1:2333 server 0.0.0.0:23333</span><br></pre></td></tr></table></figure><p>scramblesuit 是一种安全性稍高的加密工作方式，该方式工作时需要临时文件夹存放yaml ticket，故用 –data-dir 参数指定目录。–password 指定了加密密码，必须为 BASE32 字符，即大写字母加数字共32位的字符串。<br>–dest 指定目标端口，此处填写 ss 服务端口。 server 为混淆后对外监听端口，0.0.0.0 表示允许所有网段地址连接。<br>运行成功后会提示</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span><span class="number">-08</span><span class="number">-25</span> <span class="number">21</span>:<span class="number">22</span>:<span class="number">02</span>,<span class="number">412</span> [WARNING] Obfsproxy (version: <span class="number">0.2</span><span class="number">.13</span>) starting up.</span><br><span class="line"><span class="number">2015</span><span class="number">-08</span><span class="number">-25</span> <span class="number">21</span>:<span class="number">22</span>:<span class="number">02</span>,<span class="number">412</span> [ERROR]</span><br><span class="line">################################################</span><br><span class="line">Do NOT rely on ScrambleSuit for strong security!</span><br><span class="line">################################################</span><br></pre></td></tr></table></figure><p>并不知道那句 [ERROR] 是什么意思，所以不要理它好了=。=<br>启动成功后需要将其加入自启动。编辑<code>/etc/rc.local</code> 文件添加如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(/usr/<span class="built_in">local</span>/bin/obfsproxy --data-dir=/tmp/scramblesuit-server scramblesuit --password=FANGBINXINGFUCKYOURMOTHERSASS444 --dest=127.0.0.1:2333 server 0.0.0.0:23333 &gt;/dev/null 2&gt;&amp;1 &amp;)</span><br></pre></td></tr></table></figure><p>包括最外层括号。<br>重启 VPS，服务端应已开始工作。</p><h2 id="4-配置-obfsproxy-客户端"><a href="#4-配置-obfsproxy-客户端" class="headerlink" title="4. 配置 obfsproxy 客户端"></a>4. 配置 obfsproxy 客户端</h2><p>Tor 并没有提供单独的 obfsproxy 客户端下载，需要手动从 Tor Browser 安装包中提取。<br>在 <a href="https://www.torproject.org/projects/obfsproxy.html.en">https://www.torproject.org/projects/obfsproxy.html.en</a> 下载 Tor Browser with obfsproxy<br>下载后作为压缩包打开，定位至 <code>Browser\TorBrowser\Tor\PluggableTransports\</code><br>由于客户端程序有依赖，故将该目录下除子目录 fteproxy 外的所有文件提取至单独文件夹中。<br>运行客户端：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obfsproxy\obfsproxy.exe scramblesuit --password=FANGBINXINGFUCKYOURMOTHERSASS444 --dest=www.devchen.com:<span class="number">23333</span> client <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6666</span></span><br></pre></td></tr></table></figure><p>运行成功的提示与服务端的类似。<br>客户端将运行在本机 6666 端口上，修改 shadowsocks 客户端参数，服务器地址填入 127.0.0.1，端口 6666。测试连接是否成功。<br>将客户端加入 Windows 自启动。由于启动后会产生一个控制台窗口，故需要用 vbs 启动客户端以隐藏控制台窗口。</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CreateObject</span>(<span class="string">&quot;WScript.Shell&quot;</span>).Run <span class="string">&quot;obfsproxy\obfsproxy.exe scramblesuit --password=FANGBINXINGFUCKYOURMOTHERSASS444 --dest=www.devchen.com:6667 client 127.0.0.1:4243&quot;</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure><p>存为 VBS 文件，到<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>(Windows 8.1)</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>全部完工后端口如下：<br>服务端：<br>2333   -   Shadowsocks 服务端口<br>23333  -   obfsproxy 转发服务端口</p><p>客户端：<br>666    -   Shadowsocks 代理服务端口<br>6666   -   obfsproxy 转发服务端口</p><p>加入 obfs 混淆后访问速度及稳定性明显增加。</p><p align = right>by Sykie Chen2015.8.25</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VPS </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三星 Galaxy S6 的 SystemUI 修改与功能添加</title>
      <link href="posts/20150710-sgs6-mod/"/>
      <url>posts/20150710-sgs6-mod/</url>
      
        <content type="html"><![CDATA[<p>5.0系统下 xposed 框架不稳定且对三星 TouchWiz 支持不佳，故手动反编译并修改 SystemUI 添加部分常用功能。<br>部分内容源于 xda 论坛等。用 apktool 反编译。<br>注意，使用 apktool 2.0 版本无法正常回编译 SystemUI.apk，此处使用 2.0 RC3 版本，可正常编译。<br>基于 SM-G9200 大陆公开版 G9200ZCU1AOE4 固件。</p><h2 id="1-电量数字大小修改"><a href="#1-电量数字大小修改" class="headerlink" title="1. 电量数字大小修改"></a>1. 电量数字大小修改</h2><p>默认电量百分比的数字字号太大了，占用过多空间。<br><code>SystemUI\res\values\dimens.xml</code> 971行  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">&quot;battery_text_marginStart&quot;</span>&gt;</span>0.0dip<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">&quot;battery_text_size&quot;</span>&gt;</span>9.0dip<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-移动网络断开时不显示G-E-3G-4G"><a href="#2-移动网络断开时不显示G-E-3G-4G" class="headerlink" title="2.移动网络断开时不显示G/E/3G/4G"></a>2.移动网络断开时不显示G/E/3G/4G</h2><p>修改 <code>/System/build.prop</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ro.product.name=zerofltezc</span><br><span class="line">ro.product.device=zerofltechn</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ro.product.name=zeroflte</span><br><span class="line">ro.product.device=zeroflte</span><br></pre></td></tr></table></figure><p>如此可达到最初目的，即断开移动网络时隐藏网络类型指示器。但似乎并不稳定，更改机型可能导致某些专用软件的兼容性问题，也可能影响 Smart Switch 的识别。故修改布局与图片资源使网络类型指示器与信号重叠变通解决。</p><p><code>systemui\layout\msim_signal_cluster_view.xml</code><br>将 separate_mobile 下的 inout 和 mobiletype 移动到 mobile_combo 下。<br>注意，卡1有两个 mobile_combo ，第一个 sub3 平时并不显示，怀疑是电信卡的双信号格，移动的时候注意放到不带 sub 的 frame 中，卡2无此问题，只有一个 sub2<br>改动后替换 png 资源防止文字重叠。覆盖即可。<br>png图标包：<a href="http://pan.baidu.com/s/1i3F2YiD">http://pan.baidu.com/s/1i3F2YiD</a></p><h2 id="3-隐藏下拉的-S-搜索、快速连接"><a href="#3-隐藏下拉的-S-搜索、快速连接" class="headerlink" title="3. 隐藏下拉的 S 搜索、快速连接"></a>3. 隐藏下拉的 S 搜索、快速连接</h2><p><code>SystemUI.apk\smali\com\android\systemui\statusbar\phone\PhoneStatusBar.smali</code> 找到并修改如下内容</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span> showHideQConnectLayout()V</span><br><span class="line"><span class="keyword">    .locals</span> 13</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .prologue</span></span><br><span class="line">   <span class="built_in"> const/16 </span>v12, 0x64</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> const/4 </span>v11, 0x1</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> const/16 </span>v10, 0x8</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> const/4 </span>v9, 0x0</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 7422</span><br><span class="line">   <span class="built_in"> iget-boolean </span>v6, p0, <span class="class">Lcom/android/systemui/statusbar/phone/PhoneStatusBar;</span>-&gt;mShowSFinderQConnectView:Z</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> if-eqz </span>v6,<span class="keyword"> :cond_6</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iget-object </span>v6, p0, <span class="class">Lcom/android/systemui/statusbar/phone/PhoneStatusBar;</span>-&gt;mQconnectSfinderView:<span class="class">Lcom/android/systemui/statusbar/QconnectSfinderView;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> if-nez </span>v6,<span class="keyword"> :cond_0</span> //0改为6</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iget-object </span>v6, p0, <span class="class">Lcom/android/systemui/statusbar/phone/PhoneStatusBar;</span>-&gt;mQsQConnectView:<span class="class">Landroid/view/View;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> if-eqz </span>v6,<span class="keyword"> :cond_6</span></span><br></pre></td></tr></table></figure><h2 id="4-隐藏状态栏-卡1-卡2-图标"><a href="#4-隐藏状态栏-卡1-卡2-图标" class="headerlink" title="4. 隐藏状态栏 卡1 卡2 图标"></a>4. 隐藏状态栏 卡1 卡2 图标</h2><p><code>systemui\layout\msim_signal_cluster_view.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span> <span class="attr">android:id</span>=<span class="string">&quot;@id/sim_icon_chn&quot;</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;0dip&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-添加铃声、修改低电量、截屏等UI声音、禁用音量调节声"><a href="#5-添加铃声、修改低电量、截屏等UI声音、禁用音量调节声" class="headerlink" title="5. 添加铃声、修改低电量、截屏等UI声音、禁用音量调节声"></a>5. 添加铃声、修改低电量、截屏等UI声音、禁用音量调节声</h2><p>铃声包：<a href="http://pan.baidu.com/s/1eQfHqAQ">http://pan.baidu.com/s/1eQfHqAQ</a><br>解压替换<code>/System/Media/</code></p><h2 id="6-相机声音开关、浏览器谷歌搜索"><a href="#6-相机声音开关、浏览器谷歌搜索" class="headerlink" title="6. 相机声音开关、浏览器谷歌搜索"></a>6. 相机声音开关、浏览器谷歌搜索</h2><p><code>/System/csc/others.xml</code><br>添加 <code>ShutterSoundMenu</code>项为 <code>True</code><br>谷歌搜索记不住了，看着英文改就好，很简单的。<br>或使用 <code>CSC Feature Expert</code><br>地址：<a href="http://pan.baidu.com/s/1jGrewUa">http://pan.baidu.com/s/1jGrewUa</a> 密码：m5ui</p><h2 id="7-状态栏网速"><a href="#7-状态栏网速" class="headerlink" title="7. 状态栏网速"></a>7. 状态栏网速</h2><p>参考这个教程 <a href="http://forum.xda-developers.com/android/general/mod-status-bar-network-traffic-separate-t3024878">http://forum.xda-developers.com/android/general/mod-status-bar-network-traffic-separate-t3024878</a> </p><p>首先 deodex <code>SystemUI</code> 和 <code>SecSettings</code> 两个系统 apk。<br>下载 <a href="http://pan.baidu.com/s/1dDpSC1N">http://pan.baidu.com/s/1dDpSC1N</a> 这里的文件包。</p><h3 id="7-1-SystemUI"><a href="#7-1-SystemUI" class="headerlink" title="7.1 SystemUI"></a>7.1 SystemUI</h3><p>首先将压缩包里的 smali 文件和 png 图放到反编译后相应的路径下。<br>打开压缩包里的 values 文件夹，将其中 xml 文件的内容添加到反编译后相应文件中。<br>打开 <code>layout/status_bar.xml</code> 文件添加以下内容： </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.android.systemui.statusbar.policy.NetworkTraffic</span> <span class="attr">android:id</span>=<span class="string">&quot;@id/networkTraffic&quot;</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;fill_parent&quot;</span> <span class="attr">android:singleLine</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>编译 SystemUI 再反编译，打开 <code>res/values/public.xml</code>，再打开 <code>smali/com/android/systemui/statusbar/policy/NetworkTraffic.smali</code> 搜索以下 ID 并用 xml 文件中的值替换 smali 文件中的对应值。压缩包内有相应文件。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x7f0c00c9</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;dimen&quot; <span class="type">name</span>=&quot;net_traffic_single_text_size&quot;</span><br><span class="line"><span class="number">0x7f0c00ca</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;dimen&quot; <span class="type">name</span>=&quot;net_traffic_multi_text_size&quot;</span><br><span class="line"><span class="number">0x7f02042a</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;drawable&quot; <span class="type">name</span>=&quot;stat_sys_network_traffic_updown&quot;</span><br><span class="line"><span class="number">0x7f020429</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;drawable&quot; <span class="type">name</span>=&quot;stat_sys_network_traffic_up&quot;</span><br><span class="line"><span class="number">0x7f020428</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;drawable&quot; <span class="type">name</span>=&quot;stat_sys_network_traffic_down&quot;</span><br></pre></td></tr></table></figure><p>完成后编译之，替换 resources 文件。</p><h3 id="7-2-SecSettings"><a href="#7-2-SecSettings" class="headerlink" title="7.2 SecSettings"></a>7.2 SecSettings</h3><p>基本步骤同上，再次反编译后替换如下 smali 中相应 ID：<br><code>NetworkTraffic.smali</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x7f0e000f</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;integer&quot; <span class="type">name</span>=&quot;maskUp&quot;</span><br><span class="line"><span class="number">0x7f0e0010</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;integer&quot; <span class="type">name</span>=&quot;maskDown&quot;</span><br><span class="line"><span class="number">0x7f0e0011</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;integer&quot; <span class="type">name</span>=&quot;maskUnit&quot;</span><br><span class="line"><span class="number">0x7f0e0012</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;integer&quot; <span class="type">name</span>=&quot;maskPeriod&quot;</span><br><span class="line"><span class="number">0x7f09188a</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;string&quot; <span class="type">name</span>=&quot;network_traffic_color_reset&quot;</span><br><span class="line"><span class="number">0x7f09188b</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;string&quot; <span class="type">name</span>=&quot;network_traffic_color_reset_message&quot;</span><br><span class="line"><span class="number">0x7f091677</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;string&quot; <span class="type">name</span>=&quot;ok&quot;</span><br><span class="line"><span class="number">0x7f090198</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;string&quot; <span class="type">name</span>=&quot;cancel&quot;</span><br><span class="line"><span class="number">0x7f0700ef</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;xml&quot; <span class="type">name</span>=&quot;network_traffic&quot;</span><br><span class="line"><span class="number">0x7f09188a</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;string&quot; <span class="type">name</span>=&quot;network_traffic_color_reset&quot;</span><br><span class="line"><span class="number">0x7f02021d</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;drawable&quot; <span class="type">name</span>=&quot;ic_settings_backup&quot;</span><br></pre></td></tr></table></figure><p><code>SeekBarPreference.smali</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x7f0b0696</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;id&quot; <span class="type">name</span>=&quot;seekBarPrefBarContainer&quot;</span><br><span class="line"><span class="number">0x7f040229</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;layout&quot; <span class="type">name</span>=&quot;seek_bar_preference&quot;</span><br><span class="line"><span class="number">0x7f0b0694</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;id&quot; <span class="type">name</span>=&quot;seekBarPrefValue&quot;</span><br><span class="line"><span class="number">0x7f0b0693</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;id&quot; <span class="type">name</span>=&quot;seekBarPrefUnitsRight&quot;</span><br><span class="line"><span class="number">0x7f0b0695</span>    &lt;<span class="built_in">public</span> <span class="keyword">type</span>=&quot;id&quot; <span class="type">name</span>=&quot;seekBarPrefUnitsLeft&quot;</span><br></pre></td></tr></table></figure><p><code>ColorPickerDialog.smali</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">0x7f04022b    &lt;public <span class="attribute">type</span>=<span class="string">&quot;layout&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;dialog_color_picker”</span></span><br><span class="line"><span class="string">0x7f091920    &lt;public type=&quot;</span>string&quot; <span class="attribute">name</span>=<span class="string">&quot;dialog_color_picker&quot;</span></span><br><span class="line">0x7f0b069f    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;color_picker_view&quot;</span></span><br><span class="line">0x7f0b06a2    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;old_color_panel&quot;</span></span><br><span class="line">0x7f0b069a    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;new_color_panel&quot;</span></span><br><span class="line">0x7f0b069b    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;white_panel&quot;</span></span><br><span class="line">0x7f0b069d    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;black_panel&quot;</span></span><br><span class="line">0x7f0b069c    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;cyan_panel&quot;</span></span><br><span class="line">0x7f0b069e    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;red_panel&quot;</span></span><br><span class="line">0x7f0b06a0    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;green_panel&quot;</span></span><br><span class="line">0x7f0b06a1    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;yellow_panel&quot;</span></span><br><span class="line">0x7f0b06a5    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;hex&quot;</span></span><br><span class="line">0x7f0b06a6    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;enter&quot;</span></span><br><span class="line">0x7f0b069a    &lt;public <span class="attribute">type</span>=<span class="string">&quot;id&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;new_color_panel&quot;</span></span><br></pre></td></tr></table></figure><p>最后将以下代码添加到 <code>res/layout</code>下合适的设置大项中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PreferenceScreen</span> <span class="attr">android:title</span>=<span class="string">&quot;@string/network_traffic_title&quot;</span> <span class="attr">android:key</span>=<span class="string">&quot;network_traffic_state &quot;</span> <span class="attr">android:summary</span>=<span class="string">&quot;@string/network_traffic_summary&quot;</span> <span class="attr">android:fragment</span>=<span class="string">&quot;com.android.settings.temasek.NetworkTraffic&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>编译替换，完工。</p><h2 id="8-S助手-长按-home-修改"><a href="#8-S助手-长按-home-修改" class="headerlink" title="8. S助手 长按 home 修改"></a>8. S助手 长按 home 修改</h2><p>framework-res/value/integers/config_holdHomeButton - 1</p><p align = right>by Sykie Chen2015.7.10</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> S6 </tag>
            
            <tag> SystemUI </tag>
            
            <tag> 反编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三星 Galaxy S6 保持 knox 0x0 的 root</title>
      <link href="posts/sgs6-root/"/>
      <url>posts/sgs6-root/</url>
      
        <content type="html"><![CDATA[<p>新入手三星 S6 公开版，按以往的经验 root 时线刷刷入第三方 rocovery 的过程中会导致 knox 0x1 从而失去保修。而且 S6 的国行有 BL 锁，解锁同样会失去保修。<br>发现 PingPongRoot 可以在不使用线刷动作的前提下获取 root 权限，从而保持 knox 0x0。<br>XDA 原帖地址：<a href="http://forum.xda-developers.com/galaxy-s6/general/root-pingpongroot-s6-root-tool-t3103016">http://forum.xda-developers.com/galaxy-s6/general/root-pingpongroot-s6-root-tool-t3103016</a><br>首先下载原帖的附件 pingpongroot_beta6.apk 并安装。（百度网盘：<a href="http://pan.baidu.com/s/1c0ASLhA%EF%BC%89">http://pan.baidu.com/s/1c0ASLhA）</a><br>安装后启动会提示安装 Super SU，安装后打开 Super SU，不理会报错，然后退出之。重新进入 PingPong Root 点击 Download Data。更新完成后点 Get Root 即可自动完成 root。之后按提示重启手机即获得 root 权限。<br>但此法仍会导致系统设置内的状态变为“定制”，从而导致 OTA 失效。需要更新时用官方的 Smart Switch 线刷更新系统即可。或通过安装 Xposed 框架（官方不支持三星5.0，但可以通过其他办法刷入）再安装 Wanam Xposed 模块修改设备状态为官方。</p><p>在 SM-G9200 大陆公开版 G9200ZCU1AOE4 固件测试通过。</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> root </tag>
            
            <tag> S6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Landscape 主题修改优化</title>
      <link href="posts/hexo-theme/"/>
      <url>posts/hexo-theme/</url>
      
        <content type="html"><![CDATA[<p>这几天用 Hexo 搭了个静态博客。觉得默认的 Landscape 主题挺好看，但有些地方很奇怪。别人改好的 Landscape-plus 和 Landscape-f 改动太大，用着不爽，就决定自己从头造个轮子修改一下。</p><p>基于 <a href="https://github.com/hexojs/hexo-theme-landscape">Landscape</a>，修改添加了部分功能。部分参考了 <a href="https://github.com/howiefh/hexo-theme-landscape-f">Landscape-F</a> 和  <a href="https://github.com/xiangming/landscape-plus">Landscape-plus</a>。<br>文章参考来源以链接形式放在各节小标题上。有基于原文完善或修改的地方不再另行注明。</p><h2 id="1-Google-jQuery-库的优化"><a href="#1-Google-jQuery-库的优化" class="headerlink" title="1. Google jQuery 库的优化"></a>1. <a href="http://kuangqi.me/tricks/hexo-optimizations-for-mainland-china/">Google jQuery 库的优化</a></h2><p><code>layout\_partial\after-footer.ejs</code> 17行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>替换为如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://lib.sinaapp.com/js/jquery/2.0.3/jquery-2.0.3.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//&lt;![CDATA[</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (<span class="keyword">typeof</span> jQuery == <span class="string">&#x27;undefined&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.write(<span class="built_in">unescape</span>(<span class="string">&quot;%3Cscript src=&#x27;/js/jquery-2.0.3.min.js&#x27; type=&#x27;text/javascript&#x27;%3E%3C/script%3E&quot;</span>));</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">// ]]&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里不但将 Google 的 jQuery 替换成了 SAE 的，随后还进行了一个判断，如果获取新浪的 jQuery 失败，则使用本网站自己的 jQuery。为了让这段代码有效，我们要去 jQuery 官方下载合适版本的 jQuery 并将其放到 <code>source\js\ </code> 目录下，命名为 <code>jquery-2.0.3.min.js</code>。<br>还有一点需要特别注意，那就是 jQuery 这个文件在 hexo 生成博客时会被解析，因此一定要将 jQuery 文件开头处的 <code>//@ sourceMappingURL=jquery-2.0.3.min.map</code> 这一行代码删去，否则会导致博客无法生成。</p><h2 id="2-跨平台字体优化"><a href="#2-跨平台字体优化" class="headerlink" title="2. 跨平台字体优化"></a>2. <a href="http://kuangqi.me/tricks/hexo-optimizations-for-mainland-china/">跨平台字体优化</a></h2><p>为了能在各个平台上都显示令人满意的字体，我们要修改 CSS 文件中的字体设置，列出多个备选的字体，操作系统会依次尝试，使用系统中已安装的字体。我们要修改的是<code>source\css\_variables.styl</code>这一文件，将其中第22行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-sans = <span class="string">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, sans-serif</span><br></pre></td></tr></table></figure><p>改成如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-sans = Tahoma, <span class="string">&quot;Helvetica Neue&quot;</span>, Helvetica, <span class="string">&quot;Hiragino Sans GB&quot;</span>, <span class="string">&quot;Microsoft YaHei Light&quot;</span>, <span class="string">&quot;Microsoft YaHei&quot;</span>, <span class="string">&quot;Source Han Sans CN&quot;</span>, <span class="string">&quot;WenQuanYi Micro Hei&quot;</span>, sans-serif</span><br></pre></td></tr></table></figure><p>其中 Helvetica、Verdana 是英文字体，前者一般存在于苹果电脑和移动设备上，后者一般存在于 Windows 系统中。冬青黑体（Hiragino Sans GB）、思源黑体（Source Han Sans CN）、文泉驿米黑（WenQuanYi Micro Hei）是中文字体，冬青黑体从 OS X 10.6 开始集成在苹果系统中，文泉驿米黑在Linux的各大发行版中均较为常见，而思源黑体是近期 Google 和 Adobe 合作推出的一款开源字体，很多电脑上也安装了这一字体。这样一来，在绝大部分操作系统中就可以显示美观的字体了。</p><h2 id="3-代码块等宽字体优化"><a href="#3-代码块等宽字体优化" class="headerlink" title="3. 代码块等宽字体优化"></a>3. <a href="https://www.snip2code.com/Snippet/466525/replace-the-google-link%28css-js%29-to-baidu">代码块等宽字体优化</a></h2><p><code>layout\_partial\head.ejs</code> 第31行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;http://fonts.googleapis.com/css?family=Source+Code+Pro&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;http://fonts.useso.com/css?family=Source+Code+Pro&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-修改添加分享链接"><a href="#4-修改添加分享链接" class="headerlink" title="4. 修改添加分享链接"></a>4. 修改添加分享链接</h2><h3 id="4-1-百度分享框"><a href="#4-1-百度分享框" class="headerlink" title="4.1 百度分享框"></a>4.1 <a href="http://share.baidu.com/code">百度分享框</a></h3><p>在百度分享获取代码后，代码可分为两部分。<br>在<code>layout\_partial\article.ejs</code>中第26行插入第一段代码并添加判断条件，若当前页为文章展开页则显示百度分享框，若是缩略则采用原生分享链接，避免百度分享框获取的 URL 错误：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if ((page.layout == &#x27;post&#x27;|| page.layout == &#x27;page&#x27;))&#123; %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bdsharebuttonbox&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- post.permalink %&gt;&quot;</span>&gt;</span>分享到：<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bds_tsina&quot;</span> <span class="attr">data-cmd</span>=<span class="string">&quot;tsina&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分享到新浪微博&quot;</span>&gt;</span>新浪微博<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bds_renren&quot;</span> <span class="attr">data-cmd</span>=<span class="string">&quot;renren&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分享到人人网&quot;</span>&gt;</span>人人网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bds_qzone&quot;</span> <span class="attr">data-cmd</span>=<span class="string">&quot;qzone&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分享到QQ空间&quot;</span>&gt;</span>QQ空间<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bds_weixin&quot;</span> <span class="attr">data-cmd</span>=<span class="string">&quot;weixin&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分享到微信&quot;</span>&gt;</span>微信<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bds_fbook&quot;</span> <span class="attr">data-cmd</span>=<span class="string">&quot;fbook&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分享到Facebook&quot;</span>&gt;</span>Facebook<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bds_twi&quot;</span> <span class="attr">data-cmd</span>=<span class="string">&quot;twi&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分享到Twitter&quot;</span>&gt;</span>Twitter<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bds_more&quot;</span> <span class="attr">data-cmd</span>=<span class="string">&quot;more&quot;</span>&gt;</span>其他平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&lt;% &#125; else &#123; %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">data-url</span>=<span class="string">&quot;&lt;%- post.permalink %&gt;&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;&lt;%= post._id %&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;article-share-link&quot;</span>&gt;</span>分享<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>在<code>layout\_partial\after-footer.ejs</code>末尾添加第二部分代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Baidu Share Start ---&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">window</span>._bd_share_config=&#123;<span class="string">&quot;common&quot;</span>:&#123;<span class="string">&quot;bdSnsKey&quot;</span>:&#123;<span class="string">&quot;tsina&quot;</span>:<span class="string">&quot;1714312189&quot;</span>&#125;,<span class="string">&quot;bdWbuid&quot;</span>:<span class="number">3904642734</span>,<span class="string">&quot;bdText&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;bdMini&quot;</span>:<span class="string">&quot;2&quot;</span>,<span class="string">&quot;bdMiniList&quot;</span>:[<span class="string">&quot;douban&quot;</span>,<span class="string">&quot;kaixin001&quot;</span>,<span class="string">&quot;tieba&quot;</span>,<span class="string">&quot;tsohu&quot;</span>,<span class="string">&quot;sqq&quot;</span>,<span class="string">&quot;youdao&quot;</span>,<span class="string">&quot;qingbiji&quot;</span>,<span class="string">&quot;mail&quot;</span>,<span class="string">&quot;linkedin&quot;</span>,<span class="string">&quot;mshare&quot;</span>,<span class="string">&quot;copy&quot;</span>,<span class="string">&quot;print&quot;</span>],<span class="string">&quot;bdPic&quot;</span>:<span class="string">&quot;http://www.devchen.com/SharePic.png&quot;</span>,<span class="string">&quot;bdStyle&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;bdSize&quot;</span>:<span class="string">&quot;24&quot;</span>&#125;,<span class="string">&quot;share&quot;</span>:&#123;<span class="string">&quot;bdSize&quot;</span>:<span class="number">16</span>&#125;&#125;;<span class="keyword">with</span>(<span class="built_in">document</span>)<span class="number">0</span>[(getElementsByTagName(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>]||body).appendChild(createElement(<span class="string">&#x27;script&#x27;</span>)).src=<span class="string">&#x27;http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=&#x27;</span>+~(-<span class="keyword">new</span> <span class="built_in">Date</span>()/<span class="number">36e5</span>)];</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--- Baidu Share End ---&gt;</span></span><br></pre></td></tr></table></figure><p>其中<code>1714312189</code>为我申请的微博开放平台的 App Key，申请后分享可以显示尾巴。<code>3904642734</code>是我的微博 ID，作用是在文本框里自动艾特我的微博。<br>注意保存时将编码改为 UTF-8，否则会乱码。</p><h3 id="4-2-原生分享的修改"><a href="#4-2-原生分享的修改" class="headerlink" title="4.2 原生分享的修改"></a>4.2 <a href="http://blanboom.org/hack-hexo-theme-landscape.html">原生分享的修改</a></h3><p>在 <code>source\js\script.js</code> 中，57行 <code>&#39;&lt;div class=&quot;article-share-links&quot;&gt;&#39;</code>,，下面的四个链接就是 Facebook 等社交网站的分享链接。将其替换或添加如下代码，即可实现分享到国内社交网站：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://service.weibo.com/share/share.php?appkey=1714312189&amp;pic=http%3A%2F%2Fwww.devchen.com%2FSharePic.png&amp;ralateUid=3904642734&amp;searchPic=true&amp;url=&#x27; + encodedUrl + &#x27;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;article-share-sina&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;微博&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;,</span><br><span class="line">&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://share.renren.com/share/buttonshare.do?link=&#x27; + encodedUrl + &#x27;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;article-share-renren&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;人人&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;,</span><br><span class="line">&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url=&#x27; + encodedUrl + &#x27;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;article-share-qq&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;QQ空间&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;,</span><br><span class="line">&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://qr.liantu.com/api.php?text=&#x27; + encodedUrl + &#x27;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;article-share-wechat&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;微信&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;,</span><br></pre></td></tr></table></figure><p>注意，微博中<code>“3904642734”</code>是我的微博ID，作用是在文本框里自动艾特我的微博。<br>微信分享中 <code>http://qr.liantu.com/api.php?text=</code> 这个地址是 <a href="http://www.liantu.com/pingtai/">联图网</a> 提供的二维码 API ，用微信扫描后分享。</p><p>同时，还需要替换图标。本主题使用 Font Awesome 来显示图标，但内置的 Font Awesome 版本较旧，无法显示 QQ、腾讯微博等图标，所以，需要下载最新版 <a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a>，替换掉 <code>source\css\fonts</code> 中相关文件，并在<code> source\css\_variables.styl</code> 中27行的 <code>font-icon-version</code> 修改为最新的 Font Awesome 版本号。</p><p>然后，在 <code>source\css\_partial\article.styl</code> 中，找到四段以 <code>.article-share-***</code> 开头的代码（273行起），添加如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">.article-share-sina</span><br><span class="line">  @extend $article-share-link</span><br><span class="line">  &amp;:before</span><br><span class="line">    content: <span class="string">&quot;\f18a&quot;</span></span><br><span class="line">  &amp;:hover</span><br><span class="line">    background: color-sina</span><br><span class="line">    text-shadow: <span class="number">0</span> 1px darken(color-sina, <span class="number">20</span>%)</span><br><span class="line"></span><br><span class="line">.article-share-qq</span><br><span class="line">  @extend $article-share-link</span><br><span class="line">  &amp;:before</span><br><span class="line">    content: <span class="string">&quot;\f1d6&quot;</span></span><br><span class="line">  &amp;:hover</span><br><span class="line">    background: color-qq</span><br><span class="line">    text-shadow: <span class="number">0</span> 1px darken(color-qq, <span class="number">20</span>%)</span><br><span class="line"></span><br><span class="line">.article-share-renren</span><br><span class="line">  @extend $article-share-link</span><br><span class="line">  &amp;:before</span><br><span class="line">    content: <span class="string">&quot;\f18b&quot;</span></span><br><span class="line">  &amp;:hover</span><br><span class="line">    background: color-renren</span><br><span class="line">    text-shadow: <span class="number">0</span> 1px darken(color-renren, <span class="number">20</span>%)</span><br><span class="line"></span><br><span class="line">.article-share-wechat</span><br><span class="line">  @extend $article-share-link</span><br><span class="line">  &amp;:before</span><br><span class="line">    content: <span class="string">&quot;\f1d7&quot;</span></span><br><span class="line">  &amp;:hover</span><br><span class="line">    background: color-wechat</span><br><span class="line">    text-shadow: <span class="number">0</span> 1px darken(color-wechat, <span class="number">20</span>%)</span><br></pre></td></tr></table></figure><p>最后，找到 <code>source\css\_variables.styl</code> 中 <code>Colors</code> 部分（16行），最后四行分别为社交网站图标的背景色，可根据这些网站的主题色修改。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">color-sina = #ff8140</span><br><span class="line">color-qq = #ffcc33</span><br><span class="line">color-renren = #227dc5</span><br><span class="line">color-wechat = #44b549</span><br></pre></td></tr></table></figure><h2 id="5-安装-RSS-和-sitemap-插件"><a href="#5-安装-RSS-和-sitemap-插件" class="headerlink" title="5. 安装 RSS 和 sitemap 插件"></a>5. <a href="http://starsky.gitcafe.io/2015/05/05/Hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89/">安装 RSS 和 sitemap 插件</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br><span class="line">$ npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>修改 <code>hexo\_config.yml</code> 站点配置，添加：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">Plugins:</span><br><span class="line">  hexo-generator-feed</span><br><span class="line">  hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line"></span><br><span class="line">#sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><p>然后注意再修改<code>_config.yml</code>主题配置：<br><code>menu:</code>里添加网站地图:<code> /sitemap.xml</code><br>下面也添加<code>rss: /atom.xml</code>（如果有就不用添加了）。</p><p>部署后就能看到“首页”那一栏多了个“网站地图”，点击后有内容且第一行为<br><code>This XML file does not appear to have any style information associated with it. The document tree is shown below.</code><br>就说明成功了。<br>RSS 也是一样。</p><h2 id="6-卡片增加阴影"><a href="#6-卡片增加阴影" class="headerlink" title="6. 卡片增加阴影"></a>6. 卡片增加阴影</h2><p><code>source/css/_partial/header.styl</code>第5行添加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-webkit-box-shadow: 2px 4px 5px rgba(<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">0.2</span>)</span><br><span class="line">box-shadow: 2px 4px 5px rgba(<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure><h2 id="7-坑：试图将侧栏放到左面"><a href="#7-坑：试图将侧栏放到左面" class="headerlink" title="7. 坑：试图将侧栏放到左面"></a>7. 坑：试图将侧栏放到左面</h2><p>在<code>config.yml</code>中可以配置 Sidebar 为 left。但如此配置后页面在移动端（窄屏）下会错位，文章卡片跑到屏幕外面了。经文件比对后发现修改了该选项仅使<code>css\style.css</code>中190行处添加了 right 从右向左的布局。该布局虽使文章列与侧栏列交换，但窄屏时因为右对齐所以左边界会超出屏幕。尝试将 index.html 中两栏位置互换，错位问题解决，但窄屏下侧栏在文章上方。</p><p>遂弃坑。</p><h2 id="8-补救：将文章卡片页面宽度缩窄"><a href="#8-补救：将文章卡片页面宽度缩窄" class="headerlink" title="8. 补救：将文章卡片页面宽度缩窄"></a>8. 补救：将文章卡片页面宽度缩窄</h2><p>之所以想将侧栏放到左面是因为屏宽超过1024时若文章换行较多中部会很空。于是可以限制文章页面宽度。<br>在<code>source\css\_variables.styl</code>中将47行<code>main-column</code>的值由默认的9改为8，侧栏宽度由3改为2.5。</p><h2 id="9-代码块修改"><a href="#9-代码块修改" class="headerlink" title="9. 代码块修改"></a>9. <a href="http://blog.sunnyxx.com/2014/03/07/hexo_customize/">代码块修改</a></h2><p><code>source\css\_partial\highlight.styl</code> 17行改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: auto</span><br></pre></td></tr></table></figure><p>使代码块不再左右撑开<br>22行添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 8px</span><br></pre></td></tr></table></figure><p>圆角。</p><h2 id="10-页尾版权信息修改"><a href="#10-页尾版权信息修改" class="headerlink" title="10. 页尾版权信息修改"></a>10. 页尾版权信息修改</h2><p>原生的好丑啊！<br><code>layout\_partial\footer.ejs</code><br>添加一个表格，实现分散对齐。添加了网站地图等链接。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;footer-info&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align:left&quot;</span>&gt;</span></span><br><span class="line">            Copyright <span class="symbol">&amp;copy;</span> 2014-&lt;%= date(new Date(), &#x27;YYYY&#x27;) %&gt; &lt;%= config.author || config.title %&gt; <span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span></span><br><span class="line">            Powered by <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://hexo.io/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Hexo<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            Theme <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/sykiechen/hexo-theme-hic17&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>HiC17<span class="tag">&lt;/<span class="name">a</span>&gt;</span> by Sykie Chen <span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span></span><br><span class="line">            Hosted on <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://gitcafe.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Git Cafe<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align:right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;font-family: FontAwesome;font-size: 20px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://weibo.com/3904642734&quot;</span> <span class="attr">title</span>=<span class="string">&quot;微博&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61834;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.renren.com/287137027&quot;</span> <span class="attr">title</span>=<span class="string">&quot;人人&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61835;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://user.qzone.qq.com/525969441&quot;</span> <span class="attr">title</span>=<span class="string">&quot;QQ空间&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61910;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.facebook.com/sykiechencixi&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Facebook&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#62000;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://twitter.com/HKEY_C17&quot;</span> <span class="attr">title</span>=<span class="string">&quot;twitter&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61593;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.linkedin.com/in/sykiechen&quot;</span> <span class="attr">title</span>=<span class="string">&quot;LinkedIn&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61665;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/sykiechen&quot;</span> <span class="attr">title</span>=<span class="string">&quot;GitHub&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61595;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://plus.google.com/118157846818083514683&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Google+&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61653;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/sitemap.xml&quot;</span>&gt;</span>网站地图<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/atom.xml&quot;</span>&gt;</span>订阅本站<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:i@devchen.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>联系博主<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span></span><br><span class="line">            ICP 备案你妹</span><br><span class="line">          <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此处使用了 Font Awesome 字体中的图标。官网介绍的使用方法是包含一个 css 文件进去。然而 Landscape 主题已经使用过该字体，所以该 css 文件的内容应已包含在 style.css 内。故将 html a 标签的 font 指定为该字体，内容处填写<del>&amp;#<code>UTF编码的十进制值</code>; 可用计算器将官网给出的十六进制 UTF 区位码转换为十进制。</del> &amp;#x<code>UTF十六进制值</code>;。</p><h2 id="11-多说评论框"><a href="#11-多说评论框" class="headerlink" title="11. 多说评论框"></a>11. <a href="http://howiefh.github.io/2014/04/20/hexo-optimize-and-my-theme-landscape-f/">多说评论框</a></h2><p>在<code>layout\_partial\article.ejs</code>中将中部 dis 评论按钮代码替换为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (post.comments)&#123; %&gt;</span><br><span class="line">  &lt;a href=<span class="string">&quot;&lt;%- post.permalink %&gt;#ds-thread&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;ds-thread-count article-comment-link&quot;</span> data-thread-key=<span class="string">&quot;&lt;%- post.path%&gt;&quot;</span>&gt;评论&lt;/a&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>底部评论框替换为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments)&#123; %&gt;</span><br><span class="line">&lt;section id=<span class="string">&quot;comments&quot;</span>&gt;</span><br><span class="line">&lt;!-- 多说评论框 start --&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;ds-thread&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;ds-thread&quot;</span> data-thread-key=<span class="string">&quot;&lt;%= post.path%&gt;&quot;</span> data-title=<span class="string">&quot;&lt;%= post.title %&gt;&quot;</span> data-url=<span class="string">&quot;&lt;%= post.permalink %&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;!-- 多说评论框 end --&gt;</span><br><span class="line">&lt;/section&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p><code>layout\_partial\after-footer.ejs</code>中 dis 评论框 js 替换为从多说获得的代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> duoshuoQuery = &#123;<span class="attr">short_name</span>:<span class="string">&quot;hkeyc17&quot;</span>&#125;;</span></span><br><span class="line"><span class="javascript">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="javascript">ds.type = <span class="string">&#x27;text/javascript&#x27;</span>;ds.async = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">&#x27;https:&#x27;</span> ? <span class="string">&#x27;https:&#x27;</span> : <span class="string">&#x27;http:&#x27;</span>) + <span class="string">&#x27;//static.duoshuo.com/embed.js&#x27;</span>;</span></span><br><span class="line"><span class="javascript">ds.charset = <span class="string">&#x27;UTF-8&#x27;</span>;</span></span><br><span class="line"><span class="javascript">(<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>] </span></span><br><span class="line"><span class="javascript"> || <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>]).appendChild(ds);</span></span><br><span class="line">    &#125;)();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 多说公共JS代码 end --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-侧栏微博框"><a href="#12-侧栏微博框" class="headerlink" title="12. 侧栏微博框"></a>12. <a href="http://kuangqi.me/tricks/add-weibo-show-in-hexo/">侧栏微博框</a></h2><p>登录<a href="http://app.weibo.com/tool/weiboshow">新浪微博开放平台</a>来获取微博秀的代码。然后新建<code>themes/landscape/layout/_widget/weibo.ejs</code>这个文件，将刚刚获取到的代码添加到这个文件中。最后编辑<code>themes/landscape/_config.yml</code>，在<code>widgets:</code>标签后面的适当位置添加<code>- weibo</code>。这样微博秀应该就可以显示在你的博客上了。<br>可以在该文件前后加入条件<br><code>&lt;% if (is_home())&#123; %&gt;</code><br><code>&lt;% &#125; %&gt;</code><br>来限制该挂件仅在主页显示。</p><p>上述方法添加的微博秀没有标题文字，也不像landscape的其他widget那样具有圆角矩形、带内阴影的边框，所以获取微博代码时就要进行一些设置，为了将微博秀“嵌入”到 widget 中，我们要关掉各种边框和标题栏。更重要的是，我们要将微博秀的背景色设置成与主题一致。<br>在ejs前后加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title&quot;</span>&gt;</span>Weibo<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时外框带有一个<code>padding</code>值，使得微博秀显示在其中小了一圈，我们希望将微博秀贴边显示。这个padding值正是由<code>widget</code>这个 class 的 CSS 设定的。<br>所以在第三行的 div 中指定 padding 值覆盖 css 中的设定。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget&quot;</span> <span class="attr">style</span>=<span class="string">&quot;padding: 0px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-侧栏-Archive-组件修改"><a href="#13-侧栏-Archive-组件修改" class="headerlink" title="13. 侧栏 Archive 组件修改"></a>13. 侧栏 Archive 组件修改</h2><p>该组件列出所有有日志的月份索引，但月在前，与国内习惯不同。且当日志较多时可能会很长。故修改日期格式并限制长度。<br>注意，该修改涉及 Hexo 源代码,是插件目录下 helper 中的一部分，而不仅是本主题的代码。<br><code>\node_modules\hexo\lib\plugins\helper\list_archives.js</code><br>23行，日期格式，由<code>MMMM YYYY</code>改为<code>YYYY - MM</code>。</p><p>将70行起的 if 区块代码改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">result += <span class="string">&#x27;&lt;ul class=&quot;&#x27;</span> + className + <span class="string">&#x27;-list&quot;&gt;&#x27;</span>;</span><br><span class="line">len = data.length &lt; <span class="number">10</span> ? data.length : <span class="number">9</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">  item = data[i];</span><br><span class="line"></span><br><span class="line">  result += <span class="string">&#x27;&lt;li class=&quot;&#x27;</span> + className + <span class="string">&#x27;-list-item&quot;&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  result += <span class="string">&#x27;&lt;a class=&quot;&#x27;</span> + className + <span class="string">&#x27;-list-link&quot; href=&quot;&#x27;</span> + link(item) + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br><span class="line">  result += transform ? transform(item.name) : item.name;</span><br><span class="line">  result += <span class="string">&#x27;&lt;/a&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (showCount)&#123;</span><br><span class="line">    result += <span class="string">&#x27;&lt;span class=&quot;&#x27;</span> + className + <span class="string">&#x27;-list-count&quot;&gt;&#x27;</span> + item.count + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  result += <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (data.length &gt; <span class="number">9</span>) result += <span class="string">&#x27;&lt;br&gt;&lt;a href=&quot;&#x27;</span> + self.url_for(archiveDir) + <span class="string">&#x27;&quot;&gt;查看更多...&lt;/a&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">result += <span class="string">&#x27;&lt;/ul&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="14-搜索改为-Tinysou"><a href="#14-搜索改为-Tinysou" class="headerlink" title="14. 搜索改为 Tinysou"></a>14. 搜索改为 <a href="http://tinysou.com/">Tinysou</a></h2><p>先去官网创建个引擎，然后在“爬虫”那把自己的域名添加进去。<br>新建个<code>tinysou.ejs</code>文件，把提供的代码粘贴进去，保存后放到<code>layout\_partial</code>目录下。</p><p><code>layout\_partial\after-footer.ejs</code>,在最后一行加入<code>&lt;%- partial(&#39;tinysou&#39;) %&gt;</code><br>修改搜索框涉及 Helper。<br><code>node_modules\hexo\lib\plugins\helper\search_form.js</code><br>12行起改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&#x27;&lt;form class=&quot;&#x27;</span> + className + <span class="string">&#x27;&quot;&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;&lt;input type=&quot;input&quot; id=&quot;ts-search-input&quot; name=&quot;q&quot; results=&quot;0&quot; class=&quot;&#x27;</span> + className + <span class="string">&#x27;-input&quot;&#x27;</span> + (text ? <span class="string">&#x27; placeholder=&quot;&#x27;</span> + text + <span class="string">&#x27;&quot;&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + <span class="string">&#x27;&gt;&#x27;</span> +</span><br><span class="line">  (button ? <span class="string">&#x27;&lt;button type=&quot;submit&quot; class=&quot;&#x27;</span> + className + <span class="string">&#x27;-submit&quot;&gt;&#x27;</span> + (<span class="keyword">typeof</span> button === <span class="string">&#x27;string&#x27;</span> ? button : text) + <span class="string">&#x27;&lt;/button&gt;&#x27;</span> : <span class="string">&#x27;&#x27;</span>) +</span><br><span class="line">  <span class="string">&#x27;&lt;/form&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="15-头部加入社交入口"><a href="#15-头部加入社交入口" class="headerlink" title="15. 头部加入社交入口"></a>15. 头部加入社交入口</h2><p><code>layout\_partial\header.ejs</code> 22 行加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://weibo.com/3904642734&quot;</span> <span class="attr">title</span>=<span class="string">&quot;微博&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61834;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.renren.com/287137027&quot;</span> <span class="attr">title</span>=<span class="string">&quot;人人&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61835;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://user.qzone.qq.com/525969441&quot;</span> <span class="attr">title</span>=<span class="string">&quot;QQ空间&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61910;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.facebook.com/sykiechencixi&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Facebook&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#62000;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://twitter.com/HKEY_C17&quot;</span> <span class="attr">title</span>=<span class="string">&quot;twitter&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61593;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.linkedin.com/in/sykiechen&quot;</span> <span class="attr">title</span>=<span class="string">&quot;LinkedIn&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61665;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/sykiechen&quot;</span> <span class="attr">title</span>=<span class="string">&quot;GitHub&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61595;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://plus.google.com/118157846818083514683&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Google+&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;#61653;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-关于、友链"><a href="#16-关于、友链" class="headerlink" title="16. 关于、友链"></a>16. <a href="http://howiefh.github.io/2014/04/20/hexo-optimize-and-my-theme-landscape-f/">关于、友链</a></h2><p>添加了<code>links.ejs</code>、<code>about_me.ejs</code>、<code>about_me.styl</code>并在<code>style.styl</code>中添加相关引用。</p><h2 id="17-返回顶部"><a href="#17-返回顶部" class="headerlink" title="17. 返回顶部"></a>17. <a href="http://howiefh.github.io/2014/04/20/hexo-optimize-and-my-theme-landscape-f/">返回顶部</a></h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">modified:   layout<span class="regexp">/_partial/</span>after-footer.ejs</span><br><span class="line">modified:   <span class="keyword">source</span><span class="regexp">/css/</span>_variables.styl</span><br><span class="line">modified:   <span class="keyword">source</span><span class="regexp">/css/</span>style.styl</span><br><span class="line">add layout<span class="regexp">/_partial/</span>bottomBtn.ejs</span><br><span class="line">add <span class="keyword">source</span><span class="regexp">/css/</span>_partial/bottombtn.styl</span><br><span class="line">add <span class="keyword">source</span><span class="regexp">/js/g</span>otop.js</span><br></pre></td></tr></table></figure><h2 id="18-文章目录"><a href="#18-文章目录" class="headerlink" title="18. 文章目录"></a>18. <a href="http://starsky.gitcafe.io/2015/05/06/%E4%B8%BAHexo%E5%8D%9A%E6%96%87%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/">文章目录</a></h2><p><code>layout\_partial\article.ejs</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;% &#125; <span class="keyword">else</span> &#123; %&gt;</span><br><span class="line">    &lt;!-- Table <span class="keyword">of</span> Contents --&gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span> (!index &amp;&amp; post.toc)&#123; %&gt;</span><br><span class="line">        &lt;div id=<span class="string">&quot;toc&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;toc-article&quot;</span>&gt;</span><br><span class="line">            &lt;strong <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;toc-title&quot;</span>&gt;文章目录&lt;/strong&gt;</span><br><span class="line">    &lt;%- toc(post.content) %&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">    &lt;%- post.content %&gt;</span><br></pre></td></tr></table></figure><p><code>source\css\_partial\article.styl</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*toc*/</span></span><br><span class="line"><span class="selector-class">.toc-article</span></span><br><span class="line">  <span class="attribute">background</span> <span class="selector-id">#eee</span></span><br><span class="line">  <span class="attribute">border</span> <span class="number">1px</span> solid <span class="selector-id">#bbb</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">10px</span></span><br><span class="line">  <span class="attribute">margin</span> <span class="number">1.5em</span> <span class="number">0</span> <span class="number">0.3em</span> <span class="number">1.5em</span></span><br><span class="line">  <span class="attribute">padding</span> <span class="number">1.2em</span> <span class="number">1em</span> <span class="number">0</span> <span class="number">1em</span></span><br><span class="line">  <span class="attribute">max-width</span> <span class="number">28%</span></span><br><span class="line"><span class="selector-class">.toc-title</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">120%</span></span><br><span class="line"><span class="selector-id">#toc</span></span><br><span class="line">  <span class="attribute">line-height</span> <span class="number">1em</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">0.9em</span></span><br><span class="line">  <span class="attribute">float</span> <span class="attribute">right</span></span><br><span class="line">  <span class="selector-class">.toc</span></span><br><span class="line">    <span class="attribute">padding</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">margin</span> <span class="number">1em</span></span><br><span class="line">    <span class="attribute">line-height</span> <span class="number">1.8em</span></span><br><span class="line">    <span class="selector-tag">li</span></span><br><span class="line">      <span class="attribute">list-style-type</span> <span class="attribute">none</span></span><br><span class="line">  <span class="selector-class">.toc-child</span> </span><br><span class="line">    <span class="attribute">margin-left</span> <span class="number">1em</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在需要目录的文章 md 中加入参数<code>toc: true</code></p><h2 id="19-将文章时间放在标题下"><a href="#19-将文章时间放在标题下" class="headerlink" title="19. 将文章时间放在标题下"></a>19. 将文章时间放在标题下</h2><p><code>article.ejs</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;article-meta&quot;</span>&gt;</span></span><br><span class="line">  &lt;%- partial(&#x27;post/date&#x27;, &#123;class_name: &#x27;article-date&#x27;, date_format: &#x27;YYYY-M-D ddd  HH:mm&#x27;&#125;) %&gt;</span><br><span class="line">  &lt;%- partial(&#x27;post/category&#x27;) %&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;article-entry&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;articleBody&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>article.styl</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.article-date</span></span><br><span class="line">  <span class="keyword">@extend</span> $block-caption</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="number">15px</span></span><br><span class="line">  <span class="attribute">float</span>: left</span><br><span class="line">  a&amp;:<span class="attribute">hover</span></span><br><span class="line">    <span class="attribute">color</span>: color-link</span><br><span class="line">  &amp;:before</span><br><span class="line">    <span class="attribute">font-family</span>: font-icon</span><br><span class="line">    <span class="attribute">color</span>: #ccc</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\f073&quot;</span></span><br><span class="line"></span><br><span class="line">.article-category</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="number">8px</span></span><br><span class="line">  <span class="attribute">float</span>: left</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1em</span></span><br><span class="line">  <span class="attribute">color</span>: #ccc</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">1px</span> #fff</span><br><span class="line">  &amp;:before</span><br><span class="line">    <span class="attribute">font-family</span>: font-icon</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\f0c6&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.article-date</span></span><br><span class="line">  <span class="keyword">@extend</span> $block-caption</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="number">20px</span></span><br><span class="line">  <span class="attribute">float</span>: left</span><br><span class="line">  a&amp;:<span class="attribute">hover</span></span><br><span class="line">    <span class="attribute">color</span>: color-link</span><br><span class="line">  &amp;:before</span><br><span class="line">    <span class="attribute">font-family</span>: font-icon</span><br><span class="line">    <span class="attribute">color</span>: #ccc</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\f073&quot;</span></span><br><span class="line"></span><br><span class="line">.article-category</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="number">8px</span></span><br><span class="line">  <span class="attribute">float</span>: left</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1em</span></span><br><span class="line">  <span class="attribute">color</span>: #ccc</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">1px</span> #fff</span><br><span class="line">  &amp;:before</span><br><span class="line">    <span class="attribute">font-family</span>: font-icon</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\f0c6&quot;</span></span><br></pre></td></tr></table></figure><h2 id="20-在某些图片上禁用-fancybox"><a href="#20-在某些图片上禁用-fancybox" class="headerlink" title="20. 在某些图片上禁用 fancybox"></a>20. <a href="http://twiceyuan.com/2014/08/12/disable-fancybox/">在某些图片上禁用 fancybox</a></h2><p>有些情况下希望某些图片不使用 fancybox 的弹出效果，如关于页面中的网站小图标，在 hexo 中可以这样实现：</p><p><code>/source/js/script.js</code>,找到：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Caption</span></span><br><span class="line">  $(<span class="string">&#x27;.article-entry&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).find(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> ($(<span class="built_in">this</span>).parent().hasClass(<span class="string">&#x27;fancybox&#x27;</span>)) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> alt = <span class="built_in">this</span>.alt;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (alt) $(<span class="built_in">this</span>).after(<span class="string">&#x27;&lt;span class=&quot;caption&quot;&gt;&#x27;</span> + alt + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">      $(<span class="built_in">this</span>).wrap(<span class="string">&#x27;&lt;a href=&quot;&#x27;</span> + <span class="built_in">this</span>.src + <span class="string">&#x27;&quot; title=&quot;&#x27;</span> + alt + <span class="string">&#x27;&quot; class=&quot;fancybox&quot;&gt;&lt;/a&gt;&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="built_in">this</span>).find(<span class="string">&#x27;.fancybox&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      $(<span class="built_in">this</span>).attr(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;article&#x27;</span> + i);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ($.fancybox)&#123;</span><br><span class="line">    $(<span class="string">&#x27;.fancybox&#x27;</span>).fancybox();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在 <code>if ($(this).parent().hasClass(&#39;fancybox&#39;)) return;</code> 下插入 <code>if ($(this).hasClass(&#39;nofancybox&#39;)) return;</code> 意思为如果遇到 nofancybox 类则跳过，这样在不需要 fancybox 显示 img 标签上的 class 改为 nofancybox 就可以禁用 fancybox 了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>终于造好了轮子= = 整个人都萌了许多<br>bug 在所难免，本项目 GitHub 主页：<br><a href="https://github.com/sykiechen/hexo-theme-hic17">https://github.com/sykiechen/hexo-theme-hic17</a><br>（我知道，没人会去看的=。=）<br>但我还是觉得我萌了好多！</p><p align = right>by Sykie Chen2015.5.23</p>]]></content>
      
      
      <categories>
          
          <category> Hacking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Landscape </tag>
            
            <tag> 主题 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微博小尾巴审核通过啦</title>
      <link href="posts/weibo-tail-passed/"/>
      <url>posts/weibo-tail-passed/</url>
      
        <content type="html"><![CDATA[<p>微博小尾巴的审核通过啦=。=</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/weibo-tail-passed/1.png"><br>以后可以愉快地装X了哈哈哈哈哈</p><p>另外在 GitCafe Pages 上又另弄了个图床，绑在二级域名上，迁移起来应该很方便。<br>摸摸大！我爱这个世界！</p>]]></content>
      
      
      <categories>
          
          <category> Services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微博 </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>東城十七</title>
      <link href="about/index.html"/>
      <url>about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="Illustration-by"><a href="#Illustration-by" class="headerlink" title="Illustration by"></a>Illustration by</h2><ul><li><a href="https://twitter.com/SplatoonJP/status/1260374700519112704">Nintendo</a></li><li><a href="https://twitter.com/Rain_iscream">みちるのーと</a></li><li><a href="https://seiga.nicovideo.jp/seiga/im5767947">ゆう</a></li><li><a href="https://seiga.nicovideo.jp/seiga/im4928873">新島秋一(軟弱者)</a></li><li><a href="https://seiga.nicovideo.jp/seiga/im5608613">結城私心</a></li><li><a href="https://seiga.nicovideo.jp/seiga/im5108993">そらしゃーれ</a></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Categories</title>
      <link href="categories/index.html"/>
      <url>categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>小伙伴</title>
      <link href="link/index.html"/>
      <url>link/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="交换友链"><a href="#交换友链" class="headerlink" title="交换友链"></a>交换友链</h2><p>还没想好写点啥。<br>可以先翻翻文章，如果对口味，想交换链接的话，直接评论就好。<br>不想公开评论的也可以直接<a href="mailto:chen17@coder17.com">发邮件</a>给我啦。<br>如果是别的 SNS 上认识的朋友麻烦说一下，不然我可能对不上号。当然直接在别的平台交流也没问题的。<br>铁子们记得好好维护网站哦~</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Tags</title>
      <link href="tags/index.html"/>
      <url>tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
