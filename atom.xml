<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>码渣十七</title>
  <icon>https://www.coder17.com/images/favicon-32x32.png</icon>
  <subtitle>雑魚ーダーの雑魚メモ</subtitle>
  <link href="https://www.coder17.com/atom.xml" rel="self"/>
  
  <link href="https://www.coder17.com/"/>
  <updated>2018-09-13T15:00:00.000Z</updated>
  <id>https://www.coder17.com/</id>
  
  <author>
    <name>東城十七</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>禁止 Windows 10 更新后自动重启</title>
    <link href="https://www.coder17.com/posts/windows-update-restart/"/>
    <id>https://www.coder17.com/posts/windows-update-restart/</id>
    <published>2018-09-13T15:00:00.000Z</published>
    <updated>2018-09-13T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚上微软又分发更新并且强制重启了，我四台电脑只幸存了一台，其他上面开的虚拟机和工作环境啥的都没了。</p><p>很生气，研究了一下为啥幸存了一台，发现一年前我就给它动过手脚，当时我打着游戏呢就重启了。查阅了一下自己当时的记录，复现了一下，分享给大家。</p><p>设置组策略什么的都不好用，早晚还是要被微软强奸。<br>排查后发现重启是由任务计划中：</p><p><code>\Microsoft\Windows\UpdateOrchestrator</code></p><p>这个任务触发的，查看其上次启动时间就可以看到 Windows 的重启时间：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/5e4ff6f6.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-10-44.png"></p><p>但这个任务是系统用户创建的，我们自己没有权限搞死它。<br>研究一下任务干了什么：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/71dd76f9.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-11-33.png"></p><p>看到是执行了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%systemroot%\system32\MusNotification.exe</span><br></pre></td></tr></table></figure><p>这个程序来重启。进到系统目录下看看这个文件：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/e985485d.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-11-46.png"></p><p>发现其实是一个硬链接。而且这个程序即使删除或修改，在下次更新后也会自动恢复。我们只想禁止自动更新后的重启，并不是不更新。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/e4e15ead.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-44-14.png"></p><p>所以只能用 IFEO 映像劫持了：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/6adb1ad4.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-44-46.png"></p><p>路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options</span><br></pre></td></tr></table></figure><p>新建一个 Key，改名 <code>MusNotification.exe</code>：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/8d4ed555.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-45-24.png"></p><p>在右边新建字符串值，命名 <code>debugger</code>，值 <code>cscript.exe</code>（图中错误）。这个程序不带参数是啥也不会做的。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%A6%81%E6%AD%A2%20Windows%2010%20%E6%9B%B4%E6%96%B0%E5%90%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/37d84338.png" alt="禁止 Windows 10 更新后自动重启_2018-11-22-03-45-53.png"></p><p>重启一下，然后就再也不会重启了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨晚上微软又分发更新并且强制重启了，我四台电脑只幸存了一台，其他上面开的虚拟机和工作环境啥的都没了。&lt;/p&gt;
&lt;p&gt;很生气，研究了一下为啥幸存了一台，发现一年前我就给它动过手脚，当时我打着游戏呢就重启了。查阅了一下自己当时的记录，复现了一下，分享给大家。&lt;/p&gt;
&lt;p&gt;设置</summary>
      
    
    
    
    <category term="Windows" scheme="https://www.coder17.com/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://www.coder17.com/tags/Windows/"/>
    
    <category term="自动更新" scheme="https://www.coder17.com/tags/%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    
    <category term="重启" scheme="https://www.coder17.com/tags/%E9%87%8D%E5%90%AF/"/>
    
  </entry>
  
  <entry>
    <title>Switch 游戏加速透明代理的改进部署</title>
    <link href="https://www.coder17.com/posts/trans-proxy-splatton2-mod/"/>
    <id>https://www.coder17.com/posts/trans-proxy-splatton2-mod/</id>
    <published>2018-08-11T15:00:00.000Z</published>
    <updated>2018-08-11T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>上篇文章（<a href="/posts/trans-proxy-splatoon2/">搭建透明代理加速 Splatoon2 游戏手记</a>）中，关于部署方式我提到，由于无线网卡的不兼容，开虚拟机的宿主机必须以有线方式接入路由设备。</p><p>我当时选择的是把宿主机笔记本直接放在客厅路由器旁边当服务器用。现在看来这种操作太粗鲁了。因此这里介绍一种更优雅的部署方式。</p><h2 id="1-电力猫"><a href="#1-电力猫" class="headerlink" title="1. 电力猫"></a>1. 电力猫</h2><p>首先我把电脑搬回了卧室，然后试图使用电力猫来有线连接到客厅的路由器。<br>我以前使用的是下面这个腾达的千兆电力猫：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/25a45432.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-15-21.png"></p><p>这玩意儿是一对，一个用网线插到路由器上，再插到路由器旁边的插座里。另一个在电脑旁边找个插座，用网线连上电脑就行了。利用电力线传输数据。</p><p>我之前刚安装的时候，它速度很快，测速在 400Mbps 以上，考虑到衰减和干扰这个速度是可以接受的。</p><p>但过了一段时间之后它的速度下降的很厉害，最高只有 50Mbps 上下，还不到我宽带的出口速度，已经开始拖慢我的网速了。原因可能是房间供电线路老化之类的吧。我懒得追究了，当时就购入了外置无线网卡解决速度问题。电力猫闲置下来后就送给家里信号不好的同事了。</p><p>鉴于上次的经历不是很愉快，这次我又换了个牌子，重新买了一对水星的千兆电力猫：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/901ea349.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-15-36.png"></p><p>结果还是一样，刚插上去好好的，速度很快。不一会儿速度就掉了下来，并且大量丢包，玩游戏很难受。</p><p>那没办法了，还是得考虑有线方案。</p><h2 id="2-增加辅助路由"><a href="#2-增加辅助路由" class="headerlink" title="2. 增加辅助路由"></a>2. 增加辅助路由</h2><p>说是有线，其实只要保证 VirtualBox 给虚拟机桥接的那个网卡是有线网卡就行了。上公网不一定非要走有线。</p><p>事到如今，我也没法坚持不加新设备了。最优雅的方式其实还是用 OpenWRT 系统的路由器重新部署一套，一次部署到处使用。但我懒得重新刷 OpenWRT 的系统，想只用一个普通路由解决问题。</p><p>所以我又找了个小路由器，把宿主机有线插入 LAN，并把有线网卡桥接到虚拟机，虚拟机另外添加一张 NAT 网卡用于共享主机的网络连接。其他需要透明代理的设备直接无线接入小路由器。</p><p>拓扑图大概是下面这个样子。宿主机双网卡，无线接主路由，有线接辅助路由。虚拟机双网卡，一张 NAT 上公网，一张桥接辅助路由当透明代理网关。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/c5c0fb24.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-15-57.png"></p><p>此时因为宿主机和虚拟机都双网卡了，需要设置一下路由表。</p><p>Windows 的路由表比较奇怪，我起初是通过增加有线网卡的跃点数 metric ，试图降低有线网卡（接辅助路由，无公网访问）的优先级，但修改后可以连通外网，DNS 却始终优先使用有线网卡获得的 192.168.2.2 的 DNS 地址，无法解析。我试图手动改路由表，折腾半天也没让它优先走无线网卡的 DNS。但直接 ping 公网 IP 地址确实是通的。</p><p>后来换了个思路，降低无线网卡的跃点数。如图，设置成1之后就 OK 了，Windows 的 DNS 策略真的很谜。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/e969ae75.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-13.png"></p><p>设置好之后路由表如下，都是系统自动生成的。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/0e0a74c6.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-22.png"></p><p>实际上宿主机实际上是三网卡的，两个无线一个有线。起初我尝试用另外一张无线网卡作为 AP 模式发射热点，取代辅助路由的功能，后来发现在 Windows 上配置这个太麻烦了就放弃了。</p><p>然后要设置一下虚拟机的 Ubuntu 系统的路由表。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/b1670d1f.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-35.png"></p><p>可以看到虚拟机有两块网卡，enp0s3 是 NAT 连接到主机的网卡，IP 设成自动获取就可以。</p><p>enp0s8 是桥接了有线网卡，接入辅助路由的。手动指定其 IP 地址为 192.168.2.2。</p><p>此时路由表的主出口不一定是 NAT 那个网卡，导致公网不通。我们删掉默认的出口路由，手动指定出口为 enp0s3 即可。命令如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/4ba28f3d.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-48.png"></p><p>需要使用 sudo 执行。执行过后虚拟机的路由表如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/7469a5d0.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-16-55.png"></p><p>很简洁，此时我们可以正常上公网了。</p><p>之后把 Switch 接入辅助路由的无线网，手动设置网关为 192.168.2.2，MTU 稍微改小到 1390。参照上篇文章的内容，Switch 应该已经通过代理上网了。测速结果非常可观，没有瓶颈。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/Switch%20%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E7%9A%84%E6%94%B9%E8%BF%9B%E9%83%A8%E7%BD%B2/f94f5add.png" alt="Switch%20游戏加速透明代理的改进部署_2018-11-26-13-17-04.png"></p><p>好了，很开心。进行收尾工作，把手动设置路由的两句话加到 linux 的自启动里，尝试重启主机和虚拟机几次，都可以自动初始化完成。</p><p>非常优雅。收工。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上篇文章（&lt;a href=&quot;/posts/trans-proxy-splatoon2/&quot;&gt;搭建透明代理加速 Splatoon2 游戏手记&lt;/a&gt;）中，关于部署方式我提到，由于无线网卡的不兼容，开虚拟机的宿主机必须以有线方式接入路由设备。&lt;/p&gt;
&lt;p&gt;我当时选择的是把宿主机</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="透明代理" scheme="https://www.coder17.com/tags/%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/"/>
    
    <category term="Splatoon2" scheme="https://www.coder17.com/tags/Splatoon2/"/>
    
    <category term="加速" scheme="https://www.coder17.com/tags/%E5%8A%A0%E9%80%9F/"/>
    
    <category term="Shadowsocks" scheme="https://www.coder17.com/tags/Shadowsocks/"/>
    
    <category term="改进" scheme="https://www.coder17.com/tags/%E6%94%B9%E8%BF%9B/"/>
    
  </entry>
  
  <entry>
    <title>搭建透明代理加速 Splatoon2 游戏手记</title>
    <link href="https://www.coder17.com/posts/trans-proxy-splatoon2/"/>
    <id>https://www.coder17.com/posts/trans-proxy-splatoon2/</id>
    <published>2018-08-01T15:00:00.000Z</published>
    <updated>2018-08-01T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>上周末，朋友终于带着 Switch 来我家玩耍了。好，棒，很开心。</p><p>我发的胖友圈是这样的：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/1a110660.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-20-31.png"></p><p>看起来很开心的样子，然而实际上是这样的：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/090745e2.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-20-41.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/2143eb7f.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-20-48.png"></p><p>以前一直还可以的联通宽带突然爆炸，怎么都连不上老任的服务器。挨着的两个机器甚至无法在好友列表里看到彼此的在线状态。</p><p>我天真地以为过几天网就会好起来吧。但周末结束了，我还是连不上 Splatoon。</p><p>我不管，我要玩乌贼暖暖。</p><h2 id="1-原理与方案选择"><a href="#1-原理与方案选择" class="headerlink" title="1. 原理与方案选择"></a>1. 原理与方案选择</h2><p>加速游戏无非是包转发，之前在 windows 电脑部署的普通 ss 客户端只能转发 http 包。设置其为代理后只能进大厅，无法用 udp 协议与其他玩家通信。</p><p>因此需要部署一个能代理 udp 包的东西。</p><p>当然，最简单的办法还是买现成的加速器，比如X易的UU，但是很贵，一个月三十。想了想九月份开始任天堂也要收联网服务费了，还是放弃了购买加速器。</p><p>自食其力的话，首先想到的是全局微屁恩，但是这东西一来部署起来非常麻烦，二来协议特征太明显，用不了两天就会被安排。</p><p>有一个 SS-Tap 号称能把 ss 转成全局的，但我试过之后并不能分享给局域网设备。</p><p>那么还是找我们的老朋友小飞机吧，ss-libev 分支有一个 ss-redir 的工具，是专用来做透明代理的，可以一战。</p><h2 id="2-软硬环境"><a href="#2-软硬环境" class="headerlink" title="2. 软硬环境"></a>2. 软硬环境</h2><p>硬件上我不想使用路由器刷 op 之类的智能系统的方式，一来刷系统很烦，二来需要多加一个设备。</p><p>我当前有一台 7*24 开机的大笔记本（以下称为S），平时做 NAS 服务器使用。那么可以在这个机器上开一个虚拟机装 ubuntu，使用桥接模式接入现有的网络，再作为网关，在 switch 上手动指定即可。</p><p>ubuntu 使用了 16.04，32 位，内存随便划了 512M。</p><h2 id="3-部署"><a href="#3-部署" class="headerlink" title="3. 部署"></a>3. 部署</h2><p>服务端的部署就不废话了，懒得自己搭买一个也可以的，但注意要加 -u 支持 udp 转发。</p><p>客户端在我们刚才的虚拟机里（以下称为A）。装好系统之后，打开 sshd，在本机上使用 ssh 连到虚拟机A。</p><p>首先要打开系统的转发模式开关。sudo vim /etc/sysctl.conf ，去掉 net.ipv4.ip_forward=1 的注释。然后 sudo sysctl -p 立即生效。</p><p>此时设置局域网内随便一个终端的网关为这个虚拟机的 IP，DNS 可以指定为 114.114.114.114，测试一下应该可以联网。出口 IP 依旧是你本地的出口。我这里使用了另外一台虚拟机（以下称为B）。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/fab63459.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-21-15.png"></p><p>参考官方文档，在虚拟机A上编译最新版 ss-libev。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --no-install-recommends build-essential autoconf libtool libssl-dev gawk debhelper dh-systemd init-system-helpers pkg-config asciidoc xmlto apg libpcre3-dev zlib1g-dev libev-dev libudns-dev libsodium-dev libmbedtls-dev libc-ares-dev automake</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/shadowsocks/shadowsocks-libev.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> shadowsocks-libev</span><br><span class="line"></span><br><span class="line">git submodule update --init</span><br><span class="line"></span><br><span class="line">./autogen.sh &amp;&amp; ./configure &amp;&amp; make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>其实如果用 ubuntu 16.10 以上系统的话是不用自己编译的，软件源里有二进制包可以直接下载。但为了确保版本最新，还是推荐编译。</p><p>安装好之后，自己写一个 json 把服务器信息写进去。会用小飞机的都知道我也不废话了。</p><p>然后启动 ss-redir，监听的本地端口以 1080 为例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ss-redir -c /etc/s.json -u -v</span><br></pre></td></tr></table></figure><p><code>-u</code> 是支持 udp 转发的开关，这个前面说过，也需要服务端支持。</p><p><code>-v</code> 是废话模式的开关，可以输出很多 info 级的日志便于调试。</p><p>打开后应该如图所示，开始监听 1080 端口了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/680feb28.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-22-30.png"></p><p>此时还没有设置转发，在网内其他终端测试出口依旧是本地联通的 IP。</p><p>然后编辑 iptables 实现转发。其中 tcp 包通过 redirect 直接重定向到 1080 端口即可。但 udp 包由于是无状态连接，系统无法通过连接跟踪找到它本来的目的地，因此不能直接重定向，需要借助 tproxy 实现。</p><blockquote><p>首先我们来了解一下 iptables 的 REDIRECT 重定向的意义，REDIRECT 其实就是 DNAT 目的地址转换，只不过它的目的地址为 127.0.0.1，因此给它取了个形象的名字 - 重定向；DNAT 其实是很粗暴的，就是修改数据包的目的 IP 和目的 Port；那么在 ss-redir 中，它是怎么获取数据包原来的目的 IP 和目的 Port 的呢（就像发快递，你总得知道这个快件要发往哪吧，不然你收到来有什么用）？答案是，借助 Linux 的连接跟踪机制。</p><p>什么是连接跟踪？顾名思义，就是跟踪并记录网络连接的状态。Linux 会为每个经过网络堆栈的数据包都生成一个新的连接记录项，此后，所有属于此连接的数据包都会被唯一分配给这个连接，并标识连接的状态。因此，做了 NAT（网络地址转换）的数据包在内核中都是有记录的。而 ss-redir 只要使用 netfilter 提供的 API 即可从连接记录项中获取数据包原本的目的地址和目的端口，来进行代理。</p><p>但是，上面这种情况只针对 TCP；对于 UDP，如果你做了 DNAT，就无法再获取数据包的原目的地址和目的端口了，具体的技术细节我不清楚，我们只需要知道 UDP 透明代理没有这么简单。</p><p>那么该怎么透明代理 UDP 呢？利用 TPROXY 技术。TPROXY 是在 Kernel 2.6.28 引进的全新透明代理技术，TPROXY 完全不同于传统的 DNAT 方式。TPROXY 实现的透明代理有以下特点：</p><ul><li><p>不对 IP 报文做改动（不做 DNAT）；</p></li><li><p>应用层可用非本机 IP 与其它主机建立 TCP/UDP 连接；</p></li><li><p>Kernel 通过 iptables-tproxy 和策略路由将非本机流量送到 socket 层；</p></li><li><p>仍需要通过其它技术拦截做代理的流量到代理服务器（WCCP 或 PBR 策略路由）。</p></li></ul></blockquote><p>以上摘自： <a href="https://paper.tuisec.win/detail/da1a980ab61ce92">https://paper.tuisec.win/detail/da1a980ab61ce92</a></p><p>那么对 iptables 执行以下改动（先使用 sudo -i 进入 root 权限 bash）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SS-REDIR TCP</span></span><br><span class="line"></span><br><span class="line">iptables -t nat -N SSREDIR_TCP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bypass ssserver and LAN</span></span><br><span class="line"></span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d ===server ip=== -j RETURN</span><br><span class="line"></span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 0.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t nat -A SSREDIR_TCP -d 240.0.0.0/4 -j RETURN</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redirect TCP</span></span><br><span class="line"></span><br><span class="line">iptables -t nat -A SSREDIR_TCP -p tcp -j REDIRECT --to-ports 1080</span><br><span class="line"></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp -j SSREDIR_TCP</span><br><span class="line"></span><br><span class="line"><span class="comment"># SS_REDIR UDP</span></span><br><span class="line"></span><br><span class="line">ip rule add fwmark 0x02/0x02 table 100</span><br><span class="line">ip route add <span class="built_in">local</span> 0.0.0.0/0 dev lo table 100</span><br><span class="line">iptables -t mangle -N SSREDIR_UDP</span><br><span class="line"></span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d ===server ip=== -j RETURN</span><br><span class="line"></span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 0.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -d 240.0.0.0/4 -j RETURN</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redirect UDP</span></span><br><span class="line"></span><br><span class="line">iptables -t mangle -A SSREDIR_UDP -p udp -j TPROXY --on-port 1080 --tproxy-mark 0x02/0x02</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable</span></span><br><span class="line"></span><br><span class="line">iptables -t mangle -A PREROUTING -j SSREDIR_UDP</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中的 <code>===server ip===</code> 是你服务器的 IP。</p><p>简单说就是先新建了一个链，把目的地是你服务器地址和其他一些内网地址的包放过去，剩下的全部 tcp 包都转到本地 1080 端口上。然后把这个链加到 PREROUTING 链上，转掉所有入站的 tcp 包。</p><p>然后又新建了一个表，规定表里所有的数据包打上一个标记（0x02/0x02，我随便写的值，也可以使用其他值），再新建一个链，同样放过一些特殊地址的包之后，把剩下的 udp 包全部搞进这个表带上标记。再把所有带标记的包转到本地 1080 端口。最后把这个链也挂到PREROUTING 链上，使之生效。</p><p>上面两段话用词不太准确，只是说个意思方便理解。</p><p>那么加完转发之后，我们的透明代理理论上已经开始工作了。</p><p>在虚拟机B里测测看，出口已经变成服务器地址了。在浏览器里开几个页面也都正常显示。此时可以更改 DNS 为 8.8.8.8 了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/0688bae0.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-26-09.png"></p><p>好，爽。</p><h2 id="4-坑：桥接无线网卡"><a href="#4-坑：桥接无线网卡" class="headerlink" title="4. 坑：桥接无线网卡"></a>4. 坑：桥接无线网卡</h2><p>高兴的太早了。我上面是在虚拟机里测的。等我把手机和另外一台物理电脑也设置成透明代理做网关之后，却时断时续地打不开网页。甚至我取消 iptables 里面的转发设置时，也不能显示我本地的 IP 出口。</p><p>提示的错误也很奇怪，一会儿是 DNS 无法解析，一会儿是无法连接。做网关的虚拟机A里面的日志也是时断时续。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/42067b08.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-20.png"></p><p>查了半天，毫无头绪，把前面的步骤试了又试也没有变化。</p><p>哎，脑壳疼。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/92d8c4eb.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-32.png"></p><p>但注意到一个问题，那就是我测试的时候，在同一台大电脑上开的另一个虚拟机下测就没问题，用局域网内其他的设备测就时断时续。</p><p>在这卡了三天之后，怀疑的目光落在了网卡上。宿主机S因为自带的网卡过于老迈，不支持 5G WiFi，为了保证连接速度我使用了一块水星的 USB 外置网卡。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/389f4ec1.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-41.png"></p><p>谷歌了一顿之后发现有不少人声称他们的无线网卡无法在 VirtualBox 等虚拟机软件里设置为桥接模式。原因是无线网卡通常不支持混杂模式，无法接收非主机 IP 地址的包。</p><p>但我这个能桥接啊，真的是它的问题么？</p><p>我尝试把虚拟机 A 和 B 桥接的网卡都改回了笔记本自带的 Intel 网卡。这次是真的不能桥接了，完全无法联网，在路由器后台也看不见两个虚拟机。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/3594aac8.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-40-54.png"></p><p>那看来网卡的嫌疑真的很大，那我们试试有线连接吧。</p><p>我之前的电力猫送人了，但路由器在客厅，想要物理接入的话只能把宿主机笔记本S抱过去。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/9193b80c.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-04.png"></p><p>然后桥接有线网卡，再试，破案了，网内所有终端都能正常联网了。</p><p>这个坑最坑的地方在于，无线网卡对混杂模式支持的不完整，虽然能正常桥接联网，但却无法转发所有的入站包，使问题难以定位。</p><h2 id="5-坑：MTU"><a href="#5-坑：MTU" class="headerlink" title="5. 坑：MTU"></a>5. 坑：MTU</h2><p>终于填好了坑，我们可以愉快地填下一个坑了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/d19c73a7.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-28.png"></p><p>把 switch 也接入到网关下之后，发现能正常登录、进房间，但无法和其他用户连接。</p><p>显然是 udp 的哪里出了问题吧。但看日志也挺正常的啊，所有的请求都有回应。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/28a82285.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-40.png"></p><p>这时我注意到，在使用 curl 请求某个地址的时候，总是先发出两个 udp 包，等待五秒后，又发出两个 udp 包，才解析成功。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/b24336d1.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-41-51.png"></p><p>但直接 nslookup 的时候又能立即返回结果。</p><p>这个现象十分诡异，我到现在也不能解释。</p><p>客户端没有发现问题，那么看看服务端吧。由于之前测试一直用的是购买的服务，看不到日志。所以我又临时开了一台 vps，搭了个服务端来看日志。</p><p>诡异的是使用自己搭的服务端就没有这个问题了，秒查秒回。</p><p>只能理解成大概购买的服务开了某种多重发包的插件吧。</p><p>但问题依然没有解决。</p><p>尝试开了一局游戏，发现在匹配对手的过程中，客户端快速滚过的日志可以看出游戏在反复试图与其他玩家的 ip 发 udp 包试图连接。但服务端的日志滚动速度明显低于客户端。</p><p>怀疑丢包了。</p><p>丢包最大的可能性是 udp 包在传输路径上被 ISP 给丢弃了。udp 包优先级不高，如果 QoS 策略比较激进那么丢包的概率很高。</p><p>但我用 nc 测了测 udp，发现并没有丢包。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/47be85fe.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-03.png"></p><p>陷入沉思，在网上随便搜索的时候，看到这么一个帖子：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/6a9275db.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-14.png"></p><p>啥玩意儿？MTU 超了居然不拆分而是直接丢包？难怪我用 nc 发小包测的时候不丢。</p><p>联想到之前在 github 上看 madeye 大神回的 issue 里也提到过建议一个 xbox 连不上的哥们试试改 MTU 小一点，我就死马当活马医地在 switch 里把 MTU 从 1400 改成了 1390.。</p><p>然后我特么就进！游！戏！了！</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/dd221766.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-24.png"></p><p>看着屏幕上翻滚的日志我是真的想拥抱大海。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F%20Splatoon2%20%E6%B8%B8%E6%88%8F%E6%89%8B%E8%AE%B0/427aefa6.png" alt="搭建透明代理加速 Splatoon2 游戏手记_2018-11-26-13-42-36.png"></p><p>（然后我输了，对面的马桶是真的不知到该怎么打掉</p><h2 id="6-总结优化"><a href="#6-总结优化" class="headerlink" title="6. 总结优化"></a>6. 总结优化</h2><p>这次一共遇到两个迷惑性较大的坑，一个是无线网卡的混杂模式，因为一直以来工作得很好，我并没有第一时间怀疑它。</p><p>另一个是 MTU 的问题，正常讲数据包大于 MTU 时会被拆分，但 ss-libev 作了丢包的操作不知道是出于什么考虑，可能是消除协议特征？</p><p>最后那个 curl 会 DNS 查两次的问题依然没有头绪。不过后来将服务端拆掉换回买的服务之后依然可以正常连接，说明这个问题并没有实际影响，暂且不管吧。</p><p>至于方案的优化，后期把写 iptables 和开 ss-redir 服务的命令写到 rc.local 里开机启动即可。注意 rc.local 加载时系统的环境变量不完整，启动 ss-redir 需要指定其完整路径，可以使用 which ss-dir 或者 whereis ss-dir 命令查看。</p><p>作为网关的虚拟机A也可以调小内存，大概 256M 也可以正常工作的。</p><p>宿主机S决定就让它呆在路由器旁边了，一个服务器是不需要放在卧室里的。回头把外接的硬盘盒和 UPS 也搬过去。</p><p>坑就这么多，谢谢观赏。</p><p>参考资料：</p><p><a href="http://ezlost.tk/2018/02/24/ss-redir/">http://ezlost.tk/2018/02/24/ss-redir/</a></p><p><a href="https://blog.csdn.net/lvshaorong/article/details/52909055">https://blog.csdn.net/lvshaorong/article/details/52909055</a></p><p><a href="https://blog.csdn.net/lvshaorong/article/details/53203674">https://blog.csdn.net/lvshaorong/article/details/53203674</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-libev/issues/1883">https://github.com/shadowsocks/shadowsocks-libev/issues/1883</a></p><p><a href="https://cn.aliyun.com/jiaocheng/148168.html">https://cn.aliyun.com/jiaocheng/148168.html</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-libev/issues/1566">https://github.com/shadowsocks/shadowsocks-libev/issues/1566</a></p><p><a href="https://lixingcong.github.io/2018/06/11/ss-redir-ipset/">https://lixingcong.github.io/2018/06/11/ss-redir-ipset/</a></p><p><a href="https://usodesu.ga/2018-04-26/OpenWrt-Transparent-Proxy-with-ss-redir/">https://usodesu.ga/2018-04-26/OpenWrt-Transparent-Proxy-with-ss-redir/</a></p><p><a href="https://doub.io/ss-jc34/">https://doub.io/ss-jc34/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上周末，朋友终于带着 Switch 来我家玩耍了。好，棒，很开心。&lt;/p&gt;
&lt;p&gt;我发的胖友圈是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/images/loading.gif&quot; data-lazy-src=&quot;/blogimg/%E6%90%AD%E5%BB%BA%E9</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="透明代理" scheme="https://www.coder17.com/tags/%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/"/>
    
    <category term="Splatoon2" scheme="https://www.coder17.com/tags/Splatoon2/"/>
    
    <category term="加速" scheme="https://www.coder17.com/tags/%E5%8A%A0%E9%80%9F/"/>
    
    <category term="Shadowsocks" scheme="https://www.coder17.com/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>系统从大硬盘无损迁移到小硬盘的方法备忘</title>
    <link href="https://www.coder17.com/posts/hdd-move-system/"/>
    <id>https://www.coder17.com/posts/hdd-move-system/</id>
    <published>2018-05-09T15:00:00.000Z</published>
    <updated>2018-05-09T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>（好久没写东西，博客也一直没时间迁移，实在是很丢人，谢谢大家还没取关。）</p><p>一般来讲迁移硬盘数据都是小硬盘到大硬盘，很多硬盘对拷软件也只支持源盘小于目标盘的数据迁移。有的支持从大到小迁移的软件也是按文件复制。对于一些隐藏分区或者特殊格式的分区来说，这种复制方式可能丢失数据。我研究了半天摸索了以下方法，作个备忘与参考。</p><p>思路是：<br>新建一个 vhdx 虚拟硬盘→大盘拷进虚拟盘→虚拟盘缩容→虚拟盘拷进小硬盘</p><p>关键节点在于虚拟盘缩容，这样可以保证每一步对拷都是逻辑上的小盘到大盘。注意大盘上的实际数据量不能超过小盘容量。</p><p>这个思路很绕，我暂时没有想出更好的方式。如果有更好的思路或者工具请一定不吝赐教。</p><h2 id="1-新建虚拟盘"><a href="#1-新建虚拟盘" class="headerlink" title="1 新建虚拟盘"></a>1 新建虚拟盘</h2><p>这个很简单，Windows 的磁盘管理就可以。注意新建 vhdx 格式的，否则后面缩容的时候还要花时间转换。虚拟盘最大容量要大于大盘一点，选择动态容量即可。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/0.gif" alt="image-0"></p><h2 id="2-大盘拷进虚拟盘"><a href="#2-大盘拷进虚拟盘" class="headerlink" title="2 大盘拷进虚拟盘"></a>2 大盘拷进虚拟盘</h2><p>在 Windows 的磁盘管理里先把虚拟盘挂载上，一般新建之后会自动挂载。盘符分不分都行。然后随便找个硬盘对拷软件，比如 DiskGenius，把大盘对拷到虚拟盘上。对拷的时候不要选择创建新的硬盘 ID。这一步就不放图了，时间会比较久。</p><h2 id="3-虚拟盘缩容"><a href="#3-虚拟盘缩容" class="headerlink" title="3 虚拟盘缩容"></a>3 虚拟盘缩容</h2><h3 id="3-1-分区调整"><a href="#3-1-分区调整" class="headerlink" title="3.1 分区调整"></a>3.1 分区调整</h3><p>在分区软件里把虚拟盘里的数据分区调整到一起，压缩数据分区到刚好够用，把多出来的空间设置为未分配，使未分配空间全在盘的最后。注意必须保证前面的数据区总容量不超过小盘容量。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181211292.png" alt="image-20210421181211292"></p><h3 id="3-2-虚拟盘容量调整"><a href="#3-2-虚拟盘容量调整" class="headerlink" title="3.2 虚拟盘容量调整"></a>3.2 虚拟盘容量调整</h3><p>首先你要装有 Hyper-V 工具，没有的话到控制面板→添加删除程序→添加删除 Windows 组件里面，把 Hyper-V 相关的都勾上。装好之后要重启。注意，装了 Hyper-V 之后你的 VirtualBox 之类的虚拟机就不能用了，如果要用的话待会儿再卸掉 Hyper-V。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181347514.png" alt="image-20210421181347514"></p><p>装好之后用管理员权限打开 Powershell。在开始菜单输入 Powershell 然后按 Ctrl + Shift + Enter 就是管理员权限。</p><p>执行 ：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Resize-VHD</span> <span class="literal">-Path</span> <span class="string">&quot;E:\sysbk.vhdx&quot;</span> <span class="literal">-ToMinimumSize</span></span><br></pre></td></tr></table></figure><p>注意把 vhdx 的路径换掉。应该很快就完事儿了，然后执行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-VHD</span> <span class="literal">-Path</span> <span class="string">&quot;E:\sysbk.vhdx&quot;</span></span><br></pre></td></tr></table></figure><p>就可以看到虚拟盘容量已经减小到和实际数据量差不多了。这个时候虚拟盘的容量应该是小于目标小盘的容量的，否则后面会失败。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181459770.png" alt="image-20210421181459770"></p><h2 id="4-虚拟盘拷进小硬盘"><a href="#4-虚拟盘拷进小硬盘" class="headerlink" title="4 虚拟盘拷进小硬盘"></a>4 虚拟盘拷进小硬盘</h2><p>很简单的，在磁盘管理里面把缩小之后的 vhdx 挂上，然后在分区软件里对拷到小硬盘上就可以了。</p><p>但是！</p><p>我在这一步遇到了各种疑难杂症。</p><p>首先我的目标盘是一个 nvme 盘，没法通过 USB 挂到其他电脑上对拷，所以只能在本机上从U盘启动 PE 对拷。但这个 PE 是似乎不能挂载 vhd 的，挂载的选项是灰色。</p><p>所幸 DiskGenius 里是可以直接挂虚拟硬盘文件的。然而似乎对 vhdx 兼容性不好，挂载之后始终显示整个盘都是未分配。</p><p>vhd 转 vhdx 是单向的，不能从 vhdx 转为 vhd。我只能新建了一个比缩容后的 vhdx 大一丁点的 vhd，然后在正常的系统内通过磁盘管理挂载了 vhdx，再在  DiskGenius 里从 vhdx 到 vhd 又对拷了一遍。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181543316.png" alt="image-20210421181543316"></p><p>真的需要很长很长的时间，长到等它对拷完成之后我已经快忘了这件事了。<br>然后我就有了一个缩容之后的 vhd 文件。重新启动 PE 之后发现，</p><p>发现这 PE 又能在磁盘管理里挂载 vhd 了！</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E7%B3%BB%E7%BB%9F%E4%BB%8E%E5%A4%A7%E7%A1%AC%E7%9B%98%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E5%B0%8F%E7%A1%AC%E7%9B%98%E7%9A%84%E6%96%B9%E6%B3%95%E5%A4%87%E5%BF%98/image-20210421181617712.png" alt="image-20210421181617712"></p><p>好气啊。按照常规操作再来一遍，挂载 vhd，对拷。</p><p>拷完之后，由于我们之前把虚拟硬盘的容量设置成小于小硬盘的实际容量了，所以小硬盘尾部会出现未分配空间。根据需要把这部分空间合并到前面的分区中。</p><p>这样就保留了分区结构和分区表等等的同时，从大盘到小盘完成了系统迁移。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;（好久没写东西，博客也一直没时间迁移，实在是很丢人，谢谢大家还没取关。）&lt;/p&gt;
&lt;p&gt;一般来讲迁移硬盘数据都是小硬盘到大硬盘，很多硬盘对拷软件也只支持源盘小于目标盘的数据迁移。有的支持从大到小迁移的软件也是按文件复制。对于一些隐藏分区或者特殊格式的分区来说，这种复制方式可</summary>
      
    
    
    
    <category term="Windows" scheme="https://www.coder17.com/categories/Windows/"/>
    
    
    <category term="硬盘" scheme="https://www.coder17.com/tags/%E7%A1%AC%E7%9B%98/"/>
    
    <category term="无损迁移" scheme="https://www.coder17.com/tags/%E6%97%A0%E6%8D%9F%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>联通宽带更新后登陆指南</title>
    <link href="https://www.coder17.com/posts/bjunicom-201/"/>
    <id>https://www.coder17.com/posts/bjunicom-201/</id>
    <published>2017-08-25T15:00:00.000Z</published>
    <updated>2017-08-25T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>北京联通的校园201宽带一直限制登陆数。以前我们使用用户名添加 @wo201 ，密码添加 /001 字符的方式直接路由器拨号。但七月中旬一次更新之后该方法失效，加密方式改变。</p><p>最近不少人回学校了问我怎么拨号，写个教程比较方便。</p><p><strong>先介绍一下新的 pppoe 加密方式</strong></p><p>参考了 <a href="https://fanzheng.org/archives/17#7">FanZheng’s blog</a> ：</p><p>只是想知道怎么上网的可以跳过这段。</p><blockquote><ul><li>真实账号=账号+<code>@wo201</code>（这个跟原来的没有变化）</li><li>真实密码=动态pin码+密码</li></ul><p>而这个动态pin码，是访问<a href="http://114.247.41.50:9343/aaa/get/pin?user=%E8%B4%A6%E5%8F%B7%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E8%BF%94%E5%9B%9E%E7%9A%84json%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84pin%E5%AD%97%E6%AE%B5%E3%80%82%E5%AE%83%E6%98%AF%E4%B8%AA6%E4%BD%8D%E6%95%B0%E5%AD%97%EF%BC%8C%E5%A4%A7%E7%BA%A610%E7%A7%92%E4%BC%9A%E6%9B%B4%E6%96%B0%E4%B8%80%E6%AC%A1%E3%80%82">http://114.247.41.50:9343/aaa/get/pin?user=账号这个地址返回的json数据中的pin字段。它是个6位数字，大约10秒会更新一次。</a></p><p>也就是说，在这种加密方式下，想要使用PPPoE拨号，就得在10秒内完成获取pin码、填写密码和进行拨号的步骤，对于路由器来说，还是有点麻烦的。最关键的是每次拨号都要改一下密码，因此操作频率就取决于路由器是否断电以及联通设置的一次拨号的最长连接时间了。</p></blockquote><p>那个返回动态验证码的页面，传入的账号即使是随机数字也能返回，说明是服务器端的一个算法动态生成的。</p><p><strong>再介绍一下现在可行的拨号方式</strong></p><ol><li><p>如果想继续使用路由器自动 pppoe 拨号，需要刷了 op 等智能系统的路由器，写脚本获取动态密码。技术上没有难度，过程上比较繁琐。此处略过。</p></li><li><p>如果想使用官方推荐的方式拨号，即拨号后只能本机上网。可以将路由器 DHCP 关掉，LAN 口插猫，当作交换机使用，并在电脑上下载新的官方客户端直接拨号。</p></li><li><p><strong>如果想继续分享使用宽带，但不会方法1</strong>，使用原来的网页入口登录即可。这也是我比较推荐的简易方法。</p></li></ol><p>首先将路由器获取地址方式改为动态 IP，关闭路由器拨号，打开 DHCP，路由器 WAN 口接猫。</p><p>然后使用手机连接路由器，随便打开一个网页，弹出如图界面。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%81%94%E9%80%9A%E5%AE%BD%E5%B8%A6%E6%9B%B4%E6%96%B0%E5%90%8E%E7%99%BB%E9%99%86%E6%8C%87%E5%8D%97/image-20210421180235517.png" alt="image-20210421180235517"></p><p>输入你的宽带用户名密码登录。登录后路由器下其他设备也可上网。断网后需重新登录。</p><p>如果没有手机，使用 Chrome 浏览器，按 F12 打开开发者模式。按图中按钮打开移动端模拟。然后随便打开一个网页，会弹出和上图相同的手机登录页，照前操作即可。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%81%94%E9%80%9A%E5%AE%BD%E5%B8%A6%E6%9B%B4%E6%96%B0%E5%90%8E%E7%99%BB%E9%99%86%E6%8C%87%E5%8D%97/image-20210421180303582.png" alt="image-20210421180303582"></p><p>如果想自动拨号，使用 curl 或者用 python 等语言模拟网页登录发包即可。包的内容很简单，使用 Fiddler 抓包即可查看，也可以用 Chrome 开发者模式直接抓包。会写的都会抓，我就不废话了。</p><p>最后，垄断校园宽带限制终端数的运营商都去吔屎啦。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E8%81%94%E9%80%9A%E5%AE%BD%E5%B8%A6%E6%9B%B4%E6%96%B0%E5%90%8E%E7%99%BB%E9%99%86%E6%8C%87%E5%8D%97/image-20210421180604118.png" alt="image-20210421180604118"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;北京联通的校园201宽带一直限制登陆数。以前我们使用用户名添加 @wo201 ，密码添加 /001 字符的方式直接路由器拨号。但七月中旬一次更新之后该方法失效，加密方式改变。&lt;/p&gt;
&lt;p&gt;最近不少人回学校了问我怎么拨号，写个教程比较方便。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="北京工业大学" scheme="https://www.coder17.com/tags/%E5%8C%97%E4%BA%AC%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6/"/>
    
    <category term="北工大" scheme="https://www.coder17.com/tags/%E5%8C%97%E5%B7%A5%E5%A4%A7/"/>
    
    <category term="联通" scheme="https://www.coder17.com/tags/%E8%81%94%E9%80%9A/"/>
    
    <category term="201" scheme="https://www.coder17.com/tags/201/"/>
    
  </entry>
  
  <entry>
    <title>北工大野生助手</title>
    <link href="https://www.coder17.com/posts/20170112-bjut-helper/"/>
    <id>https://www.coder17.com/posts/20170112-bjut-helper/</id>
    <published>2017-01-12T05:10:46.000Z</published>
    <updated>2017-01-12T05:10:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>北工大查分野生助手（野生工大助手）。是<a href="http://www.wangyufeng.org/">王雨峰童鞋</a>带头写的一个工大查分小助手。后来申请了星火基金，现在由我和雨峰共同维护。具体说明还在写，先写更新日志。 </p><p>昨晚更新之后很多童鞋说加权和绩点都变了。是这样的，我们更新了绩点的算法，根据教务处的文件，绩点的计算也是要按学分加权的。而加权平均分的部分之前因为学校的数据格式不统一，导致了部分人的新生研讨课也被算进了加权。更新之后能识别出这部分新生研讨课，所以新的加权分就不包含研讨了，导致一部分同学的加权变化。</p><p>昨天访问量达到了 18392，谢谢大家！</p><p>以后也请大家多多支持啦！</p><p>项目地址：<a href="https://github.com/wangyufeng0615/bjuthelper">https://github.com/wangyufeng0615/bjuthelper</a><br>主页：<a href="http://chafen.bjut123.com/">http://chafen.bjut123.com</a><br>内测版：<a href="http://bjut.devchen.cn/">http://bjut.devchen.cn</a>  </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/image-20210421025448423.png" alt="image-20210421025448423"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/image-20210421025456521.png" alt="image-20210421025456521"></p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><h3 id="2017-1-12"><a href="#2017-1-12" class="headerlink" title="2017.1.12"></a>2017.1.12</h3><ul><li>添加了更新日志。 </li><li>微调了总科目数的提示文字，避免歧义。 </li><li>修正了未通过科目数计算错误。</li><li>修正了中文成绩（等级）导致的科目计算错误。</li><li>增加了可折叠的通过/未通过成绩统计。</li></ul><h3 id="2017-1-11"><a href="#2017-1-11" class="headerlink" title="2017.1.11"></a>2017.1.11</h3><ul><li>修正了由新生研讨课的中文课程成绩和数据格式不统一导致的计算 bug。（可能会导致部分人加权分数变化）</li><li>修正了错误的绩点计算方式，已经更正为平均学分绩点（加权），参考 <a href="http://undergrad.bjut.edu.cn/WebInfo.aspx?Id=752">教务处文件</a>。</li><li>更改了页面编码为 UTF-8。（但教务那边的辣鸡还是 GB2312 我们也没什么办法）</li></ul><h3 id="2017-1-3"><a href="#2017-1-3" class="headerlink" title="2017.1.3"></a>2017.1.3</h3><ul><li>移除了文件式 cookie，加快了响应和服务器负载。</li><li>添加了免验证码。</li></ul><h3 id="2016-12-6"><a href="#2016-12-6" class="headerlink" title="2016.12.6"></a>2016.12.6</h3><ul><li>添加了说明信息和 ICP 备案号</li></ul><h3 id="2016-12-3"><a href="#2016-12-3" class="headerlink" title="2016.12.3"></a>2016.12.3</h3><ul><li>修正了部分验证码错位的问题</li></ul><h3 id="2016-11-28"><a href="#2016-11-28" class="headerlink" title="2016.11.28"></a>2016.11.28</h3><ul><li>微调了代码架构，加强了微信浏览器的兼容性。</li></ul><h3 id="2016-7-23"><a href="#2016-7-23" class="headerlink" title="2016.7.23"></a>2016.7.23</h3><ul><li>增加了代码说明和项目说明，配了图。</li></ul><h3 id="2016-7-16"><a href="#2016-7-16" class="headerlink" title="2016.7.16"></a>2016.7.16</h3><ul><li>首次上传</li></ul><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>来，扫码吧！<br>王雨峰的公众号：七系<br><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/1.png"><br>十七的空指针：<br><img src= "/images/loading.gif" data-lazy-src="/blogimg/20170112-bjut-helper/2.png"></p><p align = right>by Sykie Chen & Alan Wang2017.1.12</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;北工大查分野生助手（野生工大助手）。是&lt;a href=&quot;http://www.wangyufeng.org/&quot;&gt;王雨峰童鞋&lt;/a&gt;带头写的一个工大查分小助手。后来申请了星火基金，现在由我和雨峰共同维护。具体说明还在写，先写更新日志。 &lt;/p&gt;
&lt;p&gt;昨晚更新之后很多童鞋说加</summary>
      
    
    
    
    <category term="Services" scheme="https://www.coder17.com/categories/Services/"/>
    
    
    <category term="北京工业大学" scheme="https://www.coder17.com/tags/%E5%8C%97%E4%BA%AC%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6/"/>
    
    <category term="北工大" scheme="https://www.coder17.com/tags/%E5%8C%97%E5%B7%A5%E5%A4%A7/"/>
    
    <category term="查分" scheme="https://www.coder17.com/tags/%E6%9F%A5%E5%88%86/"/>
    
    <category term="爬虫" scheme="https://www.coder17.com/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="PHP" scheme="https://www.coder17.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>BJUT 抢课器</title>
    <link href="https://www.coder17.com/posts/bjut-course-rusher/"/>
    <id>https://www.coder17.com/posts/bjut-course-rusher/</id>
    <published>2016-12-22T15:00:00.000Z</published>
    <updated>2017-06-07T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>- 为什么别人都能抢到课，我抢不到？<br>- 那别人买彩票还中奖呢。</p><p>更新了一下，现在支持生僻字姓名了。<br>智障 Windows cmd 万年 GBK 编码，我也很为难啊。</p><p>反正我今年不缺课啦</p><hr><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><ol><li>本程序并没有什么卵用，只能捡漏，不要觉得是我把你的课抢走了。 </li><li>本程序随时可能报错卡死退出，可能导致您的电脑起火爆炸，请务必不要在无人看管时使用本程序。 </li><li>本程序导致的一切后果，作者都不承担。 </li></ol><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>修复了姓名中含有 GBK 以外字符时崩溃的问题。<br>重构了所有代码，现在本程序对用户友好了一些。<br>未在高并发期间测试过，不保证服务器不正常时的运行结果。<br>高峰期间如果无法登录，尝试修改重试次数与 base_url ，使用 IP 地址替代域名可以规避 DNS 解析失败风险。 </p><h3 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h3><ol><li>在 userinfo.py 中填入学号密码 </li><li>在 course.py 中填入要选的课全名，和它在搜索结果中的位置序号，用于定位重名课程。 </li></ol><h3 id="风险："><a href="#风险：" class="headerlink" title="风险："></a>风险：</h3><ol><li>概率很低的情况下，如果重名课程的排序发生变化，会选错。 </li><li>存在完全选错课的可能性。请在退课截止前停止程序并检查是否选了不需要的课。 </li></ol><p>适用于正方教务系统<br>暴力抢课，不讲道理。<br>具体修改方式见代码注释。   </p><p><del>本程序对用户不友好，使用前需要先改代码。</del></p><p>吔屎啦正方！ </p><p><a href="https://github.com/toshichi/BJUT-Course-Rusher">https://github.com/toshichi/BJUT-Course-Rusher</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;- 为什么别人都能抢到课，我抢不到？&lt;br&gt;- 那别人买彩票还中奖呢。&lt;/p&gt;
&lt;p&gt;更新了一下，现在支持生僻字姓名了。&lt;br&gt;智障 Windows cmd 万年 GBK 编码，我也很为难啊。&lt;/p&gt;
&lt;p&gt;反正我今年不缺课啦&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;警告&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="北京工业大学" scheme="https://www.coder17.com/tags/%E5%8C%97%E4%BA%AC%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6/"/>
    
    <category term="北工大" scheme="https://www.coder17.com/tags/%E5%8C%97%E5%B7%A5%E5%A4%A7/"/>
    
    <category term="抢课" scheme="https://www.coder17.com/tags/%E6%8A%A2%E8%AF%BE/"/>
    
    <category term="Python" scheme="https://www.coder17.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>配置 Shadowsocks 服务时 iptables 中的一处坑</title>
    <link href="https://www.coder17.com/posts/ss-iptables/"/>
    <id>https://www.coder17.com/posts/ss-iptables/</id>
    <published>2016-12-22T15:00:00.000Z</published>
    <updated>2016-12-22T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天把 ss 服务器从 ConoHa 迁移到 Linode 的东京2节点，丢包情况有所改善。</p><p>迁移后为了安全我重新配置了防火墙，只允许需要的端口通过。但在配置 ss 梯子服务时遇到了坑。在放行 ss 端口的情况下，ss 的手机客户端发生无法解析地址的情况，关掉防火墙则服务恢复正常，电脑端也一切正常。</p><p>iptables 配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">-A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -j ACCEPT</span><br><span class="line">-A OUTPUT -p icmp -j ACCEPT</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A OUTPUT -o lo -j ACCEPT</span><br><span class="line"></span><br><span class="line"># DNS</span><br><span class="line">-A OUTPUT -p udp --dport 53 -j ACCEPT</span><br><span class="line">-A INPUT -p udp --sport 53 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># SSH is 23333</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 22,23333 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --sports 22,23333 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># http client</span><br><span class="line">-A INPUT -p tcp -m multiport --sports 80,443 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --dports 80,443 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># http server</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --sports 80,443 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># shadowxxx</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 6666,7777 -j ACCEPT</span><br><span class="line">-A INPUT -p udp -m multiport --dports 6666,7777 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp -m multiport --sports 6666,7777 -j ACCEPT</span><br><span class="line">-A OUTPUT -p udp -m multiport --sports 6666,7777 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># kcptun</span><br><span class="line">-A INPUT -p udp --dport 6677 -j ACCEPT</span><br><span class="line">-A OUTPUT -p udp --sport 6677 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp --dport 6677 -j ACCEPT</span><br><span class="line">-A OUTPUT -p tcp --sport 6677 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># drop</span><br><span class="line">-P INPUT DROP</span><br><span class="line">-P OUTPUT DROP</span><br><span class="line">-P FORWARD ACCEPT</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><p>我百思不得其解，分析了各种可能性，最后只能开启日志找问题。</p><p>修改 /etc/rsyslog.conf ，添加一行：</p><p><code>kern.*   /var/log/iptables.log</code></p><p>将内核日志重定向到 iptables.log 方便查看。</p><p>在 iptables 文件中最后的 drop 前添加了 -A OUTPUT -j LOG，把所有被 drop 的数据包记录下来。</p><p>然后用 <code>tailf /var/log/iptables.log</code> 滚动输出日志。</p><p>日志输出如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%20Shadowsocks%20%20%E6%9C%8D%E5%8A%A1%E6%97%B6%20iptables%20%E4%B8%AD%E7%9A%84%E4%B8%80%E5%A4%84%E5%9D%91/image-20210421175608972.png" alt="image-20210421175608972"></p><p>可以看到有大量的53端口 DNS 查询被丢弃，但我已经在 iptables 中放行了 dns 查询啊？为什么呢？？？</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E9%85%8D%E7%BD%AE%20Shadowsocks%20%20%E6%9C%8D%E5%8A%A1%E6%97%B6%20iptables%20%E4%B8%AD%E7%9A%84%E4%B8%80%E5%A4%84%E5%9D%91/image-20210421175636741.png" alt="image-20210421175636741"></p><p>瞪了屏幕两分钟后发现这些查询都是 tcp 协议的，而我只放行了 udp 的 DNS包。</p><p>普通的 DNS 都是 udp 传输的，而手机端的 ss 似乎默认使用了 tcp 方式的 DNS 查询，导致数据包被丢弃。</p><p>在 iptables 中允许53端口 tcp 包后问题解决。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前几天把 ss 服务器从 ConoHa 迁移到 Linode 的东京2节点，丢包情况有所改善。&lt;/p&gt;
&lt;p&gt;迁移后为了安全我重新配置了防火墙，只允许需要的端口通过。但在配置 ss 梯子服务时遇到了坑。在放行 ss 端口的情况下，ss 的手机客户端发生无法解析地址的情况，关</summary>
      
    
    
    
    <category term="Services" scheme="https://www.coder17.com/categories/Services/"/>
    
    
    <category term="Linux" scheme="https://www.coder17.com/tags/Linux/"/>
    
    <category term="科学上网" scheme="https://www.coder17.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    <category term="Shadowsocks" scheme="https://www.coder17.com/tags/Shadowsocks/"/>
    
    <category term="iptables" scheme="https://www.coder17.com/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>Resilio 私有云的文件同步方案</title>
    <link href="https://www.coder17.com/posts/20161217-resilio/"/>
    <id>https://www.coder17.com/posts/20161217-resilio/</id>
    <published>2016-12-17T04:44:53.000Z</published>
    <updated>2016-12-17T04:44:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>国内的云服务该倒的都倒了，剩的也都是一些残废。加上最近买了一个小笔记本随身带着，多设备间工作文件的实时同步变得非常重要。<br>尝试了 Dropbox 、 Google Drive 、 付费坚果云等多种云服务之后，我最终选择了 Resilio （原 BTSync ）来搭私有云。</p><h2 id="1-最初的尝试"><a href="#1-最初的尝试" class="headerlink" title="1. 最初的尝试"></a>1. 最初的尝试</h2><p>Resilio 是基于 P2P 的文件同步服务，它把文件分散存储在参与同步的节点上，在同一子网下甚至可以通过 LAN 高速同步。类似 BT 下载的 DHT 网络保证即使客户机没有公网地址也能打洞。<br>起初我只在我的主电脑（几乎不关机）和随身的小电脑上部署了 Resilio ，但主电脑使用的山寨百兆宽带十分不稳定，小电脑在同样不稳定的网络下（对我说的就是你， BJUT 校园网）几乎无法连接主电脑上的节点，即使侥幸连上，速度也只有幽默的十几K。没办法，只能放弃。</p><h2 id="2-为什么放弃坚果云"><a href="#2-为什么放弃坚果云" class="headerlink" title="2. 为什么放弃坚果云"></a>2. 为什么放弃坚果云</h2><p>然后我开始尝试各种商用云服务。国外的各类云服务虽然成熟，但速度全都非常感人。最后在各方安利之下换了坚果云。但坚果云的收费方案非常有意思，按流量收费。免费用户每月最多上传 1G，下载 3G。我数了数我需要保持同步的文件，大概有 8G 左右，精简过后也有 2.5G ，也就是说初始的同步要两个月之后才能完成。<br>那好吧。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-05-16.jpg"></p><p>付了费之后，空间方案是 30G 初始，每月 +1G， 不限流量。 我开开心心地把 2.5G 传上去了。传完之后我看到了这个：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-10-33.jpg"></p><p><a href="http://help.jianguoyun.com/?p=1582">http://help.jianguoyun.com/?p=1582</a></p><p>还有这个：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-11-43.jpg"></p><p><a href="http://help.jianguoyun.com/?p=1366">http://help.jianguoyun.com/?p=1366</a></p><p>我擦，我真是九脸蒙蔽。下个月我断供就不能用了？想用至少续费三个月？而且假如我过了几个月又有大量数据要传，还得先补上上次付费和这次付费之间断供的时间？</p><p>一个月 30，还是有点贵的，数据还被掐在人家手里，不值得。<br>你可以说我付不起钱穷之类的，我只是觉得不值得。有30块我干嘛不给我的 VPS 升一下级？</p><h2 id="3-重新部署-Resilio"><a href="#3-重新部署-Resilio" class="headerlink" title="3. 重新部署 Resilio"></a>3. 重新部署 Resilio</h2><p>坚果云还剩27天，但我已经不想用了。我又重新研究了一下 Resilio ，觉得我可以在我的 VPS 上部署一个 Resilio 作为同步节点。在外网时，小电脑可以通过稳定的 VPS 保持同步。和大电脑在同一内网下时，又可以通过 LAN 快速完成。我的 VPS 是 ConoHa 东京节点，国内访问除了电信有时候丢包厉害点，速度还 OK。<br>Resilio 支持加密分享，也就是说部署在 VPS 上节点的文件可以是加密过的，在 VPS 端无法读取。<br>而且如果有条件，可以部署多个 VPS 节点，比如在阿里云或者腾讯云上部署一个，加快国内访问速度。节点之间可以保持同步。<br>我的服务器系统是 Cent OS，安装 Resilio 只需要导入 yum 源，再导入公钥即可。参考<a href="https://help.getsync.com/hc/en-us/articles/206178924">官方文档</a>。<br>新建<code>/etc/yum.repos.d/resilio-sync.repo</code><br>内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[resilio-sync]</span><br><span class="line">name=Resilio Sync <span class="variable">$basearch</span></span><br><span class="line">baseurl=http://linux-packages.resilio.com/resilio-sync/rpm/<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><p>然后添加公钥：<br><code>rpm --import https://linux-packages.resilio.com/resilio-sync/key.asc</code><br>再用 yum 安装：<br><code>yum install resilio-sync</code></p><p>安好后准备一下同步目录和配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/sync</span><br><span class="line">chmod -R 755 /home/sync</span><br><span class="line">cd /home/sync</span><br><span class="line">rslsync --dump-sample-config &gt; rslsync.conf</span><br></pre></td></tr></table></figure><p>编辑配置文件，编辑一下你的机器名、端口号、用户名密码之类的。文件里的说明很详细。我就不多说了。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-51-10.jpg"></p><p>然后载入配置文件<br><code>rslsync --config /home/sync/rslsync.conf</code><br>并把这条命令加到 rc.local 开机启动，保证每次都能加载这个配置。<br>配置一下防火墙之后，就可以通过 ip:9999 来访问了。<br>登进去之后就跟本地客户端一样啦。在本机的 Resilio 添加同步文件夹，类型选择加密。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-14-57-41.jpg"></p><p>会出现三种密钥。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-15-00-01.jpg"></p><p>在 VPS 的 resilio 中添加第三个加密密钥，在小电脑的 resilio 中添加读写密钥。<br>这样，大小电脑上的修改都会同步到对方以及 VPS，但 VPS 端文件的变化不会同步到本地机器，保证数据安全。两台电脑上文件同步时，VPS 可以作为加速节点。而且 VPS 端的文件全部是加密过的，如图。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-15-02-16.jpg"></p><p>这样即使放到国内的主机上也可以放心数据安全。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20161217-resilio/2016-12-17-15-03-34.jpg"></p><p>在节点列表中可以看到另一台电脑和服务器。<br>如果购买 Pro 授权，还可以选择性同步。未同步的文件会显示为 0KB 占位符，当双击调用或者手动同步时才主动下载。Resilio 的同步是差分增量的，文件会被分割，只同步变化的区块。<br>购买了 Pro 授权之后可以把两台电脑关联为同一账户，添加的文件夹会自动同步到两台机器上，不用在小电脑上手动添加读写密钥。但注意不要在云端使用同一账户，否则不会加密。<br>这个 Pro 授权国内99块人民币，终身授权。比坚果云不知高到哪里去了。<br>氪！</p><p>参考了：<br><a href="http://maokwen.tk/2016/10/14/build-a-private-cloud-on-vps.html">http://maokwen.tk/2016/10/14/build-a-private-cloud-on-vps.html</a><br><a href="https://www.freehao123.com/pcloud/">https://www.freehao123.com/pcloud/</a><br><a href="http://www.dongcoder.com/detail-176844.html">http://www.dongcoder.com/detail-176844.html</a></p><p align = right>by Sykie Chen2016.12.17</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;国内的云服务该倒的都倒了，剩的也都是一些残废。加上最近买了一个小笔记本随身带着，多设备间工作文件的实时同步变得非常重要。&lt;br&gt;尝试了 Dropbox 、 Google Drive 、 付费坚果云等多种云服务之后，我最终选择了 Resilio （原 BTSync ）来搭私有</summary>
      
    
    
    
    <category term="Services" scheme="https://www.coder17.com/categories/Services/"/>
    
    
    <category term="Resilio" scheme="https://www.coder17.com/tags/Resilio/"/>
    
    <category term="私有云" scheme="https://www.coder17.com/tags/%E7%A7%81%E6%9C%89%E4%BA%91/"/>
    
    <category term="同步" scheme="https://www.coder17.com/tags/%E5%90%8C%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>北工大校园网主机保持公网在线</title>
    <link href="https://www.coder17.com/posts/bjut-online/"/>
    <id>https://www.coder17.com/posts/bjut-online/</id>
    <published>2016-09-23T15:00:00.000Z</published>
    <updated>2016-09-23T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E6%A0%A1%E5%9B%AD%E7%BD%91%E4%B8%BB%E6%9C%BA%E4%BF%9D%E6%8C%81%E5%85%AC%E7%BD%91%E5%9C%A8%E7%BA%BF/image-20210421174248252.png" alt="image-20210421174248252"></p><p>由于各种各样的原因，总有的时候希望自己的主机在校园网里长期在线保持公网连接，以提供一些服务。但一方面校园网的 web 认证对 *nix 命令行很不友好。虽然在之前的文章里我提到过使用 curl 的方式从命令行登录。但如果闲置半小时左右没有数据包发出，连接会被自动踢掉。</p><p>另一方面还有可能发生流量用光了扣钱，钱扣完了被踢掉等情况，导致我们的内网主机不能稳定在线。也无法通过 ngrok 等内网穿透技术实现公网访问。</p><p>因此我搞了一个小程序，它可以每分钟检测一次登陆情况，如果未登陆外网则会从预定的账号列表中挑选可用账号自动登录。如果已经登录则会检测已使用流量是否超限，并自动更换下一个可用的账号。</p><p>如果不幸列表中的账号流量均超限了，还可以设置一个保底账号，无视流量限制而保持在线，虽然代价是可能扣很多钱。</p><p>每个月月初流量重置时，会自动重置账号列表。</p><p>还附带了 linux 和 windows 下的自启动脚本，直接放进 rc.local 或者 Windows StartUp 里就可以了。</p><p>内网挂服务的同学可以放心地挂机了。</p><p>Github 主页： <a href="https://github.com/SykieChen/BJUT_Always_Online">https://github.com/SykieChen/BJUT_Always_Online</a></p><p>很惭愧，就做了一点微小的工作，谢谢大家。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src= &quot;/images/loading.gif&quot; data-lazy-src=&quot;/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E6%A0%A1%E5%9B%AD%E7%BD%91%E4%B8%BB%E6%9C%BA%E4%BF%9D</summary>
      
    
    
    
    <category term="Services" scheme="https://www.coder17.com/categories/Services/"/>
    
    
    <category term="北京工业大学" scheme="https://www.coder17.com/tags/%E5%8C%97%E4%BA%AC%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6/"/>
    
    <category term="北工大" scheme="https://www.coder17.com/tags/%E5%8C%97%E5%B7%A5%E5%A4%A7/"/>
    
    <category term="Python" scheme="https://www.coder17.com/tags/Python/"/>
    
    <category term="网关" scheme="https://www.coder17.com/tags/%E7%BD%91%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>GitHub readme 中许可证图标的添加</title>
    <link href="https://www.coder17.com/posts/github-icons/"/>
    <id>https://www.coder17.com/posts/github-icons/</id>
    <published>2016-07-07T15:00:00.000Z</published>
    <updated>2016-07-07T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>逛 GitHub 的时候经常能看到别人的 readme.md 里有各种许可协议的图标：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/GitHub%20readme%20%E4%B8%AD%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%9B%BE%E6%A0%87%E7%9A%84%E6%B7%BB%E5%8A%A0/image-20210421033206571.png" alt="image-20210421033206571"></p><p>许可协议是什么我就不说了，这里讲一下这种统一格式的图标怎么获取。</p><p>查看相应的代码发现大部分图标都来自</p><p><a href="http://shields.io/">http://shields.io/</a></p><p>这个网站。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/GitHub%20readme%20%E4%B8%AD%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%9B%BE%E6%A0%87%E7%9A%84%E6%B7%BB%E5%8A%A0/image-20210421033240948.png" alt="image-20210421033240948"></p><p>棒棒哒，不过这个主页上的索引是不全的，许可证只能看到 MIT 一种。</p><p>所幸 GitHub 上有一个统计了该站大部分许可证图标链接地址的项目：</p><p><a href="https://gist.github.com/lukas-h/2a5d00690736b4c3a7ba">https://gist.github.com/lukas-h/2a5d00690736b4c3a7ba</a></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/GitHub%20readme%20%E4%B8%AD%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%9B%BE%E6%A0%87%E7%9A%84%E6%B7%BB%E5%8A%A0/image-20210421033308280.png" alt="image-20210421033308280"></p><p>好了，要啥有啥，Markdown 格式都是现成的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;逛 GitHub 的时候经常能看到别人的 readme.md 里有各种许可协议的图标：&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/images/loading.gif&quot; data-lazy-src=&quot;/blogimg/GitHub%20readme%20%E4%B8%AD%E8</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="GitHub" scheme="https://www.coder17.com/tags/GitHub/"/>
    
    <category term="图标" scheme="https://www.coder17.com/tags/%E5%9B%BE%E6%A0%87/"/>
    
  </entry>
  
  <entry>
    <title>北工大网关的命令行登录</title>
    <link href="https://www.coder17.com/posts/bjut-login/"/>
    <id>https://www.coder17.com/posts/bjut-login/</id>
    <published>2016-06-30T15:00:00.000Z</published>
    <updated>2016-06-30T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E7%BD%91%E5%85%B3%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%99%BB%E5%BD%95/image-20210421032909822.png" alt="image-20210421032909822"></p><p>今天在内网装了个 Linux 机器，CentOS 6.8，没装图形界面，也没有命令行浏览器。因为校园网是需要在 web 页面登录网关后才能访问外网，但连不上外网就不能用 yum 装浏览器。</p><p>所以如果不用麻烦的本地安装，这就是一个先有鸡先有蛋的死循环。</p><p>然而。</p><p>我们使用 curl 直接模拟登录的 post 请求就好咯。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">&quot;DDDDD=UserName&amp;upass=Password&amp;v46s=1&amp;0MKKey=&quot;</span> <span class="string">&quot;http://lgn.bjut.edu.cn/&quot;</span></span><br></pre></td></tr></table></figure><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E7%BD%91%E5%85%B3%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%99%BB%E5%BD%95/image-20210421032831766.png" alt="image-20210421032831766"></p><p>返回的页面标题是“登陆成功窗”就 OK 啦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src= &quot;/images/loading.gif&quot; data-lazy-src=&quot;/blogimg/%E5%8C%97%E5%B7%A5%E5%A4%A7%E7%BD%91%E5%85%B3%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="北京工业大学" scheme="https://www.coder17.com/tags/%E5%8C%97%E4%BA%AC%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6/"/>
    
    <category term="北工大" scheme="https://www.coder17.com/tags/%E5%8C%97%E5%B7%A5%E5%A4%A7/"/>
    
    <category term="网关" scheme="https://www.coder17.com/tags/%E7%BD%91%E5%85%B3/"/>
    
    <category term="命令行" scheme="https://www.coder17.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>把微博找狗游戏刷到溢出</title>
    <link href="https://www.coder17.com/posts/20160416-weibo-doge/"/>
    <id>https://www.coder17.com/posts/20160416-weibo-doge/</id>
    <published>2016-04-16T12:10:00.000Z</published>
    <updated>2016-04-16T12:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在微博上看到一个找狗的<a href="http://m.weibo.cn/client/game?sinainternalbrowser=topnav">小游戏</a>： </p><p>简单地说就是在一堆表情里找出 doge 的表情，限时一分钟。<br>作为一个<del>程序猿</del>手贱人，我第一反应就是要去刷掉这个榜单。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/1.png"></p><p>首先想到用按键精灵的自动搜图去自动点击，于是迅速写了个简单的脚本： </p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FindPic <span class="number">0</span>,<span class="number">0</span>,<span class="number">1600</span>,<span class="number">1000</span>,<span class="string">&quot;Attachment:\doge.bmp&quot;</span>,<span class="number">0.5</span>,intX,intY</span><br><span class="line"><span class="keyword">If</span> intX &gt; <span class="number">0</span> <span class="keyword">And</span> intY &gt; <span class="number">0</span> <span class="keyword">Then</span> </span><br><span class="line">    MoveTo intX + <span class="number">15</span>, intY + <span class="number">15</span></span><br><span class="line">    LeftClick <span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/2.png"> </p><p>执行之后刷出了161分： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/3.png"> </p><p>由于按键精灵的解析速度有限，161分基本是一分钟内能刷出的上限了，难以搞一个更大的新闻出来。于是就想到了直接修改代码。<br>这里有两条路可走，一是修改游戏代码本身，以类似于游戏修改器的思路改成绩，或者干脆延长总时间。再一个就是伪造游戏结束时向服务器发的比分数据，直接改成绩。<br>根据经验判断后者应该更方便，于是开 Fiddler 抓包： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/4.png"> </p><p>发现在时间剩余十秒时会向服务器请求当前前20名的用户列表，是一个 json，地址是 <a href="http://m.weibo.cn/client/game/getTopUser">http://m.weibo.cn/client/game/getTopUser</a> ： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/5.png"> </p><p>图里的前两名都是我刷出来的，不要在意。<br>注意当一局游戏结束的时候，如果不点击分享到微博，分数是不会上传到服务器的，榜单里也不会更新你。单击分享后会自动生成一条微博，并随机艾特三个人。微博为了推广真是够恶心的。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/6.png"> </p><p>抓分享的包，发现请求中有两个值，score 和 st： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/7.png"> </p><p>score 无疑是本场分数了，st 根据我的多次抓包判断，是标记当前用户 id 的值。所以我们修改的重点在 score 上。<br>这个 score 加密过，看长度不是 md5，尝试了常见的加密方式均不能解密。重复试验几次也没有发现规律： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/8.png"> </p><p>陷入僵局，决定先分析页面源码。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/10.png"> </p><p>在页面中的 JavaScript 发现了大新闻，加密函数是写在里面的： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/9.png"> </p><p>这就好办了，直接把整个 a 这个类抠出来，新建个 js 放进去在本地执行就好。可以算出想要的任意值。<br>先算个 65535 练练手。65535 的密文是 d0510f276a65373d。在 Fiddler 里直接修改刚才那个请求，发送后返回成功： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/11.png"> </p><p>此时自动发了一条新的微博，说我得了65535分。<br>那试一下自己的手机号吧，貌似不会溢出。也成功了，图在上面就有。<br>唔，那再搞个大新闻，试试 10^101 ? </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/12.png"> </p><p>好好好，榜单首位妥妥的是我的了，我已经吊到溢出边框了： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/13.png"> </p><p>这个时候注意到一个问题，那条微博当时就刷出来了，但榜单隔了差不多两三分钟才刷出来我那个超大的值，怀疑服务器那边卡住了。那就作个死，看看能不能搞死服务器？我们知道 JS 里有个 Infinity 的值表示无穷大，这里把无穷大带进去算，得到 b30f73e94186ee62。发送请求提示成功，但刷不出微博，刷新榜单也出不来，看来是被过滤掉了。<br>好了本次作死成功完成~<br>特别感谢<a href="http://jobslong.com/">小文老板</a>用 node.js 环境跑出了加密部分的 js~ </p><p>榜单地址： <a href="http://m.weibo.cn/client/game/getTopUser">http://m.weibo.cn/client/game/getTopUser</a><br>游戏地址： <a href="http://m.weibo.cn/client/game?sinainternalbrowser=topnav">http://m.weibo.cn/client/game?sinainternalbrowser=topnav</a> </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160416-weibo-doge/14.png"> </p><p>摸摸大 </p><hr><p align = right>by Sykie Chen2016.4.16</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天在微博上看到一个找狗的&lt;a href=&quot;http://m.weibo.cn/client/game?sinainternalbrowser=topnav&quot;&gt;小游戏&lt;/a&gt;： &lt;/p&gt;
&lt;p&gt;简单地说就是在一堆表情里找出 doge 的表情，限时一分钟。&lt;br&gt;作为一个&lt;d</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="HTML" scheme="https://www.coder17.com/tags/HTML/"/>
    
    <category term="微博" scheme="https://www.coder17.com/tags/%E5%BE%AE%E5%8D%9A/"/>
    
    <category term="JavaScript" scheme="https://www.coder17.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>EasyX 框架实现透明图片显示的 trick</title>
    <link href="https://www.coder17.com/posts/20160217-easyx-trans-trick/"/>
    <id>https://www.coder17.com/posts/20160217-easyx-trans-trick/</id>
    <published>2016-02-16T19:45:00.000Z</published>
    <updated>2016-02-16T19:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>很多学校教授 C++ 图形编程时，为了规避 Windows 下 VC++ 较为复杂的绘图 API，都会（强制）要求学生使用 <a href="http://easyx.cn/">EasyX</a> 这一绘图框架。该框架十分简陋地实现了初学者所需的图形功能。同时，此框架也存在大量不足，最为不便的就是不支持 png 格式图片，不支持透明背景绘图。</p><p>鉴于此框架的 putimage 函数支持三元光栅操作码，我们可以利用掩码位图来变相实现透明背景绘图。<br>参考了 <a href="http://code.qtuba.com/article-15636.html">http://code.qtuba.com/article-15636.html</a> </p><h2 id="1-创建一个掩码位图"><a href="#1-创建一个掩码位图" class="headerlink" title="1. 创建一个掩码位图"></a>1. 创建一个掩码位图</h2><p>掩码位图是一个单色位图，它的黑色部分就是位图显示时要保留的部分，白色部分就是要透明的部分。这里使用马里奥举例：<br>原图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/1.png"> </p><p>掩码图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/2.png"> </p><h2 id="2-把掩码位图用SRCINVERT（XOR）方式叠加到原图"><a href="#2-把掩码位图用SRCINVERT（XOR）方式叠加到原图" class="headerlink" title="2.把掩码位图用SRCINVERT（XOR）方式叠加到原图"></a>2.把掩码位图用SRCINVERT（XOR）方式叠加到原图</h2><p>白色XOR白色=黑色（白色的RGB都是255，1^1=0），黑色XOR任何颜色=原颜色（0^0=0，0^1=1）。操作完成后原图的透明区应被黑色填充。<br>也可以直接用黑色填充原图。 </p><h2 id="3-把掩码位图用SRCAND（AND）方式叠加背景中"><a href="#3-把掩码位图用SRCAND（AND）方式叠加背景中" class="headerlink" title="3.把掩码位图用SRCAND（AND）方式叠加背景中"></a>3.把掩码位图用SRCAND（AND）方式叠加背景中</h2><p>白色and任何颜色=原颜色(1&amp;1=1,1&amp;0=0)，黑色and任何颜色=黑色（0&amp;0=0，0&amp;1=0）。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/3.png"> </p><h2 id="4-把叠加过的原图用SRCPAINT-or-方式叠加到背景中"><a href="#4-把叠加过的原图用SRCPAINT-or-方式叠加到背景中" class="headerlink" title="4.把叠加过的原图用SRCPAINT(or)方式叠加到背景中"></a>4.把叠加过的原图用SRCPAINT(or)方式叠加到背景中</h2><p>黑色or任何颜色=原颜色(0|1=1,0|0=0)。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160217-easyx-trans-trick/4.png"> </p><hr><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">initgraph</span>(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line">    <span class="comment">// Load background</span></span><br><span class="line">    <span class="built_in">loadimage</span>(<span class="literal">NULL</span>, _T(<span class="string">&quot;img\\background.jpg&quot;</span>));</span><br><span class="line">    <span class="comment">// Load mario</span></span><br><span class="line">    IMAGE mariox, mario;</span><br><span class="line">    <span class="built_in">loadimage</span>(&amp;mariox, _T(<span class="string">&quot;img\\mariox.bmp&quot;</span>));</span><br><span class="line">    <span class="built_in">loadimage</span>(&amp;mario, _T(<span class="string">&quot;img\\mario.bmp&quot;</span>));</span><br><span class="line">    <span class="comment">// Trick to display transparent image</span></span><br><span class="line">    <span class="built_in">SetWorkingImage</span>(&amp;mario);</span><br><span class="line">    <span class="built_in">putimage</span>(<span class="number">0</span>, <span class="number">0</span>, &amp;mariox, SRCINVERT);</span><br><span class="line">    <span class="built_in">SetWorkingImage</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">putimage</span>(<span class="number">400</span>, <span class="number">465</span>, &amp;mariox, SRCAND);</span><br><span class="line">    <span class="built_in">putimage</span>(<span class="number">400</span>, <span class="number">465</span>, &amp;mario, SRCPAINT);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="built_in">closegraph</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p align = right>by Sykie Chen2016.2.17</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多学校教授 C++ 图形编程时，为了规避 Windows 下 VC++ 较为复杂的绘图 API，都会（强制）要求学生使用 &lt;a href=&quot;http://easyx.cn/&quot;&gt;EasyX&lt;/a&gt; 这一绘图框架。该框架十分简陋地实现了初学者所需的图形功能。同时，此框架也存在</summary>
      
    
    
    
    <category term="Windows" scheme="https://www.coder17.com/categories/Windows/"/>
    
    
    <category term="C" scheme="https://www.coder17.com/tags/C/"/>
    
    <category term="EasyX" scheme="https://www.coder17.com/tags/EasyX/"/>
    
    <category term="trick" scheme="https://www.coder17.com/tags/trick/"/>
    
    <category term="图片" scheme="https://www.coder17.com/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>多说 JS CSS 的本地化与站长回复和 UA 信息的添加</title>
    <link href="https://www.coder17.com/posts/20160212-duoshuo-ua/"/>
    <id>https://www.coder17.com/posts/20160212-duoshuo-ua/</id>
    <published>2016-02-11T16:51:00.000Z</published>
    <updated>2016-02-11T16:51:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>多说评论系统被很多中文网站使用。网上有很多添加站长回复标记和浏览器操作系统信息的方法。但大部分均已随着多说 JS 的更新而不再有效或存在兼容性问题。我参考了这些教程并重写了相关代码以改进显示效果。 </p><p>先上图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160212-duoshuo-ua/1.png"> </p><p>可以解析 IE/Egde, Chrome, Safari, Firefox, Opera 等浏览器以及常见的几种国内壳浏览器。微博微信内置浏览器也可解析。<br>系统方面除了做了 iPhone/iPad 区分外，还加入了对1%的WP支持=。=<br>已有的教程多修改为带圆角矩形背景的文字， <del>难看的一笔</del> 不是十分的优雅。因此我改为了无背景，彩色加粗文字。<br>以及在无法识别的时候会显示 <del>奇怪♂的浏览器</del> 和 <del>奇怪♂的操作系统</del> 字样 <del>增加情趣</del> 提示用户。 </p><h2 id="1-多说-JS-和-CSS-的本地化"><a href="#1-多说-JS-和-CSS-的本地化" class="headerlink" title="1. 多说 JS 和 CSS 的本地化"></a>1. 多说 JS 和 CSS 的本地化</h2><p>多说引用的 JS 脚本地址为 <code>http://static.duoshuo.com/embed.js</code>，搞下来，改个名字或者不改也行。我这里改为 <code>ds_embed.js</code> 并放置到主题目录 <code>/source/js/</code> 中。 </p><p>多说的 CSS 分为两部分，其一为通用部分，即多说后台设置的“主题”所包含的。这部分无需本地化。其二为多说后台“自定义CSS”的部分。这部分严格来说也无需本地化，但自己写的代码还是存成自己的文件比较稳妥，也便于本地维护，放在后台谁知道它哪天抽了就没了。 </p><p>将多说后台“自定义CSS”中已有的内容剪切，写入到主题目录 <code>/source/css/duoshuo.css</code> 中。 </p><p>然后修改<code>多说公共JS代码</code>，即我在 <a href="http://www.devchen.com/blog/coding/HTML/hexo-theme/">Hexo Landscape 主题修改优化</a> 一文中插入到 <code>layout\_partial\after-footer.ejs</code> 文件中的部分代码。<br>原来的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">&#x27;https:&#x27;</span> ? <span class="string">&#x27;https:&#x27;</span> : <span class="string">&#x27;http:&#x27;</span>) + <span class="string">&#x27;//static.duoshuo.com/embed.js&#x27;</span>;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ds.src = <span class="string">&#x27;/js/ds_embed.js&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后在 <code>layout\_partial\head.ejs</code> 中合适的位置插入 css 引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/css/duoshuo.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>更新网站，若评论框正常显示则本地化成功。 </p><h2 id="2-添加-CSS-样式"><a href="#2-添加-CSS-样式" class="headerlink" title="2. 添加 CSS 样式"></a>2. 添加 CSS 样式</h2><p>在 <code>duoshuo.css</code> 中插入以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* duoshuo UA marks */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.ua</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_other</span>, <span class="selector-class">.os_other</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#000</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_ie</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#428bca</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_firefox</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f0ad4e</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_maxthon</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#7373B9</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_ucweb</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF740F</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_sogou</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#78ACE9</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_mi</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF4A00</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_chrome</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#EE6252</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_qq</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3D88A8</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_apple</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#E95620</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ua_opera</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9534f</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.os_vista</span>,<span class="selector-class">.os_2000</span>,<span class="selector-class">.os_windows</span>,<span class="selector-class">.os_xp</span>,<span class="selector-class">.os_7</span>,<span class="selector-class">.os_8</span>,<span class="selector-class">.os_8_1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#39b3d7</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.os_android</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#98C13D</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_ubuntu</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#DD4814</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_linux</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3A3A3A</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_mac</span>, <span class="selector-class">.os_ios</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_unix</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#006600</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.os_nokia</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#014485</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* admin reply mark */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#ds-reset</span> <span class="selector-tag">div</span> <span class="selector-tag">a</span><span class="selector-class">.sskadmin</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3B74AC</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#3B74AC</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* user name color */</span></span><br><span class="line"><span class="selector-id">#ds-reset</span> <span class="selector-tag">span</span><span class="selector-class">.ds-user-name</span>, <span class="selector-id">#ds-reset</span> <span class="selector-tag">a</span><span class="selector-class">.ds-highlight</span>&#123;</span><br><span class="line">    <span class="comment">/*background-color: #777 !important;</span></span><br><span class="line"><span class="comment">border-color: #777 !important;</span></span><br><span class="line"><span class="comment">border-radius: 4px;</span></span><br><span class="line"><span class="comment">padding: 0 5px!important;*/</span></span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#444</span> <span class="meta">!important</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码用途在注释中已有说明，不再赘述。最下面两块 <code>#ds-reset</code> 开头的样式会覆盖默认主题中的同名样式，以修改在主题中定义的用户名颜色，而不必本地化主题 CSS。 </p><h2 id="3-修改-ds-embed-js"><a href="#3-修改-ds-embed-js" class="headerlink" title="3. 修改 ds_embed.js"></a>3. 修改 ds_embed.js</h2><p>这一步非常重要，修改不慎就会导致整个评论框无法显示。而且这部分内容也与当前的多说 js 版本相关联。本文中提到的代码基于 2016-02-12 版本的 embed.js，如果今后多说修改了相关代码可能失效，到时我应该会更新。 </p><h3 id="3-1-添加新函数"><a href="#3-1-添加新函数" class="headerlink" title="3.1 添加新函数"></a>3.1 添加新函数</h3><p>首先在文件开头处添加三个新的函数： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// admin reply</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sskadmin</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ssk = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(e.user_id==<span class="number">11838425</span>)&#123;</span><br><span class="line">        ssk = <span class="string">&#x27; sskadmin&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ssk;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// UA parser</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ua</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">    <span class="keyword">var</span> outputer = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (r = e.match(<span class="regexp">/MSIE\s([^\s|;]+)/gi</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ie&quot;&gt;IE &#x27;</span> + r[<span class="number">0</span>].replace(<span class="string">&#x27;MSIE&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Edge\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ie&quot;&gt;Edge &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/FireFox\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_firefox&quot;&gt;FireFox &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Maxthon([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_maxthon&quot;&gt;Maxthon&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/UBrowser([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ucweb&quot;&gt;UC &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MetaSr/ig</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_sogou&quot;&gt;Sougou&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MicroMessenger\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;WeChat &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/QQBrowser\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;QQ &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/QQ\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;QQ &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MiuiBrowser\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_mi&quot;&gt;MIUI &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Chrome([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_chrome&quot;&gt;Chrome &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/safari\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_apple&quot;&gt;Safari &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Opera[\s|\/]([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_opera&quot;&gt;Opera &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Trident\/7.0/gi</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_ie&quot;&gt;IE 11&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/weibo__([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">&quot;__&quot;</span>);</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_qq&quot;&gt;Weibo &#x27;</span> + r1[<span class="number">1</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        outputer = <span class="string">&#x27;&lt;span class=&quot;ua_other&quot;&gt;奇怪♂的浏览器&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> outputer+<span class="string">&quot;&lt;/span&gt; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">os</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">    <span class="keyword">var</span> os = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (e.match(<span class="regexp">/Windows/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.match(<span class="regexp">/NT 5.1/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_xp&quot;&gt;Windows XP&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.1/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_7&quot;&gt;Windows 7&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.2/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_8&quot;&gt;Windows 8&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.3/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_8_1&quot;&gt;Windows 8.1&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 10.0/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_8_1&quot;&gt;Windows 10&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 6.0/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_vista&quot;&gt;Windows Vista&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/NT 5/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_2000&quot;&gt;Windows 2000&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Phone OS ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">            <span class="comment">//WP7-7.5</span></span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_windows&quot;&gt;Windows &#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Phone ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">            <span class="comment">//WP8+</span></span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_windows&quot;&gt;Windows &#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            os = <span class="string">&#x27;&lt;span class=&quot;os_windows&quot;&gt;Windows&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/android ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_android&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/iPhone OS ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_ios&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].replace(<span class="string">&#x27;iPhone OS&#x27;</span>, <span class="string">&#x27;iPhone&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/CPU OS ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_ios&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].replace(<span class="string">&#x27;CPU OS&#x27;</span>, <span class="string">&#x27;iPad&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/ubuntu/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_ubuntu&quot;&gt;Ubuntu&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/linux/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_linux&quot;&gt;Linux&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Mac OS X ([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_mac&quot;&gt;&#x27;</span> + r[<span class="number">0</span>].split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">0</span>].replace(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;.&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/unix/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_unix&quot;&gt;Unix&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/symbian/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_nokia&quot;&gt;Symbian&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/meego/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_nokia&quot;&gt;MeeGo&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        os = <span class="string">&#x27;&lt;span class=&quot;os_other&quot;&gt;奇怪♂的操作系统&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> os+<span class="string">&quot;&lt;/span&gt;&quot;</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中第一个函数中的 <code>11838425</code> 是我的多说 user ID，在多说后台查看。<br>浏览器解析的部分我没有加入太多的国产壳浏览器解析，我觉得访问这个网站的人应该不会 low 到用大数字之类的奇怪浏览器吧。 </p><h3 id="3-2-修改输出格式"><a href="#3-2-修改输出格式" class="headerlink" title="3.2 修改输出格式"></a>3.2 修改输出格式</h3><p>查找<br><code>r.url?(t+=&#39;&lt;a class=&quot;ds-user-name ds-highlight&quot;</code> …<br>这部分代码<br>在 class 中插入一段，变成： </p><p><code>r.url?(t+=&#39;&lt;a class=&quot;ds-user-name&#39;+sskadmin(s.author)+&#39; ds-highlight&quot; data-qqt-account=&quot;&#39;+(r.</code> … </p><p>这步是添加了站长回复的标记<br>后边不远处有一段 </p><p><code>t+=&#39; data-qqt-account=&quot;&#39;+(r.qqt_account||&quot;&quot;)+&#39;&quot;&gt;&#39;+u(r.name)+&quot;&lt;/span&gt;&quot;),</code> </p><p>在这后面插入以下代码： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UA parse</span></span><br><span class="line">t+=<span class="string">&#x27;&lt;span class=&quot;ua&quot;&gt;&#x27;</span> + ua(s.agent) +<span class="string">&#x27;&lt;/span&gt;&lt;span class=&quot;ua&quot;&gt;&#x27;</span>+ os(s.agent) + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>,</span><br></pre></td></tr></table></figure><p>这一步是添加了 UA 信息显示 </p><p>更新网站，查看评论框效果，如果评论框不显示则说明 JS 写得有问题，可能的原因有： </p><ol><li>多说 JS 版本更新了，部分对象名改变； </li><li>你复制错了。(*/ω＼*) </li></ol><p>修改后的完整代码在 GitHub: <a href="https://github.com/SykieChen/hexo-theme-hic17/blob/81343b17064034d09d1c51d6e44829dcbb57a5eb/source/js/ds_embed.js">https://github.com/SykieChen/hexo-theme-hic17/blob/81343b17064034d09d1c51d6e44829dcbb57a5eb/source/js/ds_embed.js</a> </p><p>本文的所有修改均已合并到 HiC17 Hexo主题中。地址： <a href="https://github.com/SykieChen/hexo-theme-hic17">https://github.com/SykieChen/hexo-theme-hic17</a> </p><hr><p>参考了：<br><a href="http://myhloli.com/duoshuo-ua-and-admin-tab.html">http://myhloli.com/duoshuo-ua-and-admin-tab.html</a><br><a href="http://ssk.91txh.com/209">http://ssk.91txh.com/209</a><br><a href="https://segmentfault.com/a/1190000002707162">https://segmentfault.com/a/1190000002707162</a> </p><hr><p align = right>by Sykie Chen2016.2.12</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;多说评论系统被很多中文网站使用。网上有很多添加站长回复标记和浏览器操作系统信息的方法。但大部分均已随着多说 JS 的更新而不再有效或存在兼容性问题。我参考了这些教程并重写了相关代码以改进显示效果。 &lt;/p&gt;
&lt;p&gt;先上图： &lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/image</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="HTML" scheme="https://www.coder17.com/tags/HTML/"/>
    
    <category term="CSS" scheme="https://www.coder17.com/tags/CSS/"/>
    
    <category term="前端" scheme="https://www.coder17.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="多说" scheme="https://www.coder17.com/tags/%E5%A4%9A%E8%AF%B4/"/>
    
    <category term="JS" scheme="https://www.coder17.com/tags/JS/"/>
    
    <category term="UA" scheme="https://www.coder17.com/tags/UA/"/>
    
  </entry>
  
  <entry>
    <title>Favicon 站点图标的各平台适配与移动端优化</title>
    <link href="https://www.coder17.com/posts/20160126-favicon/"/>
    <id>https://www.coder17.com/posts/20160126-favicon/</id>
    <published>2016-01-25T19:15:00.000Z</published>
    <updated>2016-01-25T19:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>网站的 favicon 图标在各平台上的显示效果很难保证。而这个图标又是网站识别的重要组成部分。这里详细介绍一下在 Android, iOS 以及 Windows 三大平台上网站图标效果的优化。 </p><h2 id="1-favicon-图标的格式"><a href="#1-favicon-图标的格式" class="headerlink" title="1. favicon 图标的格式"></a>1. favicon 图标的格式</h2><p>早期网站多使用 ico 格式，该格式允许一个文件里同时包含多个分辨率版本的图标。缺点是显示时必须拉取整个文件，若嵌入的图标较大则会导致不必要的带宽开销。 </p><p>而如今更流行的是嵌入多个 png 格式图标并作出分别说明，根据需要拉取合适的图标即可。这样的缺点是需要写入很多行的 meta 标签。 </p><h2 id="2-favicon-图标的大小"><a href="#2-favicon-图标的大小" class="headerlink" title="2. favicon 图标的大小"></a>2. favicon 图标的大小</h2><p>这就是一个大坑了。<br>桌面端浏览器中，图标为 16×16；添加到 Windows 任务栏的时候，需要 32×32 以及 48×48 大小。<br>而 Windows 8 以上的磁贴界面中，我们还需要 70×70, 144×144, 150×150, 310×150, 310×310 大小的图标，以及指定的背景颜色。<br>而在移动端就更加令人呵呵呵了。早期非 Retina 屏幕的 iOS 设备中只需要 57×57，而 iPad 和 Retina 屏幕出现后，要想完成强迫症的完美适配，你需要8种尺寸的图标： </p><table><thead><tr><th>Device</th><th>Screen</th><th>iOS ver</th><th>Size</th></tr></thead><tbody><tr><td>iPhone</td><td>Classic</td><td>6-</td><td>57×57</td></tr><tr><td></td><td></td><td>7+</td><td>60×60</td></tr><tr><td></td><td>Retina</td><td>6-</td><td>114×114</td></tr><tr><td></td><td></td><td>7+</td><td>120*120</td></tr><tr><td>iPad</td><td>Classic</td><td>6-</td><td>72×72</td></tr><tr><td></td><td></td><td>7+</td><td>76×76</td></tr><tr><td></td><td>Retina</td><td>6-</td><td>144×144</td></tr><tr><td></td><td></td><td>7+</td><td>152×152</td></tr></tbody></table><p>诶嘿嘿，是不是很酸爽啊胖友？这才哪到哪啊。 </p><p>还有 Android / Chrome 呢=。= </p><p>根据屏幕分辨率不同，要想完美适配 Android 系统的添加到桌面功能，你还需要 36×36, 48×48, 72×72, 96×96, 144×144, 192×192 的图标。以及在移动版 Chrome 中还有一个新加入的标签来指定多任务视图的标题颜色。 </p><p>你可能发现有很多尺寸在不同平台上有重复的嘛，然后开始怀疑我在吓唬人。好吧，虽然尺寸是一样的，然而如果你在 Android 平台上看到一个 iOS 风格的圆角矩形图标下面写着 HKEY_C17，你想不想分分钟砍死我啊诶嘿嘿？ </p><p>所以我们需要为不同的平台准备不同的基础图标。<br>啊还有 Safari 的单色图标我还没说呢。 </p><p>做一个前端是不是棒棒哒？诶嘿嘿嘿嘿爱我你怕了么（逃 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/1.png"> </p><h2 id="3-人民的大救星：RealFaviconGenerator"><a href="#3-人民的大救星：RealFaviconGenerator" class="headerlink" title="3. 人民的大救星：RealFaviconGenerator"></a>3. 人民的大救星：<a href="http://realfavicongenerator.net/">RealFaviconGenerator</a></h2><p>前端的朋友们还是有救的，这个萌萌哒平台可以生成我们需要的所有东西。<br>首先打开 <a href="http://realfavicongenerator.net/">http://realfavicongenerator.net/</a> 会让你上传高清基础图标，最好是270像素以上。<br>上传并生成后，可以单独修改各平台的显示参数或单独上传图标。这里推荐做一个透明背景带阴影的 Android 版、一个自带白色背景和阴影的 iOS 版，和一个无阴影无背景还把文字镂空了的 Safari 版。<br><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/2.png"> </p><p>iOS 效果如图 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/3.png"> </p><p>Android 效果如图 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/4.png"> </p><p>单独设置镂空文字的 Safari 版本后如图，避免色块里的文字无法显示。 </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/5.png"> </p><p>镂空并单色化的 Windows 磁贴效果<br>然后在最下面填入你的图标需要放置的相对路径，就可以生成图标包和对应的 HTML 代码辣！ </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/6.png"> </p><p>单击下载图标包，来让我们看看都放了啥在里面： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/7.png"> </p><p>29个文件！天了噜！少掉了多少头发啊！<br>然后复制 HTML 代码插到你的 head 里面就行辣！<br>我的代码如下： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;57x57&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-57x57.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;60x60&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-60x60.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;72x72&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-72x72.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;76x76&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-76x76.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;114x114&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-114x114.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;120x120&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-120x120.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;144x144&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-144x144.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;152x152&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-152x152.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;180x180&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/apple-touch-icon-180x180.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon-32x32.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;32x32&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/android-chrome-192x192.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;192x192&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon-96x96.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;96x96&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon-16x16.png&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;16x16&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;manifest&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/manifest.json&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;mask-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/safari-pinned-tab.svg&quot;</span> <span class="attr">color</span>=<span class="string">&quot;#5bbad5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/images/favicon.ico&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-TileColor&quot;</span> <span class="attr">content</span>=<span class="string">&quot;#2d89ef&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-TileImage&quot;</span> <span class="attr">content</span>=<span class="string">&quot;/css/images/mstile-144x144.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-config&quot;</span> <span class="attr">content</span>=<span class="string">&quot;/css/images/browserconfig.xml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;theme-color&quot;</span> <span class="attr">content</span>=<span class="string">&quot;#330066&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Android 效果如图： </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/8.png"> </p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20160126-favicon/9.png"> </p><p>iOS 因为 Pad 放在客厅我懒得拿了就不截图了</p><p>全部部署完成后，可以单击下面的 check your favicon 测试一下部署是否成功。<br>感谢 Real Favicon Generator，如果可能的话可以点击下面的链接捐助他们！<br><a href="http://realfavicongenerator.net/donate">http://realfavicongenerator.net/donate</a> </p><p align = right>by Sykie Chen2016.1.26</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网站的 favicon 图标在各平台上的显示效果很难保证。而这个图标又是网站识别的重要组成部分。这里详细介绍一下在 Android, iOS 以及 Windows 三大平台上网站图标效果的优化。 &lt;/p&gt;
&lt;h2 id=&quot;1-favicon-图标的格式&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="Services" scheme="https://www.coder17.com/categories/Services/"/>
    
    
    <category term="favicon" scheme="https://www.coder17.com/tags/favicon/"/>
    
    <category term="HTML" scheme="https://www.coder17.com/tags/HTML/"/>
    
    <category term="CSS" scheme="https://www.coder17.com/tags/CSS/"/>
    
    <category term="前端" scheme="https://www.coder17.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>格式化 JSON 的 Chrome 插件</title>
    <link href="https://www.coder17.com/posts/json-plugin/"/>
    <id>https://www.coder17.com/posts/json-plugin/</id>
    <published>2016-01-02T15:00:00.000Z</published>
    <updated>2016-01-02T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%A0%BC%E5%BC%8F%E5%8C%96%20JSON%20%E7%9A%84%20Chrome%20%E6%8F%92%E4%BB%B6/0.png" alt="img"></p><p>安利一个格式化显示 JSON 的 Chrome 插件，JSONView：<a href="http://jsonview.com/">http://jsonview.com/</a></p><p>这货不光有 Chrome 插件，还有 Firefox 的。</p><p>使用前：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%A0%BC%E5%BC%8F%E5%8C%96%20JSON%20%E7%9A%84%20Chrome%20%E6%8F%92%E4%BB%B6/image-20210421032053698.png" alt="image-20210421032053698"></p><p>使用后：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/%E6%A0%BC%E5%BC%8F%E5%8C%96%20JSON%20%E7%9A%84%20Chrome%20%E6%8F%92%E4%BB%B6/image-20210421032128503.png" alt="image-20210421032128503"></p><p>是不是一口气上五楼都不费劲了</p><p>Chrome 插件链接：</p><p><a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc">https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src= &quot;/images/loading.gif&quot; data-lazy-src=&quot;/blogimg/%E6%A0%BC%E5%BC%8F%E5%8C%96%20JSON%20%E7%9A%84%20Chrome%20%E6%8F%92%E4%BB%B6/0.pn</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="JSON" scheme="https://www.coder17.com/tags/JSON/"/>
    
    <category term="Chrome 插件" scheme="https://www.coder17.com/tags/Chrome-%E6%8F%92%E4%BB%B6/"/>
    
    <category term="格式化" scheme="https://www.coder17.com/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>如何在污染指数800+的北京活下去：关于防雾霾半面罩的选择</title>
    <link href="https://www.coder17.com/posts/20151213-masks/"/>
    <id>https://www.coder17.com/posts/20151213-masks/</id>
    <published>2015-12-12T18:43:00.000Z</published>
    <updated>2015-12-12T18:43:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-1-污染情况"><a href="#0-1-污染情况" class="headerlink" title="0.1 污染情况"></a>0.1 污染情况</h2><p>最近北京的空气又爆炸，污染300多已经算低了。昨天晚上空气指数400多的时候下楼拿外卖，一进走廊就能明显感觉到嗓子火辣辣的，我立刻回头戴上了 9502 口罩，然而电梯到一楼一开门时隔着口罩也能闻到空气中呛人的味道。一出楼门，能见度不足二十米，甚至觉得眼睛都开始不适。隔着口罩也能感觉到空气的味道更加明显。</p><p>前段时间空气污染 800+ 的时候我曾经用两天时间将一个 9501V 口罩戴得漆黑一片。加上最近嗓子不舒服的频率越来越高，我决定好好研究一下呼吸防护的问题。</p><h2 id="0-2-防护手段"><a href="#0-2-防护手段" class="headerlink" title="0.2 防护手段"></a>0.2 防护手段</h2><p>首先要明确一下各种呼吸防护等级标准，如下表：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/1.jpg"></p><p>N只防干性颗粒，P与R可以防油性颗粒。不幸的是，机动车尾气大部分由油性颗粒组成。交通部说空气污染是供暖的锅，住建部说空气污染是汽车尾气的锅。根据我戴 9502 口罩还能闻到雾霾味道这个情况来看，我倾向于相信住建部的说法。即佩戴 N95 等级的口罩（如 3M 9501/9502）并不能完全抵御雾霾。N90 等级（如 3M9001/9002/9003(V)）的就更别提了。</p><p>我又查阅了 P95 等级口罩（如 3M 8577/8576），售价均为 20+ RMB，根据之前重污染时2-3天更换一个的频率我是难以负担的。相比于 N95 口罩2-3 RMB 的售价不知高到哪里去了。</p><p>在查阅的过程中我了解到不光可以戴口罩，还可以直接上可以重复使用的面罩。面罩首次购买成本较高，但使用时更换的耗材成本相较于一次性口罩低了不少。<br>面罩就分为半面罩和全面罩。全面罩如图所示，随便感受一下。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/2.png"></p><p>生化危机既视感。戴出去太夸张了，而且售价也十分可观，图里的 6800 七件套 400+ RMB。<br>半面罩没有护目镜部分，造型更加正常一些，价格也在可以接受的程度内。</p><p>3M 的面罩有一大堆：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/3.png"></p><p>卖的比较好的主要有 6000、7500 和 3000 系列，别的有什么区别我也没太看出来，就不研究了。<br>半面罩的主要组成有本体、滤毒盒、过滤棉和过滤棉盖。不使用滤毒盒时可以将滤毒盒更换为过滤棉底座+过滤棉或直接接过滤棉。具体的图见下。下面分别讲一下各部分。</p><h2 id="1-面罩主体"><a href="#1-面罩主体" class="headerlink" title="1. 面罩主体"></a>1. 面罩主体</h2><p>3000 系列有 3100 小号、3200 中号和 3300 大号，分别给女性、男性和大脸男性使用。<br>说我要用 3300 那些你们过来，我保证不打死你们。<br>###1.1 3000 系列###<br>有一个滤毒盒承接口，应对平时的小流量呼吸无压力，运动时佩戴可能就比较捉急了。<br>3200 面罩搭配滤棉底座如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/4.png"></p><p>3200 搭配滤毒盒如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/5.png"></p><h3 id="1-2-6000-系列"><a href="#1-2-6000-系列" class="headerlink" title="1.2 6000 系列"></a>1.2 6000 系列</h3><p>有两个滤毒盒/过滤棉接口，可以应对大流量的呼吸，阻力较小，缺点是造型太特么夸张了，而且很重，戴久了脖子必然难受。同样分为 6100/6200/6300 对应不同大小的脸。</p><p>6200 的各种搭配如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/6.png"></p><p>配滤毒盒的戴上效果如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/7.png"></p><h3 id="1-3-7500-系列"><a href="#1-3-7500-系列" class="headerlink" title="1.3 7500 系列"></a>1.3 7500 系列</h3><p>跟 6000 系列的区别基本只在于 7500 是硅橡胶的，更舒服一点。同样分为 7501/7502 对应脸部大小。</p><p>7502 如图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/8.png"></p><h2 id="2-过滤棉"><a href="#2-过滤棉" class="headerlink" title="2. 过滤棉"></a>2. 过滤棉</h2><p>过滤棉对应不同的面罩有不同的型号，根据国家标准 GB2890-2009，等级分为三种：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/9.png"></p><p>即最基本的 P1 型也有 N95 的过滤效果。<br>在 3M 官网摘抄如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/10.png"></p><p>来源：<a href="http://multimedia.3m.com/mws/media/483537O/7500.pdf">http://multimedia.3m.com/mws/media/483537O/7500.pdf</a></p><p>其中 2000 系列滤棉直接接在面罩上，5N/3N 系列滤棉要配合滤毒盒使用。<br>3N11 滤棉的图参考上面 3200 面具的图。<br>2091 滤棉如图所示：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/11.png"></p><p>迷人的粉色，妹子可以考虑一下=。=</p><h2 id="3-滤毒盒"><a href="#3-滤毒盒" class="headerlink" title="3. 滤毒盒"></a>3. 滤毒盒</h2><p>终于到了重点了，滤毒盒这个东西如果不装的话，面罩的优势就体现不出来了。<br>一个滤毒盒可以使用一个月左右（每天8小时）。主要分类如下：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/12.png"></p><p>所有的滤毒盒上都有颜色环，颜色遵循国家标准 GB2890-2009：<br>来源：<a href="http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0">http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0</a></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/13.png"></p><p>常用的有 6001/3301 和 6003/3303 滤毒盒，6000 和 3300 系列分别对应相应的半面具。<br>6001/3301 主要防有机气体，褐色环：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/14.png"></p><p>6003/3303 还兼防二氧化硫气体，褐色、黄色双环，但是比 6001/3301 贵二十多块钱，不过我觉得这个钱还是有必要的，毕竟尾气里二氧化硫含量不低。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/15.png"></p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>终于简单地说完了，各种型号真是要人命。总结起来我决定买 3200面具 + 3303滤毒盒 + 3N11滤棉 组合，全套售价 60-70 元左右，每周更换一次 3N11 滤棉，售价 1.6 元，每月更换一次  3303 滤毒盒，售价 34 元。<br>对于爱出汗的人有个神器，3M 389 吸汗垫，售价 2-3 元：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/16.png"></p><p>这个组合基本在保命和看起来正常之间取得了平衡= =<br>其实这个污染情况看起来正不正常已经不那么重要了。我已经好几次在学校里看见戴着巨大的带俩滤毒盒的 6200 面罩的妹子了，在生存面前，好不好看先缓一缓吧。选择了北京为的是更好的发展环境，污染的空气也是选择的一部分。自己选的霾，跪着也要吸完。</p><p>最后不得不说，3M 真是人民的好帮手，生活的好伙伴啊= =</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151213-masks/17.png"></p><p>祝大家生活健康，不被熏死= =<br>以上涉及产品在 <code>X宝</code> 都能买到</p><p>参考：<br><a href="http://www.zhihu.com/question/38273401">http://www.zhihu.com/question/38273401</a><br><a href="http://www.zhihu.com/question/25953227">http://www.zhihu.com/question/25953227</a><br><a href="http://www.zhihu.com/question/20749979">http://www.zhihu.com/question/20749979</a><br><a href="http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0">http://www.fjcodc.com.cn/article/download.jsp?ufid=769&amp;idx=0</a><br><a href="http://multimedia.3m.com/mws/media/652862O/2091p100.pdf">http://multimedia.3m.com/mws/media/652862O/2091p100.pdf</a><br><a href="http://multimedia.3m.com/mws/media/483537O/7500.pdf">http://multimedia.3m.com/mws/media/483537O/7500.pdf</a><br><a href="http://multimedia.3m.com/mws/media/5184O/particulate-filter-2096-p100.pdf">http://multimedia.3m.com/mws/media/5184O/particulate-filter-2096-p100.pdf</a></p><p align = right>by Sykie Chen2015.12.13</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0-1-污染情况&quot;&gt;&lt;a href=&quot;#0-1-污染情况&quot; class=&quot;headerlink&quot; title=&quot;0.1 污染情况&quot;&gt;&lt;/a&gt;0.1 污染情况&lt;/h2&gt;&lt;p&gt;最近北京的空气又爆炸，污染300多已经算低了。昨天晚上空气指数400多的时候下楼拿外卖，一进</summary>
      
    
    
    
    <category term="Life" scheme="https://www.coder17.com/categories/Life/"/>
    
    
    <category term="雾霾" scheme="https://www.coder17.com/tags/%E9%9B%BE%E9%9C%BE/"/>
    
    <category term="口罩" scheme="https://www.coder17.com/tags/%E5%8F%A3%E7%BD%A9/"/>
    
    <category term="面罩" scheme="https://www.coder17.com/tags/%E9%9D%A2%E7%BD%A9/"/>
    
    <category term="空气质量" scheme="https://www.coder17.com/tags/%E7%A9%BA%E6%B0%94%E8%B4%A8%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>Mifare 1k S50 卡的简单探讨与破解</title>
    <link href="https://www.coder17.com/posts/20151019-nfc-mod/"/>
    <id>https://www.coder17.com/posts/20151019-nfc-mod/</id>
    <published>2015-10-23T08:17:00.000Z</published>
    <updated>2015-10-23T08:17:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>免责声明：本文仅供有能力的读者进行技术研究与探讨，本人在试验成功后已将卡片内数据改回。因阅读此文章而产生的一切后果与本人无关，一切责任由您自己承担。</strong></p><p><strong>警告：私自篡改 IC 卡内信息可能触犯法律，由于您自行改动您的卡片内的数据而引起的一切后果与本文作者无关。勿谓言之不预也。</strong></p><h2 id="0-背景"><a href="#0-背景" class="headerlink" title="0. 背景"></a>0. 背景</h2><p>学校公共洗衣机是用的是海尔的读卡洗衣机，与之配套的洗衣卡收费五十元，其中押金十元，内含十次洗衣次数，每次四元。</p><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h2><p>尝试用带 NFC 的手机（Galaxy S6）搭配 <a href="https://play.google.com/store/apps/details?id=de.syss.MifareClassicTool">Mifare Classic Tool</a> （链接为 Google Play，墙内可以使用 <a href="http://apkleecher.com/">Apk Leecher</a> 下载 Play 上的安装包） 读取洗衣卡发现其为 Mifare 1k 卡片。此卡片的加密早在2008年就被破解，只要有一个扇区未加密就可破解出其它所有扇区的密钥。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/1.png"></p><p>以下节选自 <a href="http://read.pudn.com/downloads102/doc/420451/M1%E5%8D%A1%E6%8A%80%E6%9C%AF%E6%89%8B%E5%86%8C[1].doc.doc">M1 卡技术手册</a> ：</p><ol><li>M1卡分为16个扇区，每个扇区由4块（块0、块1、块2、块3）组成，（我们也将16个扇区的64个块按绝对地址编号为0~63，存贮结构如下图所示：</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/2.png"></p><ol start="2"><li>第0扇区的块0（即绝对地址0块），它用于存放厂商代码，已经固化，不可更改。</li><li>每个扇区的块0、块1、块2为<strong>数据块</strong>，可用于存贮数据。</li></ol><p><strong>数据块</strong>可作两种应用：</p><pre><code>- 用作一般的数据保存，可以进行**读、写**操作。- 用作数据值，可以进行**初始化值、加值、减值、读值**操作。</code></pre><ol start="4"><li>每个扇区的块3为<strong>控制块</strong>，包括了密码A、存取控制、密码B。具体结构如下：</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/3.png"></p><ol start="5"><li>每个扇区的密码和存取控制都是独立的，可以根据实际需要设定各自的密码及存取控制。存取控制为4个字节，共32位，扇区中的每个块（包括数据块和控制块）的存取条件是由密码和存取控制共同决定的。<br>……</li></ol><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2. 操作"></a>2. 操作</h2><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/4.png"></p><p>如图，本卡中，所有区块的存取控制均为 FF 07 80 69 ，此值为 MF1 卡的出厂预设值，不必对照表格一步步解读，直接可以查得最后两位 69 无意义，前三位 FF 07 80 表示 0-2 三个块只要验证密码A或密码B即可读写。块3权限如下图：</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/5.png"></p><p>即：只有验证密码A正确了，才能做以下操作：<br>· 修改密码A；<br>· 修改控制字；<br>· 修改密码B，读出密码B。</p><p>可以看出，卡中只有第5扇区第1块中有数据，且为循环数据，猜测剩余次数存在此段数据中。除5扇区外其他扇区的密码A密码B均为 <code>FFFFFFFFFFFF</code>，第5扇区密码A未知，密码B为 <code>FFFFFFFFFFFF</code>。猜测为防止直接复制卡而修改了密码A，因此我采用直接复制整张卡的方法并不能读出正确的5扇区密码A。读卡机可能只使用密码A与卡通信，故复制卡试验时读卡机报错。<br>前文提到该卡已被破解，使用电脑连接读卡器可以方便地暴力猜解或通过验证漏洞破解密码A。但读卡器太特么贵了，并不能买得起。所以我们就不复制卡了。<br>然而虽然因密码A未知而不能复制，在密码B为默认密码的条件下可以直接用手机 NFC 修改5扇区1块的数据，无需复制卡片。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/6.png"></p><p>在卡机上正常刷卡一次后再次读取数据并对比，可见每个循环节内只有一个字节被修改，确定这个字节代表的就是剩余次数。<br>经过比对得到如下已知的对应关系。其中有数据字串的行为实际读出，其他的行为推测得出。</p><table><thead><tr><th>剩余次数</th><th>数据字串</th><th>关键字节</th><th>前4位</th><th>后4位</th></tr></thead><tbody><tr><td>10</td><td>F05A11EE00</td><td>5A</td><td>5</td><td>A</td></tr><tr><td>9</td><td>F06911EE00</td><td>69</td><td>6</td><td>9</td></tr><tr><td>8</td><td></td><td>78</td><td>7</td><td>8</td></tr><tr><td>7</td><td></td><td>87</td><td>8</td><td>7</td></tr><tr><td>6</td><td>F09611EE00</td><td>96</td><td>9</td><td>6</td></tr><tr><td>5</td><td></td><td>A5</td><td>A</td><td>5</td></tr><tr><td>4</td><td>F0B411EE00</td><td>B4</td><td>B</td><td>4</td></tr><tr><td>3</td><td>F0C311EE00</td><td>C3</td><td>C</td><td>3</td></tr><tr><td>2</td><td></td><td>D2</td><td>D</td><td>2</td></tr><tr><td>1</td><td></td><td>E1</td><td>E</td><td>1</td></tr></tbody></table><p>规律很简单。直接修改此字节即可完成洗衣卡次数的修改。</p><h2 id="3-验证与收尾"><a href="#3-验证与收尾" class="headerlink" title="3. 验证与收尾"></a>3. 验证与收尾</h2><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/7.png"></p><p>用 Mifare Classic Tool 写入数据，在卡机上测试成功显示十次。成功。<br><del>没有测试10以上的次数，因为新卡买回来就是十次。然而理论上应该最多可以修改为15次。有空再测试。</del><br>因为 <del>闲得蛋疼</del> 追求极致，我斗胆测试了 <code>0F</code> ，居然成功显示了15次。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/8.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/9.png"></p><p>然后就脑洞大开，最前面的 <code>F0</code> 会不会也是数据位呢？<br>于是测试了 <code>E10F</code> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/10.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/11.png"></p><p>哈哈哈哈居然真的显示31次。<br>我有一种要玩坏的预感。理论上限应该是255次吧，然而洗衣机上只有三位数码管，最多只能显示到99.0。好吧那就试试99.0。<br>把99转换成十六进制是63，所以写入 <code>96C3</code> 。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/12.png"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151019-nfc-mod/13.png"></p><p>作死成功，这实在是太E可赛艇了。θ..θ</p><p>将数据修改回去，避免产生法律纠纷。</p><p>此次修改严格来说并没有什么技术含量，这个洗衣卡硬件本身已经不安全，又使用弱口令，破解不费吹灰之力。然而洗衣服并不要多贵，破解它所获取的仅仅是 Mifare 卡片相关的知识。</p><p>此外，这种卡片是离线卡片，并没有服务器存储余额，因此可以破解。而公交卡、校园卡等卡片使用时会在线验证，与服务器上的余额数据比对，因此即使数据能读取修改，也无法真正修改余额，除非连人家的服务器一块儿黑了。</p><p>最后再次声明，本文仅用于技术学习与探讨。您阅读本文后进行的一切操作及其引起的后果与本文作者无关，本人不承担任何责任。</p><p align = right>by Sykie Chen2015.10.192015.10.23 mod</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;免责声明：本文仅供有能力的读者进行技术研究与探讨，本人在试验成功后已将卡片内数据改回。因阅读此文章而产生的一切后果与本人无关，一切责任由您自己承担。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;警告：私自篡改 IC 卡内信息可能触犯法律，由于您自行改动您</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="NFC" scheme="https://www.coder17.com/tags/NFC/"/>
    
    <category term="Mifare" scheme="https://www.coder17.com/tags/Mifare/"/>
    
    <category term="RFID" scheme="https://www.coder17.com/tags/RFID/"/>
    
    <category term="IC卡" scheme="https://www.coder17.com/tags/IC%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>联想 Y580 V8.01 BIOS 的更新</title>
    <link href="https://www.coder17.com/posts/20151002-Y580-bios/"/>
    <id>https://www.coder17.com/posts/20151002-Y580-bios/</id>
    <published>2015-10-02T13:51:00.000Z</published>
    <updated>2015-10-02T13:51:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/posts/20150903-win81-usb3/">上篇文章</a>里提到 Windows 8.1 中休眠后 USB 3.0 设备识别为 2.0 的问题。操作后确实可以解决睡眠和休眠后设备识别的问题，但 Win8.1 快速关机（假关机）后再启动又会识别为 2.0 设备。查找资料后确定为 BIOS 版本过老与 USB 3.0 及 Win8 兼容性不佳的问题。故刷新 BIOS。<br>美帝良心企业联想在国内发售的 Y580 行货均为 1366*768 低分屏，且 Win8 推出后并没有相应预装的版本。官网可下载到最新的 BIOS 固件版本为 5DCN40WW V2.07。该版本是针对 Win7 优化的。而 Y580 美版不仅有1080高分屏版本，还有预装了 Win8 的版本。该版本内置的 BIOS 版本为 5DCN90WW V8.01，该版本更好地支持了 Win8 的一些新特性，比如 UEFI 等。这里我只需要对 USB 3.0 更好的兼容性。</p><p>参考贴吧帖子 <a href="http://tieba.baidu.com/p/3959740413">http://tieba.baidu.com/p/3959740413</a> 。此处刷新的是含 EC 的完整版本。</p><ol><li>8.01 的 BIOS 刷新只能在纯 DOS 下进行，在<a href="http://pan.baidu.com/s/1sjl725R">这里</a>（提取码 ica4）下载 DOS 7 的 iso 镜像，用 UltraISO 写入U盘引导。</li><li>下载<a href="http://pan.baidu.com/s/1kTGlVoz">BIOS刷新包</a>（提取码 4b4a）解压后将 DOS 目录中所有文件拷入U盘。</li><li>重启，按 F12 选择U盘启动。键入 haltME.bat 回车，锁定 EC BIOS，完成后会自动重启。</li><li>再按 F12 进 DOS，运行 flash.bat 刷新 BIOS。屏幕会显示警告不要断开交流电，搞得我很紧张，难道电池不能供电么。</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/1.jpg"></p><ol start="5"><li>刷完自动重启，按 F2 进入 BIOS ，Boot -&gt; Boot Mode -&gt; Legacy Support 。起初我没选导致找不到U盘引导，默认的 UEFI 只能识别硬盘上的 Win8。</li></ol><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/2.jpg"></p><ol start="6"><li>重启进入 DOS，运行 unhaltME.bat，解锁 EC。</li><li>重启进入 BIOS，Load Default，保存重启。</li></ol><p>刷好以后如图，启动时 Windows 的 logo 会变为联想 logo ，且闪屏的分辨率提升了。进入系统后反复测试发现 USB 3.0 的问题已经彻底解决。</p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/3.jpg"></p><p><img src= "/images/loading.gif" data-lazy-src="/blogimg/20151002-Y580-bios/4.jpg"></p><h3 id="可能存在的问题"><a href="#可能存在的问题" class="headerlink" title="可能存在的问题"></a>可能存在的问题</h3><p>如果刷完进不去系统了，说明系统分区表不是 GPT ，不支持 UEFI。重复照第五步操作后，使用 DiskGenius 等分区软件将系统分区转为 GPT 分区表。</p><p align = right>by Sykie Chen2015.10.2</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;/posts/20150903-win81-usb3/&quot;&gt;上篇文章&lt;/a&gt;里提到 Windows 8.1 中休眠后 USB 3.0 设备识别为 2.0 的问题。操作后确实可以解决睡眠和休眠后设备识别的问题，但 Win8.1 快速关机（假关机）后再启动又会识</summary>
      
    
    
    
    <category term="Hacking" scheme="https://www.coder17.com/categories/Hacking/"/>
    
    
    <category term="Y580" scheme="https://www.coder17.com/tags/Y580/"/>
    
    <category term="联想" scheme="https://www.coder17.com/tags/%E8%81%94%E6%83%B3/"/>
    
    <category term="BIOS" scheme="https://www.coder17.com/tags/BIOS/"/>
    
  </entry>
  
</feed>
